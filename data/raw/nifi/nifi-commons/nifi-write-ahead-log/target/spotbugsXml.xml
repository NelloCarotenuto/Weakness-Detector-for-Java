
<BugCollection sequence='0' release='' analysisTimestamp='1570480211569' version='3.1.12' timestamp='1570477721888'><Project projectName='nifi-write-ahead-log'><Jar>C:\Users\Nello\Desktop\repo2\nifi\nifi-commons\nifi-write-ahead-log\target\classes</Jar><AuxClasspathEntry>C:\Users\Nello\.m2\repository\org\slf4j\slf4j-api\1.7.12\slf4j-api-1.7.12.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Nello\.m2\repository\org\apache\nifi\nifi-utils\0.4.0\nifi-utils-0.4.0.jar</AuxClasspathEntry><SrcDir>C:\Users\Nello\Desktop\repo2\nifi\nifi-commons\nifi-write-ahead-log\src\main\java</SrcDir><WrkDir>C:\Users\Nello\Desktop\repo2\nifi\nifi-commons\nifi-write-ahead-log\target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='392ea730ab5e885acf412e4541a75a8e' cweid='563' rank='20' abbrev='DLS' category='STYLE' priority='3' type='DLS_DEAD_LOCAL_STORE' instanceOccurrenceMax='0'><ShortMessage>Dead store to local variable</ShortMessage><LongMessage>Dead store to stopTheWorldNanos in org.wali.MinimalLockingWriteAheadLog.checkpoint()</LongMessage><Class classname='org.wali.MinimalLockingWriteAheadLog' primary='true'><SourceLine classname='org.wali.MinimalLockingWriteAheadLog' start='86' end='612' sourcepath='org/wali/MinimalLockingWriteAheadLog.java' sourcefile='MinimalLockingWriteAheadLog.java'><Message>At MinimalLockingWriteAheadLog.java:[lines 86-612]</Message></SourceLine><Message>In class org.wali.MinimalLockingWriteAheadLog</Message></Class><Method isStatic='false' classname='org.wali.MinimalLockingWriteAheadLog' signature='()I' name='checkpoint' primary='true'><SourceLine endBytecode='298' classname='org.wali.MinimalLockingWriteAheadLog' start='486' end='595' sourcepath='org/wali/MinimalLockingWriteAheadLog.java' sourcefile='MinimalLockingWriteAheadLog.java' startBytecode='0'></SourceLine><Message>In method org.wali.MinimalLockingWriteAheadLog.checkpoint()</Message></Method><LocalVariable role='LOCAL_VARIABLE_NAMED' pc='16' name='stopTheWorldNanos' register='9'><Message>Local variable named stopTheWorldNanos</Message></LocalVariable><SourceLine endBytecode='14' classname='org.wali.MinimalLockingWriteAheadLog' start='491' end='491' sourcepath='org/wali/MinimalLockingWriteAheadLog.java' sourcefile='MinimalLockingWriteAheadLog.java' startBytecode='14' primary='true'><Message>At MinimalLockingWriteAheadLog.java:[line 491]</Message></SourceLine><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.DEFENSIVE_CONSTANT_OPCODE' value='true'></Property><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.KILLED_BY_SUBSEQUENT_STORE' value='true'></Property><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME' value='stopTheWorldNanos'></Property></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='3756b0cdb7b80ad5ab2b66fb629c8862' cweid='563' rank='20' abbrev='DLS' category='STYLE' priority='3' type='DLS_DEAD_LOCAL_STORE' instanceOccurrenceMax='0'><ShortMessage>Dead store to local variable</ShortMessage><LongMessage>Dead store to stopTheWorldStart in org.wali.MinimalLockingWriteAheadLog.checkpoint()</LongMessage><Class classname='org.wali.MinimalLockingWriteAheadLog' primary='true'><SourceLine classname='org.wali.MinimalLockingWriteAheadLog' start='86' end='612' sourcepath='org/wali/MinimalLockingWriteAheadLog.java' sourcefile='MinimalLockingWriteAheadLog.java'><Message>At MinimalLockingWriteAheadLog.java:[lines 86-612]</Message></SourceLine><Message>In class org.wali.MinimalLockingWriteAheadLog</Message></Class><Method isStatic='false' classname='org.wali.MinimalLockingWriteAheadLog' signature='()I' name='checkpoint' primary='true'><SourceLine endBytecode='298' classname='org.wali.MinimalLockingWriteAheadLog' start='486' end='595' sourcepath='org/wali/MinimalLockingWriteAheadLog.java' sourcefile='MinimalLockingWriteAheadLog.java' startBytecode='0'></SourceLine><Message>In method org.wali.MinimalLockingWriteAheadLog.checkpoint()</Message></Method><LocalVariable role='LOCAL_VARIABLE_NAMED' pc='21' name='stopTheWorldStart' register='11'><Message>Local variable named stopTheWorldStart</Message></LocalVariable><SourceLine endBytecode='19' classname='org.wali.MinimalLockingWriteAheadLog' start='492' end='492' sourcepath='org/wali/MinimalLockingWriteAheadLog.java' sourcefile='MinimalLockingWriteAheadLog.java' startBytecode='19' primary='true'><Message>At MinimalLockingWriteAheadLog.java:[line 492]</Message></SourceLine><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.DEFENSIVE_CONSTANT_OPCODE' value='true'></Property><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.KILLED_BY_SUBSEQUENT_STORE' value='true'></Property><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME' value='stopTheWorldStart'></Property></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='23e72f90c00b6669cd1c77eee110847a' cweid='563' rank='17' abbrev='DLS' category='STYLE' priority='2' type='DLS_DEAD_LOCAL_STORE' instanceOccurrenceMax='0'><ShortMessage>Dead store to local variable</ShortMessage><LongMessage>Dead store to serdeClassName in org.wali.MinimalLockingWriteAheadLog$Partition.getRecoveryStream()</LongMessage><Class classname='org.wali.MinimalLockingWriteAheadLog$Partition' primary='true'><SourceLine classname='org.wali.MinimalLockingWriteAheadLog$Partition' start='625' end='1076' sourcepath='org/wali/MinimalLockingWriteAheadLog.java' sourcefile='MinimalLockingWriteAheadLog.java'><Message>At MinimalLockingWriteAheadLog.java:[lines 625-1076]</Message></SourceLine><Message>In class org.wali.MinimalLockingWriteAheadLog$Partition</Message></Class><Method isStatic='false' classname='org.wali.MinimalLockingWriteAheadLog$Partition' signature='()Ljava/io/DataInputStream;' name='getRecoveryStream' primary='true'><SourceLine endBytecode='91' classname='org.wali.MinimalLockingWriteAheadLog$Partition' start='936' end='968' sourcepath='org/wali/MinimalLockingWriteAheadLog.java' sourcefile='MinimalLockingWriteAheadLog.java' startBytecode='0'></SourceLine><Message>In method org.wali.MinimalLockingWriteAheadLog$Partition.getRecoveryStream()</Message></Method><LocalVariable role='LOCAL_VARIABLE_NAMED' pc='174' name='serdeClassName' register='5'><Message>Local variable named serdeClassName</Message></LocalVariable><SourceLine endBytecode='172' classname='org.wali.MinimalLockingWriteAheadLog$Partition' start='961' end='961' sourcepath='org/wali/MinimalLockingWriteAheadLog.java' sourcefile='MinimalLockingWriteAheadLog.java' startBytecode='172' primary='true'><Message>At MinimalLockingWriteAheadLog.java:[line 961]</Message></SourceLine><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.BASE_VALUE' value='true'></Property><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME' value='serdeClassName'></Property><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.METHOD_RESULT' value='true'></Property><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.NO_LOADS' value='true'></Property></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='9695a51bc58732a4e1f1dbeff9e7805b' cweid='476' rank='20' abbrev='RCN' category='STYLE' priority='3' type='RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE' instanceOccurrenceMax='0'><ShortMessage>Redundant nullcheck of value known to be non-null</ShortMessage><LongMessage>Redundant nullcheck of recoveryPaths, which is known to be non-null in org.wali.MinimalLockingWriteAheadLog$Partition.getNewEditPath()</LongMessage><Class classname='org.wali.MinimalLockingWriteAheadLog$Partition' primary='true'><SourceLine classname='org.wali.MinimalLockingWriteAheadLog$Partition' start='625' end='1076' sourcepath='org/wali/MinimalLockingWriteAheadLog.java' sourcefile='MinimalLockingWriteAheadLog.java'><Message>At MinimalLockingWriteAheadLog.java:[lines 625-1076]</Message></SourceLine><Message>In class org.wali.MinimalLockingWriteAheadLog$Partition</Message></Class><Method isStatic='false' classname='org.wali.MinimalLockingWriteAheadLog$Partition' signature='()Ljava/nio/file/Path;' name='getNewEditPath' primary='true'><SourceLine endBytecode='233' classname='org.wali.MinimalLockingWriteAheadLog$Partition' start='804' end='813' sourcepath='org/wali/MinimalLockingWriteAheadLog.java' sourcefile='MinimalLockingWriteAheadLog.java' startBytecode='0'></SourceLine><Message>In method org.wali.MinimalLockingWriteAheadLog$Partition.getNewEditPath()</Message></Method><LocalVariable role='LOCAL_VARIABLE_VALUE_OF' pc='5' name='recoveryPaths' register='1'><Message>Value loaded from recoveryPaths</Message></LocalVariable><Method isStatic='false' role='METHOD_RETURN_VALUE_OF' classname='org.wali.MinimalLockingWriteAheadLog$Partition' signature='()Ljava/util/List;' name='getRecoveryPaths'><SourceLine endBytecode='374' classname='org.wali.MinimalLockingWriteAheadLog$Partition' start='817' end='866' sourcepath='org/wali/MinimalLockingWriteAheadLog.java' sourcefile='MinimalLockingWriteAheadLog.java' startBytecode='0'></SourceLine><Message>Return value of org.wali.MinimalLockingWriteAheadLog$Partition.getRecoveryPaths() of type java.util.List</Message></Method><SourceLine role='SOURCE_REDUNDANT_NULL_CHECK' endBytecode='6' classname='org.wali.MinimalLockingWriteAheadLog$Partition' start='806' end='806' sourcepath='org/wali/MinimalLockingWriteAheadLog.java' sourcefile='MinimalLockingWriteAheadLog.java' startBytecode='6' primary='true'><Message>Redundant null check at MinimalLockingWriteAheadLog.java:[line 806]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='91537db1d0978c10d2232d5474a52a50' cweid='253' rank='16' abbrev='RV' category='BAD_PRACTICE' priority='2' type='RV_RETURN_VALUE_IGNORED_BAD_PRACTICE' instanceOccurrenceMax='0'><ShortMessage>Method ignores exceptional return value</ShortMessage><LongMessage>Exceptional return value of java.io.File.delete() ignored in org.wali.MinimalLockingWriteAheadLog$Partition.clearOld()</LongMessage><Class classname='org.wali.MinimalLockingWriteAheadLog$Partition' primary='true'><SourceLine classname='org.wali.MinimalLockingWriteAheadLog$Partition' start='625' end='1076' sourcepath='org/wali/MinimalLockingWriteAheadLog.java' sourcefile='MinimalLockingWriteAheadLog.java'><Message>At MinimalLockingWriteAheadLog.java:[lines 625-1076]</Message></SourceLine><Message>In class org.wali.MinimalLockingWriteAheadLog$Partition</Message></Class><Method isStatic='false' classname='org.wali.MinimalLockingWriteAheadLog$Partition' signature='()V' name='clearOld' primary='true'><SourceLine endBytecode='238' classname='org.wali.MinimalLockingWriteAheadLog$Partition' start='870' end='881' sourcepath='org/wali/MinimalLockingWriteAheadLog.java' sourcefile='MinimalLockingWriteAheadLog.java' startBytecode='0'></SourceLine><Message>In method org.wali.MinimalLockingWriteAheadLog$Partition.clearOld()</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.io.File' signature='()Z' name='delete'><SourceLine endBytecode='91' classname='java.io.File' start='1034' end='1041' sourcepath='java/io/File.java' sourcefile='File.java' startBytecode='0'></SourceLine><Message>Called method java.io.File.delete()</Message></Method><SourceLine endBytecode='67' classname='org.wali.MinimalLockingWriteAheadLog$Partition' start='878' end='878' sourcepath='org/wali/MinimalLockingWriteAheadLog.java' sourcefile='MinimalLockingWriteAheadLog.java' startBytecode='67' primary='true'><Message>At MinimalLockingWriteAheadLog.java:[line 878]</Message></SourceLine></BugInstance><BugCategory category='BAD_PRACTICE'><Description>Bad practice</Description></BugCategory><BugCategory category='STYLE'><Description>Dodgy code</Description></BugCategory><BugPattern abbrev='DLS' category='STYLE' type='DLS_DEAD_LOCAL_STORE'><ShortDescription>Dead store to local variable</ShortDescription><Details>

&lt;p&gt;
This instruction assigns a value to a local variable,
but the value is not read or used in any subsequent instruction.
Often, this indicates an error, because the value computed is never
used.
&lt;/p&gt;
&lt;p&gt;
Note that Sun's javac compiler often generates dead stores for
final local variables.  Because SpotBugs is a bytecode-based tool,
there is no easy way to eliminate these false positives.
&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='RCN' category='STYLE' type='RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE'><ShortDescription>Redundant nullcheck of value known to be non-null</ShortDescription><Details>

&lt;p&gt; This method contains a redundant check of a known non-null value against
the constant null.&lt;/p&gt;

    </Details></BugPattern><BugPattern cweid='253' abbrev='RV' category='BAD_PRACTICE' type='RV_RETURN_VALUE_IGNORED_BAD_PRACTICE'><ShortDescription>Method ignores exceptional return value</ShortDescription><Details>

   &lt;p&gt; This method returns a value that is not checked. The return value should be checked
since it can indicate an unusual or unexpected function execution. For
example, the &lt;code&gt;File.delete()&lt;/code&gt; method returns false
if the file could not be successfully deleted (rather than
throwing an Exception).
If you don't check the result, you won't notice if the method invocation
signals unexpected behavior by returning an atypical return value.
&lt;/p&gt;

    </Details></BugPattern><BugCode cweid='440' abbrev='RV'><Description>Bad use of return value from method</Description></BugCode><BugCode cweid='563' abbrev='DLS'><Description>Dead local store</Description></BugCode><BugCode cweid='476' abbrev='RCN'><Description>Redundant comparison to null</Description></BugCode><Errors missingClasses='0' errors='0'></Errors><FindBugsSummary num_packages='1' total_classes='7' priority_2='2' priority_3='3' total_size='636' clock_seconds='3.65' referenced_classes='95' vm_version='25.221-b11' total_bugs='5' java_version='1.8.0_221' gc_seconds='0.05' alloc_mbytes='3641.00' cpu_seconds='14.95' peak_mbytes='193.48' timestamp='Mon, 7 Oct 2019 21:48:41 +0200'><FileStats path='org/wali/MinimalLockingWriteAheadLog.java' size='601' bugHash='a66dd26e8e69a3abd197cd9f45d242c2' bugCount='5'></FileStats><FileStats path='org/wali/SerDe.java' size='9' bugCount='0'></FileStats><FileStats path='org/wali/SyncListener.java' size='3' bugCount='0'></FileStats><FileStats path='org/wali/UpdateType.java' size='17' bugCount='0'></FileStats><FileStats path='org/wali/WriteAheadRepository.java' size='6' bugCount='0'></FileStats><PackageStats package='org.wali' total_bugs='5' priority_2='2' priority_3='3' total_size='636' total_types='7'><ClassStats bugs='2' size='318' priority_3='2' interface='false' sourceFile='MinimalLockingWriteAheadLog.java' class='org.wali.MinimalLockingWriteAheadLog'></ClassStats><ClassStats bugs='3' size='268' priority_2='2' priority_3='1' interface='false' sourceFile='MinimalLockingWriteAheadLog.java' class='org.wali.MinimalLockingWriteAheadLog$Partition'></ClassStats><ClassStats bugs='0' size='15' interface='false' sourceFile='MinimalLockingWriteAheadLog.java' class='org.wali.MinimalLockingWriteAheadLog$Partition$1'></ClassStats><ClassStats bugs='0' size='9' interface='true' sourceFile='SerDe.java' class='org.wali.SerDe'></ClassStats><ClassStats bugs='0' size='3' interface='true' sourceFile='SyncListener.java' class='org.wali.SyncListener'></ClassStats><ClassStats bugs='0' size='17' interface='false' sourceFile='UpdateType.java' class='org.wali.UpdateType'></ClassStats><ClassStats bugs='0' size='6' interface='true' sourceFile='WriteAheadRepository.java' class='org.wali.WriteAheadRepository'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='646' totalMilliseconds='499' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' maxMicrosecondsPerInvocation='4793' standardDeviationMicrosecondsPerInvocation='335' invocations='773'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='384' totalMilliseconds='295' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' maxMicrosecondsPerInvocation='17587' standardDeviationMicrosecondsPerInvocation='1032' invocations='768'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='3065' totalMilliseconds='168' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' maxMicrosecondsPerInvocation='157276' standardDeviationMicrosecondsPerInvocation='20986' invocations='55'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='3242' totalMilliseconds='129' name='edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory' maxMicrosecondsPerInvocation='19039' standardDeviationMicrosecondsPerInvocation='5186' invocations='40'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='3167' totalMilliseconds='126' name='edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory' maxMicrosecondsPerInvocation='20283' standardDeviationMicrosecondsPerInvocation='4620' invocations='40'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1324' totalMilliseconds='125' name='edu.umd.cs.findbugs.detect.FieldItemSummary' maxMicrosecondsPerInvocation='17894' standardDeviationMicrosecondsPerInvocation='2918' invocations='95'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2762' totalMilliseconds='118' name='edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory' maxMicrosecondsPerInvocation='14305' standardDeviationMicrosecondsPerInvocation='3411' invocations='43'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='364' totalMilliseconds='117' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' maxMicrosecondsPerInvocation='4235' standardDeviationMicrosecondsPerInvocation='493' invocations='323'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2464' totalMilliseconds='113' name='edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory' maxMicrosecondsPerInvocation='12036' standardDeviationMicrosecondsPerInvocation='3003' invocations='46'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2273' totalMilliseconds='88' name='edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder' maxMicrosecondsPerInvocation='9908' standardDeviationMicrosecondsPerInvocation='2775' invocations='39'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1775' totalMilliseconds='71' name='edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory' maxMicrosecondsPerInvocation='20019' standardDeviationMicrosecondsPerInvocation='3751' invocations='40'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1876' totalMilliseconds='69' name='edu.umd.cs.findbugs.detect.FindRefComparison$SpecialTypeAnalysis' maxMicrosecondsPerInvocation='8855' standardDeviationMicrosecondsPerInvocation='2282' invocations='37'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1875' totalMilliseconds='67' name='edu.umd.cs.findbugs.detect.StreamResourceTracker' maxMicrosecondsPerInvocation='4454' standardDeviationMicrosecondsPerInvocation='1065' invocations='36'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='706' totalMilliseconds='67' name='edu.umd.cs.findbugs.detect.FindNoSideEffectMethods' maxMicrosecondsPerInvocation='5801' standardDeviationMicrosecondsPerInvocation='1084' invocations='95'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='7097' totalMilliseconds='49' name='edu.umd.cs.findbugs.detect.CheckRelaxingNullnessAnnotation' maxMicrosecondsPerInvocation='41629' standardDeviationMicrosecondsPerInvocation='14212' invocations='7'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='66' totalMilliseconds='48' name='edu.umd.cs.findbugs.util.TopologicalSort' maxMicrosecondsPerInvocation='1677' standardDeviationMicrosecondsPerInvocation='142' invocations='728'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='337' totalMilliseconds='47' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' maxMicrosecondsPerInvocation='19488' standardDeviationMicrosecondsPerInvocation='1686' invocations='142'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='5985' totalMilliseconds='41' name='edu.umd.cs.findbugs.detect.FindOpenStream' maxMicrosecondsPerInvocation='26433' standardDeviationMicrosecondsPerInvocation='9880' invocations='7'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='433' totalMilliseconds='41' name='edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers' maxMicrosecondsPerInvocation='5289' standardDeviationMicrosecondsPerInvocation='955' invocations='95'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='430' totalMilliseconds='40' name='edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical' maxMicrosecondsPerInvocation='13810' standardDeviationMicrosecondsPerInvocation='1600' invocations='95'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>