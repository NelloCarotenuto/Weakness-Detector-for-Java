
<BugCollection sequence='0' release='' analysisTimestamp='1570480446011' version='3.1.12' timestamp='1570478249649'><Project projectName='nifi-persistent-provenance-repository'><Jar>C:\Users\Nello\Desktop\repo2\nifi\nifi-nar-bundles\nifi-provenance-repository-bundle\nifi-persistent-provenance-repository\target\classes</Jar><AuxClasspathEntry>C:\Users\Nello\.m2\repository\org\apache\nifi\nifi-api\0.4.0\nifi-api-0.4.0.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Nello\.m2\repository\org\apache\nifi\nifi-data-provenance-utils\0.4.0\nifi-data-provenance-utils-0.4.0.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Nello\.m2\repository\org\apache\nifi\nifi-utils\0.4.0\nifi-utils-0.4.0.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Nello\.m2\repository\org\apache\nifi\nifi-properties\0.4.0\nifi-properties-0.4.0.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Nello\.m2\repository\org\apache\lucene\lucene-core\4.10.4\lucene-core-4.10.4.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Nello\.m2\repository\org\apache\lucene\lucene-analyzers-common\4.10.4\lucene-analyzers-common-4.10.4.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Nello\.m2\repository\org\apache\lucene\lucene-queryparser\4.10.4\lucene-queryparser-4.10.4.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Nello\.m2\repository\org\apache\lucene\lucene-queries\4.10.4\lucene-queries-4.10.4.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Nello\.m2\repository\org\apache\lucene\lucene-sandbox\4.10.4\lucene-sandbox-4.10.4.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Nello\.m2\repository\org\slf4j\slf4j-api\1.7.12\slf4j-api-1.7.12.jar</AuxClasspathEntry><SrcDir>C:\Users\Nello\Desktop\repo2\nifi\nifi-nar-bundles\nifi-provenance-repository-bundle\nifi-persistent-provenance-repository\src\main\java</SrcDir><WrkDir>C:\Users\Nello\Desktop\repo2\nifi\nifi-nar-bundles\nifi-provenance-repository-bundle\nifi-persistent-provenance-repository\target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='58d820b0f9ce1d4304558656eb57bec6' cweid='563' rank='20' abbrev='DLS' category='STYLE' priority='3' type='DLS_DEAD_LOCAL_STORE' instanceOccurrenceMax='0'><ShortMessage>Dead store to local variable</ShortMessage><LongMessage>Dead store to earliestEventTime in org.apache.nifi.provenance.PersistentProvenanceRepository.purgeExpiredIndexes()</LongMessage><Class classname='org.apache.nifi.provenance.PersistentProvenanceRepository' primary='true'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='105' end='2234' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 105-2234]</Message></SourceLine><Message>In class org.apache.nifi.provenance.PersistentProvenanceRepository</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' signature='()V' name='purgeExpiredIndexes' primary='true'><SourceLine endBytecode='130' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='964' end='1017' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.PersistentProvenanceRepository.purgeExpiredIndexes()</Message></Method><LocalVariable role='LOCAL_VARIABLE_NAMED' pc='81' name='earliestEventTime' register='6'><Message>Local variable named earliestEventTime</Message></LocalVariable><SourceLine endBytecode='79' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='988' end='988' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='79' primary='true'><Message>At PersistentProvenanceRepository.java:[line 988]</Message></SourceLine><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.KILLED_BY_SUBSEQUENT_STORE' value='true'></Property><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME' value='earliestEventTime'></Property><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.METHOD_RESULT' value='true'></Property></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='e25ce1ae90d0b226551e2cf2da979c5b' cweid='476' rank='13' abbrev='NP' category='STYLE' priority='2' type='NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE' instanceOccurrenceMax='0'><ShortMessage>Possible null pointer dereference due to return value of called method</ShortMessage><LongMessage>Possible null pointer dereference in org.apache.nifi.provenance.PersistentProvenanceRepository.recover() due to return value of called method</LongMessage><Class classname='org.apache.nifi.provenance.PersistentProvenanceRepository' primary='true'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='105' end='2234' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 105-2234]</Message></SourceLine><Message>In class org.apache.nifi.provenance.PersistentProvenanceRepository</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' signature='()V' name='recover' primary='true'><SourceLine endBytecode='2078' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='495' end='629' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.PersistentProvenanceRepository.recover()</Message></Method><LocalVariable role='LOCAL_VARIABLE_VALUE_OF' pc='77' name='matchingFiles' register='10'><Message>Value loaded from matchingFiles</Message></LocalVariable><SourceLine role='SOURCE_LINE_DEREF' endBytecode='79' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='513' end='513' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='79' primary='true'><Message>Dereferenced at PersistentProvenanceRepository.java:[line 513]</Message></SourceLine><SourceLine role='SOURCE_LINE_KNOWN_NULL' endBytecode='68' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='501' end='501' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='68'><Message>Known null at PersistentProvenanceRepository.java:[line 501]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='648da2f45ca9669a76affe30115a9f01' cweid='476' rank='20' abbrev='RCN' category='STYLE' priority='3' type='RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE' instanceOccurrenceMax='0'><ShortMessage>Redundant nullcheck of value known to be non-null</ShortMessage><LongMessage>Redundant nullcheck of paths, which is known to be non-null in org.apache.nifi.provenance.PersistentProvenanceRepository.getEvents(long, int)</LongMessage><Class classname='org.apache.nifi.provenance.PersistentProvenanceRepository' primary='true'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='105' end='2234' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 105-2234]</Message></SourceLine><Message>In class org.apache.nifi.provenance.PersistentProvenanceRepository</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' signature='(JI)Ljava/util/List;' name='getEvents' primary='true'><SourceLine endBytecode='935' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='395' end='441' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.PersistentProvenanceRepository.getEvents(long, int)</Message></Method><LocalVariable role='LOCAL_VARIABLE_VALUE_OF' pc='17' name='paths' register='5'><Message>Value loaded from paths</Message></LocalVariable><Method isStatic='false' role='METHOD_RETURN_VALUE_OF' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' signature='(J)Ljava/util/List;' name='getPathsForId'><SourceLine endBytecode='523' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='445' end='487' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='0'></SourceLine><Message>Return value of org.apache.nifi.provenance.PersistentProvenanceRepository.getPathsForId(long) of type java.util.List</Message></Method><SourceLine role='SOURCE_REDUNDANT_NULL_CHECK' endBytecode='19' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='398' end='398' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='19' primary='true'><Message>Redundant null check at PersistentProvenanceRepository.java:[line 398]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='391f84de2edd42af64f6dc6af543fe38' cweid='396' rank='20' abbrev='REC' category='STYLE' priority='3' type='REC_CATCH_EXCEPTION' instanceOccurrenceMax='0'><ShortMessage>Exception is caught when Exception is not thrown</ShortMessage><LongMessage>Exception is caught when Exception is not thrown in org.apache.nifi.provenance.PersistentProvenanceRepository.createRepositoryConfiguration()</LongMessage><Class classname='org.apache.nifi.provenance.PersistentProvenanceRepository' primary='true'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='105' end='2234' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 105-2234]</Message></SourceLine><Message>In class org.apache.nifi.provenance.PersistentProvenanceRepository</Message></Class><Method isStatic='true' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' signature='()Lorg/apache/nifi/provenance/RepositoryConfiguration;' name='createRepositoryConfiguration' primary='true'><SourceLine endBytecode='1208' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='279' end='349' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.PersistentProvenanceRepository.createRepositoryConfiguration()</Message></Method><SourceLine endBytecode='288' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='315' end='315' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='288' primary='true'><Message>At PersistentProvenanceRepository.java:[line 315]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='724d231fd4eec07c2ce17924cce823ef' cweid='396' rank='20' abbrev='REC' category='STYLE' priority='3' type='REC_CATCH_EXCEPTION' instanceOccurrenceMax='0'><ShortMessage>Exception is caught when Exception is not thrown</ShortMessage><LongMessage>Exception is caught when Exception is not thrown in org.apache.nifi.provenance.PersistentProvenanceRepository.persistRecord(Iterable)</LongMessage><Class classname='org.apache.nifi.provenance.PersistentProvenanceRepository' primary='true'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='105' end='2234' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 105-2234]</Message></SourceLine><Message>In class org.apache.nifi.provenance.PersistentProvenanceRepository</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' signature='(Ljava/lang/Iterable;)V' name='persistRecord' primary='true'><SourceLine endBytecode='1500' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='660' end='766' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.PersistentProvenanceRepository.persistRecord(Iterable)</Message></Method><SourceLine endBytecode='386' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='730' end='730' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='386' primary='true'><Message>At PersistentProvenanceRepository.java:[line 730]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='6750f11e0b5743e29ba822dfda21a426' cweid='253' rank='16' abbrev='RV' category='BAD_PRACTICE' priority='2' type='RV_RETURN_VALUE_IGNORED_BAD_PRACTICE' instanceOccurrenceMax='0'><ShortMessage>Method ignores exceptional return value</ShortMessage><LongMessage>Exceptional return value of java.io.File.delete() ignored in org.apache.nifi.provenance.PersistentProvenanceRepository.mergeJournals(List, File, EventReporter)</LongMessage><Class classname='org.apache.nifi.provenance.PersistentProvenanceRepository' primary='true'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='105' end='2234' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 105-2234]</Message></SourceLine><Message>In class org.apache.nifi.provenance.PersistentProvenanceRepository</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' signature='(Ljava/util/List;Ljava/io/File;Lorg/apache/nifi/events/EventReporter;)Ljava/io/File;' name='mergeJournals' primary='true'><SourceLine endBytecode='4674' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='1405' end='1730' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.PersistentProvenanceRepository.mergeJournals(List, File, EventReporter)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.io.File' signature='()Z' name='delete'><SourceLine endBytecode='91' classname='java.io.File' start='1034' end='1041' sourcepath='java/io/File.java' sourcefile='File.java' startBytecode='0'></SourceLine><Message>Called method java.io.File.delete()</Message></Method><SourceLine endBytecode='1762' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='1721' end='1721' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='1762' primary='true'><Message>At PersistentProvenanceRepository.java:[line 1721]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='10807c1f76281eba1911813af6bcc16c' cweid='253' rank='19' abbrev='RV' category='BAD_PRACTICE' priority='3' type='RV_RETURN_VALUE_IGNORED_BAD_PRACTICE' instanceOccurrenceMax='0'><ShortMessage>Method ignores exceptional return value</ShortMessage><LongMessage>Exceptional return value of java.util.concurrent.ExecutorService.submit(Runnable) ignored in org.apache.nifi.provenance.PersistentProvenanceRepository.submitLineageComputation(Collection, LineageComputationType, Long, long, long)</LongMessage><Class classname='org.apache.nifi.provenance.PersistentProvenanceRepository' primary='true'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='105' end='2234' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 105-2234]</Message></SourceLine><Message>In class org.apache.nifi.provenance.PersistentProvenanceRepository</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' signature='(Ljava/util/Collection;Lorg/apache/nifi/provenance/lineage/LineageComputationType;Ljava/lang/Long;JJ)Lorg/apache/nifi/provenance/AsyncLineageSubmission;' name='submitLineageComputation' primary='true'><SourceLine endBytecode='311' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='2056' end='2064' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.PersistentProvenanceRepository.submitLineageComputation(Collection, LineageComputationType, Long, long, long)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.util.concurrent.ExecutorService' signature='(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;' name='submit'><SourceLine classname='java.util.concurrent.ExecutorService' sourcepath='java/util/concurrent/ExecutorService.java' sourcefile='ExecutorService.java'></SourceLine><Message>Called method java.util.concurrent.ExecutorService.submit(Runnable)</Message></Method><SourceLine endBytecode='103' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='2061' end='2061' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='103' primary='true'><Message>At PersistentProvenanceRepository.java:[line 2061]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='baebb83cf74f4490305d42b7a3b9b8ed' cweid='253' rank='19' abbrev='RV' category='BAD_PRACTICE' priority='3' type='RV_RETURN_VALUE_IGNORED_BAD_PRACTICE' instanceOccurrenceMax='0'><ShortMessage>Method ignores exceptional return value</ShortMessage><LongMessage>Exceptional return value of java.util.concurrent.ExecutorService.submit(Runnable) ignored in org.apache.nifi.provenance.PersistentProvenanceRepository.submitQuery(Query)</LongMessage><Class classname='org.apache.nifi.provenance.PersistentProvenanceRepository' primary='true'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='105' end='2234' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 105-2234]</Message></SourceLine><Message>In class org.apache.nifi.provenance.PersistentProvenanceRepository</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' signature='(Lorg/apache/nifi/provenance/search/Query;)Lorg/apache/nifi/provenance/search/QuerySubmission;' name='submitQuery' primary='true'><SourceLine endBytecode='1030' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='1800' end='1858' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.PersistentProvenanceRepository.submitQuery(Query)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.util.concurrent.ExecutorService' signature='(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;' name='submit'><SourceLine classname='java.util.concurrent.ExecutorService' sourcepath='java/util/concurrent/ExecutorService.java' sourcefile='ExecutorService.java'></SourceLine><Message>Called method java.util.concurrent.ExecutorService.submit(Runnable)</Message></Method><SourceLine endBytecode='290' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='1836' end='1836' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='290' primary='true'><Message>At PersistentProvenanceRepository.java:[line 1836]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='480' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='1854' end='1854' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='480'><Message>Another occurrence at PersistentProvenanceRepository.java:[line 1854]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='8b9bd73aff58369fe71db9163f9b088a' rank='20' abbrev='SIC' category='PERFORMANCE' priority='3' type='SIC_INNER_SHOULD_BE_STATIC_ANON' instanceOccurrenceMax='0'><ShortMessage>Could be refactored into a named static inner class</ShortMessage><LongMessage>The class org.apache.nifi.provenance.PersistentProvenanceRepository$10 could be refactored into a named _static_ inner class</LongMessage><Class role='CLASS_ANONYMOUS' classname='org.apache.nifi.provenance.PersistentProvenanceRepository$10'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository$10' start='1515' end='1518' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 1515-1518]</Message></SourceLine><Message>Anonymous class org.apache.nifi.provenance.PersistentProvenanceRepository$10</Message></Class><Class classname='org.apache.nifi.provenance.PersistentProvenanceRepository' primary='true'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='105' end='2234' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 105-2234]</Message></SourceLine><Message>In class org.apache.nifi.provenance.PersistentProvenanceRepository</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' signature='(Ljava/util/List;Ljava/io/File;Lorg/apache/nifi/events/EventReporter;)Ljava/io/File;' name='mergeJournals' primary='true'><SourceLine endBytecode='4674' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='1405' end='1730' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.PersistentProvenanceRepository.mergeJournals(List, File, EventReporter)</Message></Method><SourceLine endBytecode='568' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='1515' end='1515' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='568' primary='true'><Message>At PersistentProvenanceRepository.java:[line 1515]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='4b056361eaa52c06b39a2fb9faee5f1' rank='20' abbrev='SIC' category='PERFORMANCE' priority='3' type='SIC_INNER_SHOULD_BE_STATIC_ANON' instanceOccurrenceMax='0'><ShortMessage>Could be refactored into a named static inner class</ShortMessage><LongMessage>The class org.apache.nifi.provenance.PersistentProvenanceRepository$11 could be refactored into a named _static_ inner class</LongMessage><Class role='CLASS_ANONYMOUS' classname='org.apache.nifi.provenance.PersistentProvenanceRepository$11'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository$11' start='1582' end='1587' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 1582-1587]</Message></SourceLine><Message>Anonymous class org.apache.nifi.provenance.PersistentProvenanceRepository$11</Message></Class><Class classname='org.apache.nifi.provenance.PersistentProvenanceRepository' primary='true'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='105' end='2234' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 105-2234]</Message></SourceLine><Message>In class org.apache.nifi.provenance.PersistentProvenanceRepository</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' signature='(Ljava/util/List;Ljava/io/File;Lorg/apache/nifi/events/EventReporter;)Ljava/io/File;' name='mergeJournals' primary='true'><SourceLine endBytecode='4674' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='1405' end='1730' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.PersistentProvenanceRepository.mergeJournals(List, File, EventReporter)</Message></Method><SourceLine endBytecode='914' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='1582' end='1582' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='914' primary='true'><Message>At PersistentProvenanceRepository.java:[line 1582]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b7fb0f3a9f04c6bfa8da74d639815efb' rank='20' abbrev='SIC' category='PERFORMANCE' priority='3' type='SIC_INNER_SHOULD_BE_STATIC_ANON' instanceOccurrenceMax='0'><ShortMessage>Could be refactored into a named static inner class</ShortMessage><LongMessage>The class org.apache.nifi.provenance.PersistentProvenanceRepository$12 could be refactored into a named _static_ inner class</LongMessage><Class role='CLASS_ANONYMOUS' classname='org.apache.nifi.provenance.PersistentProvenanceRepository$12'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository$12' start='1593' end='1611' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 1593-1611]</Message></SourceLine><Message>Anonymous class org.apache.nifi.provenance.PersistentProvenanceRepository$12</Message></Class><Class classname='org.apache.nifi.provenance.PersistentProvenanceRepository' primary='true'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='105' end='2234' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 105-2234]</Message></SourceLine><Message>In class org.apache.nifi.provenance.PersistentProvenanceRepository</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' signature='(Ljava/util/List;Ljava/io/File;Lorg/apache/nifi/events/EventReporter;)Ljava/io/File;' name='mergeJournals' primary='true'><SourceLine endBytecode='4674' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='1405' end='1730' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.PersistentProvenanceRepository.mergeJournals(List, File, EventReporter)</Message></Method><SourceLine endBytecode='950' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='1593' end='1593' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='950' primary='true'><Message>At PersistentProvenanceRepository.java:[line 1593]</Message></SourceLine><LocalVariable role='LOCAL_VARIABLE_NAMED' pc='955' name='callable' register='31'><Message>Local variable named callable</Message></LocalVariable></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b965f43771842ff2d878741bc9791cb1' rank='20' abbrev='SIC' category='PERFORMANCE' priority='3' type='SIC_INNER_SHOULD_BE_STATIC_ANON' instanceOccurrenceMax='0'><ShortMessage>Could be refactored into a named static inner class</ShortMessage><LongMessage>The class org.apache.nifi.provenance.PersistentProvenanceRepository$13 could be refactored into a named _static_ inner class</LongMessage><Class role='CLASS_ANONYMOUS' classname='org.apache.nifi.provenance.PersistentProvenanceRepository$13'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository$13' start='1682' end='1686' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 1682-1686]</Message></SourceLine><Message>Anonymous class org.apache.nifi.provenance.PersistentProvenanceRepository$13</Message></Class><Class classname='org.apache.nifi.provenance.PersistentProvenanceRepository' primary='true'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='105' end='2234' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 105-2234]</Message></SourceLine><Message>In class org.apache.nifi.provenance.PersistentProvenanceRepository</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' signature='(Ljava/util/List;Ljava/io/File;Lorg/apache/nifi/events/EventReporter;)Ljava/io/File;' name='mergeJournals' primary='true'><SourceLine endBytecode='4674' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='1405' end='1730' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.PersistentProvenanceRepository.mergeJournals(List, File, EventReporter)</Message></Method><SourceLine endBytecode='1455' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='1682' end='1682' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='1455' primary='true'><Message>At PersistentProvenanceRepository.java:[line 1682]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='993815ee6af703033ee8fe9510c781d2' rank='20' abbrev='SIC' category='PERFORMANCE' priority='3' type='SIC_INNER_SHOULD_BE_STATIC_ANON' instanceOccurrenceMax='0'><ShortMessage>Could be refactored into a named static inner class</ShortMessage><LongMessage>The class org.apache.nifi.provenance.PersistentProvenanceRepository$14 could be refactored into a named _static_ inner class</LongMessage><Class role='CLASS_ANONYMOUS' classname='org.apache.nifi.provenance.PersistentProvenanceRepository$14'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository$14' start='1874' end='1899' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 1874-1899]</Message></SourceLine><Message>Anonymous class org.apache.nifi.provenance.PersistentProvenanceRepository$14</Message></Class><Class classname='org.apache.nifi.provenance.PersistentProvenanceRepository' primary='true'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='105' end='2234' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 105-2234]</Message></SourceLine><Message>In class org.apache.nifi.provenance.PersistentProvenanceRepository</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' signature='(Lorg/apache/lucene/search/Query;)Ljava/util/Iterator;' name='queryLucene' primary='true'><SourceLine endBytecode='745' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='1869' end='1931' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.PersistentProvenanceRepository.queryLucene(Query)</Message></Method><SourceLine endBytecode='65' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='1874' end='1874' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='65' primary='true'><Message>At PersistentProvenanceRepository.java:[line 1874]</Message></SourceLine><LocalVariable role='LOCAL_VARIABLE_NAMED' pc='70' name='callable' register='7'><Message>Local variable named callable</Message></LocalVariable></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='63ffd5a9b36005857b52dc8770391b1a' rank='20' abbrev='SIC' category='PERFORMANCE' priority='3' type='SIC_INNER_SHOULD_BE_STATIC_ANON' instanceOccurrenceMax='0'><ShortMessage>Could be refactored into a named static inner class</ShortMessage><LongMessage>The class org.apache.nifi.provenance.PersistentProvenanceRepository$3 could be refactored into a named _static_ inner class</LongMessage><Class role='CLASS_ANONYMOUS' classname='org.apache.nifi.provenance.PersistentProvenanceRepository$3'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository$3' start='501' end='510' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 501-510]</Message></SourceLine><Message>Anonymous class org.apache.nifi.provenance.PersistentProvenanceRepository$3</Message></Class><Class classname='org.apache.nifi.provenance.PersistentProvenanceRepository' primary='true'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='105' end='2234' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 105-2234]</Message></SourceLine><Message>In class org.apache.nifi.provenance.PersistentProvenanceRepository</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' signature='()V' name='recover' primary='true'><SourceLine endBytecode='2078' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='495' end='629' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.PersistentProvenanceRepository.recover()</Message></Method><SourceLine endBytecode='65' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='501' end='501' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='65' primary='true'><Message>At PersistentProvenanceRepository.java:[line 501]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='88bd8b29c44f27f8dac4d2327f73bc7a' rank='20' abbrev='SIC' category='PERFORMANCE' priority='3' type='SIC_INNER_SHOULD_BE_STATIC_ANON' instanceOccurrenceMax='0'><ShortMessage>Could be refactored into a named static inner class</ShortMessage><LongMessage>The class org.apache.nifi.provenance.PersistentProvenanceRepository$4 could be refactored into a named _static_ inner class</LongMessage><Class role='CLASS_ANONYMOUS' classname='org.apache.nifi.provenance.PersistentProvenanceRepository$4'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository$4' start='518' end='521' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 518-521]</Message></SourceLine><Message>Anonymous class org.apache.nifi.provenance.PersistentProvenanceRepository$4</Message></Class><Class classname='org.apache.nifi.provenance.PersistentProvenanceRepository' primary='true'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='105' end='2234' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 105-2234]</Message></SourceLine><Message>In class org.apache.nifi.provenance.PersistentProvenanceRepository</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' signature='()V' name='recover' primary='true'><SourceLine endBytecode='2078' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='495' end='629' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.PersistentProvenanceRepository.recover()</Message></Method><SourceLine endBytecode='127' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='518' end='518' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='127' primary='true'><Message>At PersistentProvenanceRepository.java:[line 518]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='8465a5709feafa52ed0b55b8e0c8e6cf' rank='20' abbrev='SIC' category='PERFORMANCE' priority='3' type='SIC_INNER_SHOULD_BE_STATIC_ANON' instanceOccurrenceMax='0'><ShortMessage>Could be refactored into a named static inner class</ShortMessage><LongMessage>The class org.apache.nifi.provenance.PersistentProvenanceRepository$5 could be refactored into a named _static_ inner class</LongMessage><Class role='CLASS_ANONYMOUS' classname='org.apache.nifi.provenance.PersistentProvenanceRepository$5'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository$5' start='840' end='870' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 840-870]</Message></SourceLine><Message>Anonymous class org.apache.nifi.provenance.PersistentProvenanceRepository$5</Message></Class><Class classname='org.apache.nifi.provenance.PersistentProvenanceRepository' primary='true'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='105' end='2234' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 105-2234]</Message></SourceLine><Message>In class org.apache.nifi.provenance.PersistentProvenanceRepository</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' signature='()V' name='purgeOldEvents' primary='true'><SourceLine endBytecode='1637' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='815' end='953' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.PersistentProvenanceRepository.purgeOldEvents()</Message></Method><SourceLine endBytecode='152' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='840' end='840' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='152' primary='true'><Message>At PersistentProvenanceRepository.java:[line 840]</Message></SourceLine><LocalVariable role='LOCAL_VARIABLE_NAMED' pc='157' name='sortByBasenameComparator' register='7'><Message>Local variable named sortByBasenameComparator</Message></LocalVariable></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f5a6a00610ddde99907b2c3788e998cc' rank='20' abbrev='SIC' category='PERFORMANCE' priority='3' type='SIC_INNER_SHOULD_BE_STATIC_ANON' instanceOccurrenceMax='0'><ShortMessage>Could be refactored into a named static inner class</ShortMessage><LongMessage>The class org.apache.nifi.provenance.PersistentProvenanceRepository$6 could be refactored into a named _static_ inner class</LongMessage><Class role='CLASS_ANONYMOUS' classname='org.apache.nifi.provenance.PersistentProvenanceRepository$6'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository$6' start='1075' end='1078' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 1075-1078]</Message></SourceLine><Message>Anonymous class org.apache.nifi.provenance.PersistentProvenanceRepository$6</Message></Class><Class classname='org.apache.nifi.provenance.PersistentProvenanceRepository' primary='true'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='105' end='2234' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 105-2234]</Message></SourceLine><Message>In class org.apache.nifi.provenance.PersistentProvenanceRepository</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' signature='()Ljava/util/List;' name='getAllIndexDirectories' primary='true'><SourceLine endBytecode='315' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='1073' end='1098' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.PersistentProvenanceRepository.getAllIndexDirectories()</Message></Method><SourceLine endBytecode='46' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='1075' end='1075' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='46' primary='true'><Message>At PersistentProvenanceRepository.java:[line 1075]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c14e8eca82b7af31c3ad5a587d710a4d' rank='20' abbrev='SIC' category='PERFORMANCE' priority='3' type='SIC_INNER_SHOULD_BE_STATIC_ANON' instanceOccurrenceMax='0'><ShortMessage>Could be refactored into a named static inner class</ShortMessage><LongMessage>The class org.apache.nifi.provenance.PersistentProvenanceRepository$9 could be refactored into a named _static_ inner class</LongMessage><Class role='CLASS_ANONYMOUS' classname='org.apache.nifi.provenance.PersistentProvenanceRepository$9'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository$9' start='1416' end='1427' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 1416-1427]</Message></SourceLine><Message>Anonymous class org.apache.nifi.provenance.PersistentProvenanceRepository$9</Message></Class><Class classname='org.apache.nifi.provenance.PersistentProvenanceRepository' primary='true'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='105' end='2234' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 105-2234]</Message></SourceLine><Message>In class org.apache.nifi.provenance.PersistentProvenanceRepository</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' signature='(Ljava/util/List;Ljava/io/File;Lorg/apache/nifi/events/EventReporter;)Ljava/io/File;' name='mergeJournals' primary='true'><SourceLine endBytecode='4674' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='1405' end='1730' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.PersistentProvenanceRepository.mergeJournals(List, File, EventReporter)</Message></Method><SourceLine endBytecode='65' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='1416' end='1416' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='65' primary='true'><Message>At PersistentProvenanceRepository.java:[line 1416]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='ad9fdee25b21ab21ef2e67777d681bf4' rank='14' abbrev='SWL' category='MT_CORRECTNESS' priority='2' type='SWL_SLEEP_WITH_LOCK_HELD' instanceOccurrenceMax='0'><ShortMessage>Method calls Thread.sleep() with a lock held</ShortMessage><LongMessage>org.apache.nifi.provenance.PersistentProvenanceRepository.purgeOldEvents() calls Thread.sleep() with a lock held</LongMessage><Class classname='org.apache.nifi.provenance.PersistentProvenanceRepository' primary='true'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='105' end='2234' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 105-2234]</Message></SourceLine><Message>In class org.apache.nifi.provenance.PersistentProvenanceRepository</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' signature='()V' name='purgeOldEvents' primary='true'><SourceLine endBytecode='1637' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='815' end='953' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.PersistentProvenanceRepository.purgeOldEvents()</Message></Method><SourceLine endBytecode='13' classname='org.apache.nifi.provenance.PersistentProvenanceRepository' start='817' end='817' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java' startBytecode='13' primary='true'><Message>At PersistentProvenanceRepository.java:[line 817]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='d36cde1b0f3ffe2cdc1762b369d47cf7' rank='19' abbrev='Se' category='BAD_PRACTICE' priority='2' type='SE_COMPARATOR_SHOULD_BE_SERIALIZABLE' instanceOccurrenceMax='0'><ShortMessage>Comparator doesn't implement Serializable</ShortMessage><LongMessage>org.apache.nifi.provenance.PersistentProvenanceRepository$PathMapComparator implements Comparator but not Serializable</LongMessage><Class classname='org.apache.nifi.provenance.PersistentProvenanceRepository$PathMapComparator' primary='true'><SourceLine classname='org.apache.nifi.provenance.PersistentProvenanceRepository$PathMapComparator' start='2215' end='2228' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 2215-2228]</Message></SourceLine><Message>In class org.apache.nifi.provenance.PersistentProvenanceRepository$PathMapComparator</Message></Class><SourceLine synthetic='true' classname='org.apache.nifi.provenance.PersistentProvenanceRepository$PathMapComparator' start='2215' end='2228' sourcepath='org/apache/nifi/provenance/PersistentProvenanceRepository.java' sourcefile='PersistentProvenanceRepository.java'><Message>At PersistentProvenanceRepository.java:[lines 2215-2228]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b70746925f43e861dec6a04e9258f438' cweid='396' rank='20' abbrev='REC' category='STYLE' priority='3' type='REC_CATCH_EXCEPTION' instanceOccurrenceMax='0'><ShortMessage>Exception is caught when Exception is not thrown</ShortMessage><LongMessage>Exception is caught when Exception is not thrown in org.apache.nifi.provenance.lucene.DocsReader.read(List, Collection, AtomicInteger, int, int)</LongMessage><Class classname='org.apache.nifi.provenance.lucene.DocsReader' primary='true'><SourceLine classname='org.apache.nifi.provenance.lucene.DocsReader' start='47' end='155' sourcepath='org/apache/nifi/provenance/lucene/DocsReader.java' sourcefile='DocsReader.java'><Message>At DocsReader.java:[lines 47-155]</Message></SourceLine><Message>In class org.apache.nifi.provenance.lucene.DocsReader</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.lucene.DocsReader' signature='(Ljava/util/List;Ljava/util/Collection;Ljava/util/concurrent/atomic/AtomicInteger;II)Ljava/util/Set;' name='read' primary='true'><SourceLine endBytecode='1078' classname='org.apache.nifi.provenance.lucene.DocsReader' start='110' end='155' sourcepath='org/apache/nifi/provenance/lucene/DocsReader.java' sourcefile='DocsReader.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.lucene.DocsReader.read(List, Collection, AtomicInteger, int, int)</Message></Method><SourceLine endBytecode='276' classname='org.apache.nifi.provenance.lucene.DocsReader' start='138' end='138' sourcepath='org/apache/nifi/provenance/lucene/DocsReader.java' sourcefile='DocsReader.java' startBytecode='276' primary='true'><Message>At DocsReader.java:[line 138]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='9ae97208137723c7319c6123613c0624' rank='18' abbrev='WMI' category='PERFORMANCE' priority='2' type='WMI_WRONG_MAP_ITERATOR' instanceOccurrenceMax='0'><ShortMessage>Inefficient use of keySet iterator instead of entrySet iterator</ShortMessage><LongMessage>org.apache.nifi.provenance.lucene.DocsReader.read(List, Collection, AtomicInteger, int, int) makes inefficient use of keySet iterator instead of entrySet iterator</LongMessage><Class classname='org.apache.nifi.provenance.lucene.DocsReader' primary='true'><SourceLine classname='org.apache.nifi.provenance.lucene.DocsReader' start='47' end='155' sourcepath='org/apache/nifi/provenance/lucene/DocsReader.java' sourcefile='DocsReader.java'><Message>At DocsReader.java:[lines 47-155]</Message></SourceLine><Message>In class org.apache.nifi.provenance.lucene.DocsReader</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.lucene.DocsReader' signature='(Ljava/util/List;Ljava/util/Collection;Ljava/util/concurrent/atomic/AtomicInteger;II)Ljava/util/Set;' name='read' primary='true'><SourceLine endBytecode='1078' classname='org.apache.nifi.provenance.lucene.DocsReader' start='110' end='155' sourcepath='org/apache/nifi/provenance/lucene/DocsReader.java' sourcefile='DocsReader.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.lucene.DocsReader.read(List, Collection, AtomicInteger, int, int)</Message></Method><SourceLine endBytecode='105' classname='org.apache.nifi.provenance.lucene.DocsReader' start='129' end='129' sourcepath='org/apache/nifi/provenance/lucene/DocsReader.java' sourcefile='DocsReader.java' startBytecode='105' primary='true'><Message>At DocsReader.java:[line 129]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='fc16e74cebad067ce2bb69f3a193e921' rank='20' abbrev='Dm' category='I18N' priority='3' type='DM_CONVERT_CASE' instanceOccurrenceMax='0'><ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage><LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.nifi.provenance.lucene.IndexingAction.addField(Document, SearchableField, String, Field$Store)</LongMessage><Class classname='org.apache.nifi.provenance.lucene.IndexingAction' primary='true'><SourceLine classname='org.apache.nifi.provenance.lucene.IndexingAction' start='42' end='132' sourcepath='org/apache/nifi/provenance/lucene/IndexingAction.java' sourcefile='IndexingAction.java'><Message>At IndexingAction.java:[lines 42-132]</Message></SourceLine><Message>In class org.apache.nifi.provenance.lucene.IndexingAction</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.lucene.IndexingAction' signature='(Lorg/apache/lucene/document/Document;Lorg/apache/nifi/provenance/search/SearchableField;Ljava/lang/String;Lorg/apache/lucene/document/Field$Store;)V' name='addField' primary='true'><SourceLine endBytecode='154' classname='org.apache.nifi.provenance.lucene.IndexingAction' start='48' end='53' sourcepath='org/apache/nifi/provenance/lucene/IndexingAction.java' sourcefile='IndexingAction.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.lucene.IndexingAction.addField(Document, SearchableField, String, Field$Store)</Message></Method><SourceLine endBytecode='39' classname='org.apache.nifi.provenance.lucene.IndexingAction' start='52' end='52' sourcepath='org/apache/nifi/provenance/lucene/IndexingAction.java' sourcefile='IndexingAction.java' startBytecode='39' primary='true'><Message>At IndexingAction.java:[line 52]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='fc57d02695f2c705e63a02edc273d105' cweid='476' rank='11' abbrev='RCN' category='CORRECTNESS' priority='2' type='RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE' instanceOccurrenceMax='0'><ShortMessage>Nullcheck of value previously dereferenced</ShortMessage><LongMessage>Nullcheck of flowFileUuids at line 54 of value previously dereferenced in org.apache.nifi.provenance.lucene.LineageQuery.computeLineageForFlowFiles(PersistentProvenanceRepository, IndexManager, File, String, Collection, int)</LongMessage><Class classname='org.apache.nifi.provenance.lucene.LineageQuery' primary='true'><SourceLine classname='org.apache.nifi.provenance.lucene.LineageQuery' start='42' end='115' sourcepath='org/apache/nifi/provenance/lucene/LineageQuery.java' sourcefile='LineageQuery.java'><Message>At LineageQuery.java:[lines 42-115]</Message></SourceLine><Message>In class org.apache.nifi.provenance.lucene.LineageQuery</Message></Class><Method isStatic='true' classname='org.apache.nifi.provenance.lucene.LineageQuery' signature='(Lorg/apache/nifi/provenance/PersistentProvenanceRepository;Lorg/apache/nifi/provenance/lucene/IndexManager;Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;I)Ljava/util/Set;' name='computeLineageForFlowFiles' primary='true'><SourceLine endBytecode='1072' classname='org.apache.nifi.provenance.lucene.LineageQuery' start='50' end='115' sourcepath='org/apache/nifi/provenance/lucene/LineageQuery.java' sourcefile='LineageQuery.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.lucene.LineageQuery.computeLineageForFlowFiles(PersistentProvenanceRepository, IndexManager, File, String, Collection, int)</Message></Method><LocalVariable role='LOCAL_VARIABLE_VALUE_OF' pc='60' name='flowFileUuids' register='4'><Message>Value loaded from flowFileUuids</Message></LocalVariable><SourceLine endBytecode='2' classname='org.apache.nifi.provenance.lucene.LineageQuery' start='50' end='50' sourcepath='org/apache/nifi/provenance/lucene/LineageQuery.java' sourcefile='LineageQuery.java' startBytecode='2' primary='true'><Message>At LineageQuery.java:[line 50]</Message></SourceLine><SourceLine role='SOURCE_REDUNDANT_NULL_CHECK' endBytecode='62' classname='org.apache.nifi.provenance.lucene.LineageQuery' start='54' end='54' sourcepath='org/apache/nifi/provenance/lucene/LineageQuery.java' sourcefile='LineageQuery.java' startBytecode='62'><Message>Redundant null check at LineageQuery.java:[line 54]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='94' classname='org.apache.nifi.provenance.lucene.LineageQuery' start='65' end='65' sourcepath='org/apache/nifi/provenance/lucene/LineageQuery.java' sourcefile='LineageQuery.java' startBytecode='94'><Message>Another occurrence at LineageQuery.java:[line 65]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='924470b0814cf0186826fa4dd07689a6' rank='20' abbrev='Dm' category='I18N' priority='3' type='DM_CONVERT_CASE' instanceOccurrenceMax='0'><ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage><LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.nifi.provenance.lucene.LuceneUtil.convertQuery(Query)</LongMessage><Class classname='org.apache.nifi.provenance.lucene.LuceneUtil' primary='true'><SourceLine classname='org.apache.nifi.provenance.lucene.LuceneUtil' start='44' end='195' sourcepath='org/apache/nifi/provenance/lucene/LuceneUtil.java' sourcefile='LuceneUtil.java'><Message>At LuceneUtil.java:[lines 44-195]</Message></SourceLine><Message>In class org.apache.nifi.provenance.lucene.LuceneUtil</Message></Class><Method isStatic='true' classname='org.apache.nifi.provenance.lucene.LuceneUtil' signature='(Lorg/apache/nifi/provenance/search/Query;)Lorg/apache/lucene/search/Query;' name='convertQuery' primary='true'><SourceLine endBytecode='682' classname='org.apache.nifi.provenance.lucene.LuceneUtil' start='100' end='130' sourcepath='org/apache/nifi/provenance/lucene/LuceneUtil.java' sourcefile='LuceneUtil.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.lucene.LuceneUtil.convertQuery(Query)</Message></Method><SourceLine endBytecode='176' classname='org.apache.nifi.provenance.lucene.LuceneUtil' start='112' end='112' sourcepath='org/apache/nifi/provenance/lucene/LuceneUtil.java' sourcefile='LuceneUtil.java' startBytecode='176' primary='true'><Message>At LuceneUtil.java:[line 112]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='227' classname='org.apache.nifi.provenance.lucene.LuceneUtil' start='114' end='114' sourcepath='org/apache/nifi/provenance/lucene/LuceneUtil.java' sourcefile='LuceneUtil.java' startBytecode='227'><Message>Another occurrence at LuceneUtil.java:[line 114]</Message></SourceLine></BugInstance><BugCategory category='BAD_PRACTICE'><Description>Bad practice</Description></BugCategory><BugCategory category='PERFORMANCE'><Description>Performance</Description></BugCategory><BugCategory category='CORRECTNESS'><Description>Correctness</Description></BugCategory><BugCategory category='STYLE'><Description>Dodgy code</Description></BugCategory><BugCategory category='MT_CORRECTNESS'><Description>Multithreaded correctness</Description></BugCategory><BugCategory category='I18N'><Description>Internationalization</Description></BugCategory><BugPattern abbrev='DLS' category='STYLE' type='DLS_DEAD_LOCAL_STORE'><ShortDescription>Dead store to local variable</ShortDescription><Details>

&lt;p&gt;
This instruction assigns a value to a local variable,
but the value is not read or used in any subsequent instruction.
Often, this indicates an error, because the value computed is never
used.
&lt;/p&gt;
&lt;p&gt;
Note that Sun's javac compiler often generates dead stores for
final local variables.  Because SpotBugs is a bytecode-based tool,
there is no easy way to eliminate these false positives.
&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='SWL' category='MT_CORRECTNESS' type='SWL_SLEEP_WITH_LOCK_HELD'><ShortDescription>Method calls Thread.sleep() with a lock held</ShortDescription><Details>
      
      &lt;p&gt;
      This method calls Thread.sleep() with a lock held.  This may result
      in very poor performance and scalability, or a deadlock, since other threads may
      be waiting to acquire the lock.  It is a much better idea to call
      wait() on the lock, which releases the lock and allows other threads
      to run.
      &lt;/p&gt;
      
   </Details></BugPattern><BugPattern abbrev='WMI' category='PERFORMANCE' type='WMI_WRONG_MAP_ITERATOR'><ShortDescription>Inefficient use of keySet iterator instead of entrySet iterator</ShortDescription><Details>

&lt;p&gt; This method accesses the value of a Map entry, using a key that was retrieved from
a keySet iterator. It is more efficient to use an iterator on the entrySet of the map, to avoid the
Map.get(key) lookup.&lt;/p&gt;

        </Details></BugPattern><BugPattern abbrev='SIC' category='PERFORMANCE' type='SIC_INNER_SHOULD_BE_STATIC_ANON'><ShortDescription>Could be refactored into a named static inner class</ShortDescription><Details>

  &lt;p&gt; This class is an inner class, but does not use its embedded reference
  to the object which created it.&amp;nbsp; This reference makes the instances
  of the class larger, and may keep the reference to the creator object
  alive longer than necessary.&amp;nbsp; If possible, the class should be
  made into a &lt;em&gt;static&lt;/em&gt; inner class. Since anonymous inner
classes cannot be marked as static, doing this will require refactoring
the inner class so that it is a named inner class.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='NP' category='STYLE' type='NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE'><ShortDescription>Possible null pointer dereference due to return value of called method</ShortDescription><Details>
      
&lt;p&gt; The return value from a method is dereferenced without a null check,
and the return value of that method is one that should generally be checked
for null.  This may lead to a &lt;code&gt;NullPointerException&lt;/code&gt; when the code is executed.
&lt;/p&gt;
      
   </Details></BugPattern><BugPattern cweid='396' abbrev='REC' category='STYLE' type='REC_CATCH_EXCEPTION'><ShortDescription>Exception is caught when Exception is not thrown</ShortDescription><Details>
  
  &lt;p&gt;
  This method uses a try-catch block that catches Exception objects, but Exception is not
  thrown within the try block, and RuntimeException is not explicitly caught.  It is a common bug pattern to
  say try { ... } catch (Exception e) { something } as a shorthand for catching a number of types of exception
  each of whose catch blocks is identical, but this construct also accidentally catches RuntimeException as well,
  masking potential bugs.
  &lt;/p&gt;
  &lt;p&gt;A better approach is to either explicitly catch the specific exceptions that are thrown,
  or to explicitly catch RuntimeException exception, rethrow it, and then catch all non-Runtime Exceptions, as shown below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;try {
    ...
} catch (RuntimeException e) {
    throw e;
} catch (Exception e) {
    ... deal with all non-runtime exceptions ...
}
&lt;/code&gt;&lt;/pre&gt;
  
     </Details></BugPattern><BugPattern abbrev='Se' category='BAD_PRACTICE' type='SE_COMPARATOR_SHOULD_BE_SERIALIZABLE'><ShortDescription>Comparator doesn't implement Serializable</ShortDescription><Details>

  &lt;p&gt; This class implements the &lt;code&gt;Comparator&lt;/code&gt; interface. You
should consider whether or not it should also implement the &lt;code&gt;Serializable&lt;/code&gt;
interface. If a comparator is used to construct an ordered collection
such as a &lt;code&gt;TreeMap&lt;/code&gt;, then the &lt;code&gt;TreeMap&lt;/code&gt;
will be serializable only if the comparator is also serializable.
As most comparators have little or no state, making them serializable
is generally easy and good defensive programming.
&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='RCN' category='STYLE' type='RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE'><ShortDescription>Redundant nullcheck of value known to be non-null</ShortDescription><Details>

&lt;p&gt; This method contains a redundant check of a known non-null value against
the constant null.&lt;/p&gt;

    </Details></BugPattern><BugPattern cweid='253' abbrev='RV' category='BAD_PRACTICE' type='RV_RETURN_VALUE_IGNORED_BAD_PRACTICE'><ShortDescription>Method ignores exceptional return value</ShortDescription><Details>

   &lt;p&gt; This method returns a value that is not checked. The return value should be checked
since it can indicate an unusual or unexpected function execution. For
example, the &lt;code&gt;File.delete()&lt;/code&gt; method returns false
if the file could not be successfully deleted (rather than
throwing an Exception).
If you don't check the result, you won't notice if the method invocation
signals unexpected behavior by returning an atypical return value.
&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='Dm' category='I18N' type='DM_CONVERT_CASE'><ShortDescription>Consider using Locale parameterized version of invoked method</ShortDescription><Details>

  &lt;p&gt; A String is being converted to upper or lowercase, using the platform's default encoding. This may
      result in improper conversions when used with international characters. Use the &lt;/p&gt;
      &lt;ul&gt;
    &lt;li&gt;String.toUpperCase( Locale l )&lt;/li&gt;
    &lt;li&gt;String.toLowerCase( Locale l )&lt;/li&gt;
    &lt;/ul&gt;
      &lt;p&gt;versions instead.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='RCN' category='CORRECTNESS' type='RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE'><ShortDescription>Nullcheck of value previously dereferenced</ShortDescription><Details>

&lt;p&gt; A value is checked here to see whether it is null, but this value can't
be null because it was previously dereferenced and if it were null a null pointer
exception would have occurred at the earlier dereference.
Essentially, this code and the previous dereference
disagree as to whether this value is allowed to be null. Either the check is redundant
or the previous dereference is erroneous.&lt;/p&gt;

    </Details></BugPattern><BugCode abbrev='REC'><Description>RuntimeException capture</Description></BugCode><BugCode cweid='476' abbrev='NP'><Description>Null pointer dereference</Description></BugCode><BugCode abbrev='Se'><Description>Incorrect definition of Serializable class</Description></BugCode><BugCode abbrev='WMI'><Description>Inefficient Map Iterator</Description></BugCode><BugCode cweid='440' abbrev='RV'><Description>Bad use of return value from method</Description></BugCode><BugCode abbrev='SWL'><Description>Sleep with lock held</Description></BugCode><BugCode abbrev='Dm'><Description>Dubious method used</Description></BugCode><BugCode cweid='563' abbrev='DLS'><Description>Dead local store</Description></BugCode><BugCode cweid='476' abbrev='RCN'><Description>Redundant comparison to null</Description></BugCode><BugCode abbrev='SIC'><Description>Inner class could be made static</Description></BugCode><Errors missingClasses='0' errors='0'></Errors><FindBugsSummary num_packages='5' total_classes='53' priority_2='6' priority_3='19' total_size='3240' clock_seconds='6.77' referenced_classes='229' vm_version='25.221-b11' total_bugs='25' java_version='1.8.0_221' gc_seconds='0.12' alloc_mbytes='3641.00' cpu_seconds='28.52' peak_mbytes='353.20' timestamp='Mon, 7 Oct 2019 21:57:29 +0200'><FileStats path='org/apache/nifi/provenance/IndexConfiguration.java' size='222' bugCount='0'></FileStats><FileStats path='org/apache/nifi/provenance/PersistentProvenanceRepository.java' size='1471' bugHash='c0ae7baccbb39b9fc404811321ef55d4' bugCount='20'></FileStats><FileStats path='org/apache/nifi/provenance/RepositoryConfiguration.java' size='121' bugCount='0'></FileStats><FileStats path='org/apache/nifi/provenance/StandardRecordReader.java' size='280' bugCount='0'></FileStats><FileStats path='org/apache/nifi/provenance/StandardRecordWriter.java' size='218' bugCount='0'></FileStats><FileStats path='org/apache/nifi/provenance/expiration/ExpirationAction.java' size='3' bugCount='0'></FileStats><FileStats path='org/apache/nifi/provenance/expiration/FileRemovalAction.java' size='24' bugCount='0'></FileStats><FileStats path='org/apache/nifi/provenance/lucene/DeleteIndexAction.java' size='59' bugCount='0'></FileStats><FileStats path='org/apache/nifi/provenance/lucene/DocsReader.java' size='68' bugHash='5f77d4671750ae1b91cc6e657bc38757' bugCount='2'></FileStats><FileStats path='org/apache/nifi/provenance/lucene/FieldNames.java' size='6' bugCount='0'></FileStats><FileStats path='org/apache/nifi/provenance/lucene/IndexManager.java' size='300' bugCount='0'></FileStats><FileStats path='org/apache/nifi/provenance/lucene/IndexSearch.java' size='56' bugCount='0'></FileStats><FileStats path='org/apache/nifi/provenance/lucene/IndexingAction.java' size='65' bugHash='423331bccb14975f0605504f7ad740fc' bugCount='1'></FileStats><FileStats path='org/apache/nifi/provenance/lucene/LineageQuery.java' size='47' bugHash='da1092bbbcade8566665f785c79609a4' bugCount='1'></FileStats><FileStats path='org/apache/nifi/provenance/lucene/LuceneUtil.java' size='95' bugHash='020abf032ca1dc48507eb5a58d5f4acc' bugCount='1'></FileStats><FileStats path='org/apache/nifi/provenance/serialization/RecordReader.java' size='10' bugCount='0'></FileStats><FileStats path='org/apache/nifi/provenance/serialization/RecordReaders.java' size='47' bugCount='0'></FileStats><FileStats path='org/apache/nifi/provenance/serialization/RecordWriter.java' size='11' bugCount='0'></FileStats><FileStats path='org/apache/nifi/provenance/serialization/RecordWriters.java' size='9' bugCount='0'></FileStats><FileStats path='org/apache/nifi/provenance/toc/StandardTocReader.java' size='58' bugCount='0'></FileStats><FileStats path='org/apache/nifi/provenance/toc/StandardTocWriter.java' size='51' bugCount='0'></FileStats><FileStats path='org/apache/nifi/provenance/toc/TocReader.java' size='6' bugCount='0'></FileStats><FileStats path='org/apache/nifi/provenance/toc/TocUtil.java' size='8' bugCount='0'></FileStats><FileStats path='org/apache/nifi/provenance/toc/TocWriter.java' size='5' bugCount='0'></FileStats><PackageStats package='org.apache.nifi.provenance' total_bugs='20' priority_2='4' priority_3='16' total_size='2312' total_types='31'><ClassStats bugs='0' size='198' interface='false' sourceFile='IndexConfiguration.java' class='org.apache.nifi.provenance.IndexConfiguration'></ClassStats><ClassStats bugs='0' size='6' interface='false' sourceFile='IndexConfiguration.java' class='org.apache.nifi.provenance.IndexConfiguration$1'></ClassStats><ClassStats bugs='0' size='9' interface='false' sourceFile='IndexConfiguration.java' class='org.apache.nifi.provenance.IndexConfiguration$2'></ClassStats><ClassStats bugs='0' size='9' interface='false' sourceFile='IndexConfiguration.java' class='org.apache.nifi.provenance.IndexConfiguration$3'></ClassStats><ClassStats bugs='19' size='1049' priority_2='3' priority_3='16' interface='false' sourceFile='PersistentProvenanceRepository.java' class='org.apache.nifi.provenance.PersistentProvenanceRepository'></ClassStats><ClassStats bugs='0' size='17' interface='false' sourceFile='PersistentProvenanceRepository.java' class='org.apache.nifi.provenance.PersistentProvenanceRepository$1'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='PersistentProvenanceRepository.java' class='org.apache.nifi.provenance.PersistentProvenanceRepository$10'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='PersistentProvenanceRepository.java' class='org.apache.nifi.provenance.PersistentProvenanceRepository$11'></ClassStats><ClassStats bugs='0' size='19' interface='false' sourceFile='PersistentProvenanceRepository.java' class='org.apache.nifi.provenance.PersistentProvenanceRepository$12'></ClassStats><ClassStats bugs='0' size='9' interface='false' sourceFile='PersistentProvenanceRepository.java' class='org.apache.nifi.provenance.PersistentProvenanceRepository$13'></ClassStats><ClassStats bugs='0' size='25' interface='false' sourceFile='PersistentProvenanceRepository.java' class='org.apache.nifi.provenance.PersistentProvenanceRepository$14'></ClassStats><ClassStats bugs='0' size='60' interface='false' sourceFile='PersistentProvenanceRepository.java' class='org.apache.nifi.provenance.PersistentProvenanceRepository$15'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='PersistentProvenanceRepository.java' class='org.apache.nifi.provenance.PersistentProvenanceRepository$16'></ClassStats><ClassStats bugs='0' size='4' interface='false' sourceFile='PersistentProvenanceRepository.java' class='org.apache.nifi.provenance.PersistentProvenanceRepository$17'></ClassStats><ClassStats bugs='0' size='14' interface='false' sourceFile='PersistentProvenanceRepository.java' class='org.apache.nifi.provenance.PersistentProvenanceRepository$2'></ClassStats><ClassStats bugs='0' size='10' interface='false' sourceFile='PersistentProvenanceRepository.java' class='org.apache.nifi.provenance.PersistentProvenanceRepository$3'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='PersistentProvenanceRepository.java' class='org.apache.nifi.provenance.PersistentProvenanceRepository$4'></ClassStats><ClassStats bugs='0' size='25' interface='false' sourceFile='PersistentProvenanceRepository.java' class='org.apache.nifi.provenance.PersistentProvenanceRepository$5'></ClassStats><ClassStats bugs='0' size='6' interface='false' sourceFile='PersistentProvenanceRepository.java' class='org.apache.nifi.provenance.PersistentProvenanceRepository$6'></ClassStats><ClassStats bugs='0' size='9' interface='false' sourceFile='PersistentProvenanceRepository.java' class='org.apache.nifi.provenance.PersistentProvenanceRepository$7'></ClassStats><ClassStats bugs='0' size='40' interface='false' sourceFile='PersistentProvenanceRepository.java' class='org.apache.nifi.provenance.PersistentProvenanceRepository$8'></ClassStats><ClassStats bugs='0' size='13' interface='false' sourceFile='PersistentProvenanceRepository.java' class='org.apache.nifi.provenance.PersistentProvenanceRepository$9'></ClassStats><ClassStats bugs='0' size='29' interface='false' sourceFile='PersistentProvenanceRepository.java' class='org.apache.nifi.provenance.PersistentProvenanceRepository$ComputeLineageRunnable'></ClassStats><ClassStats bugs='0' size='31' interface='false' sourceFile='PersistentProvenanceRepository.java' class='org.apache.nifi.provenance.PersistentProvenanceRepository$GetMostRecentRunnable'></ClassStats><ClassStats bugs='0' size='14' interface='false' sourceFile='PersistentProvenanceRepository.java' class='org.apache.nifi.provenance.PersistentProvenanceRepository$NamedThreadFactory'></ClassStats><ClassStats bugs='1' size='13' priority_2='1' interface='false' sourceFile='PersistentProvenanceRepository.java' class='org.apache.nifi.provenance.PersistentProvenanceRepository$PathMapComparator'></ClassStats><ClassStats bugs='0' size='29' interface='false' sourceFile='PersistentProvenanceRepository.java' class='org.apache.nifi.provenance.PersistentProvenanceRepository$QueryRunnable'></ClassStats><ClassStats bugs='0' size='26' interface='false' sourceFile='PersistentProvenanceRepository.java' class='org.apache.nifi.provenance.PersistentProvenanceRepository$RemoveExpiredQueryResults'></ClassStats><ClassStats bugs='0' size='121' interface='false' sourceFile='RepositoryConfiguration.java' class='org.apache.nifi.provenance.RepositoryConfiguration'></ClassStats><ClassStats bugs='0' size='280' interface='false' sourceFile='StandardRecordReader.java' class='org.apache.nifi.provenance.StandardRecordReader'></ClassStats><ClassStats bugs='0' size='218' interface='false' sourceFile='StandardRecordWriter.java' class='org.apache.nifi.provenance.StandardRecordWriter'></ClassStats></PackageStats><PackageStats package='org.apache.nifi.provenance.expiration' total_bugs='0' total_size='27' total_types='2'><ClassStats bugs='0' size='3' interface='true' sourceFile='ExpirationAction.java' class='org.apache.nifi.provenance.expiration.ExpirationAction'></ClassStats><ClassStats bugs='0' size='24' interface='false' sourceFile='FileRemovalAction.java' class='org.apache.nifi.provenance.expiration.FileRemovalAction'></ClassStats></PackageStats><PackageStats package='org.apache.nifi.provenance.lucene' total_bugs='5' priority_2='2' priority_3='3' total_size='696' total_types='11'><ClassStats bugs='0' size='59' interface='false' sourceFile='DeleteIndexAction.java' class='org.apache.nifi.provenance.lucene.DeleteIndexAction'></ClassStats><ClassStats bugs='2' size='68' priority_2='1' priority_3='1' interface='false' sourceFile='DocsReader.java' class='org.apache.nifi.provenance.lucene.DocsReader'></ClassStats><ClassStats bugs='0' size='6' interface='false' sourceFile='FieldNames.java' class='org.apache.nifi.provenance.lucene.FieldNames'></ClassStats><ClassStats bugs='0' size='251' interface='false' sourceFile='IndexManager.java' class='org.apache.nifi.provenance.lucene.IndexManager'></ClassStats><ClassStats bugs='0' size='26' interface='false' sourceFile='IndexManager.java' class='org.apache.nifi.provenance.lucene.IndexManager$ActiveIndexSearcher'></ClassStats><ClassStats bugs='0' size='23' interface='false' sourceFile='IndexManager.java' class='org.apache.nifi.provenance.lucene.IndexManager$IndexWriterCount'></ClassStats><ClassStats bugs='0' size='56' interface='false' sourceFile='IndexSearch.java' class='org.apache.nifi.provenance.lucene.IndexSearch'></ClassStats><ClassStats bugs='1' size='65' priority_3='1' interface='false' sourceFile='IndexingAction.java' class='org.apache.nifi.provenance.lucene.IndexingAction'></ClassStats><ClassStats bugs='1' size='47' priority_2='1' interface='false' sourceFile='LineageQuery.java' class='org.apache.nifi.provenance.lucene.LineageQuery'></ClassStats><ClassStats bugs='1' size='73' priority_3='1' interface='false' sourceFile='LuceneUtil.java' class='org.apache.nifi.provenance.lucene.LuceneUtil'></ClassStats><ClassStats bugs='0' size='22' interface='false' sourceFile='LuceneUtil.java' class='org.apache.nifi.provenance.lucene.LuceneUtil$1'></ClassStats></PackageStats><PackageStats package='org.apache.nifi.provenance.serialization' total_bugs='0' total_size='77' total_types='4'><ClassStats bugs='0' size='10' interface='true' sourceFile='RecordReader.java' class='org.apache.nifi.provenance.serialization.RecordReader'></ClassStats><ClassStats bugs='0' size='47' interface='false' sourceFile='RecordReaders.java' class='org.apache.nifi.provenance.serialization.RecordReaders'></ClassStats><ClassStats bugs='0' size='11' interface='true' sourceFile='RecordWriter.java' class='org.apache.nifi.provenance.serialization.RecordWriter'></ClassStats><ClassStats bugs='0' size='9' interface='false' sourceFile='RecordWriters.java' class='org.apache.nifi.provenance.serialization.RecordWriters'></ClassStats></PackageStats><PackageStats package='org.apache.nifi.provenance.toc' total_bugs='0' total_size='128' total_types='5'><ClassStats bugs='0' size='58' interface='false' sourceFile='StandardTocReader.java' class='org.apache.nifi.provenance.toc.StandardTocReader'></ClassStats><ClassStats bugs='0' size='51' interface='false' sourceFile='StandardTocWriter.java' class='org.apache.nifi.provenance.toc.StandardTocWriter'></ClassStats><ClassStats bugs='0' size='6' interface='true' sourceFile='TocReader.java' class='org.apache.nifi.provenance.toc.TocReader'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='TocUtil.java' class='org.apache.nifi.provenance.toc.TocUtil'></ClassStats><ClassStats bugs='0' size='5' interface='true' sourceFile='TocWriter.java' class='org.apache.nifi.provenance.toc.TocWriter'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='724' totalMilliseconds='862' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' maxMicrosecondsPerInvocation='1821' standardDeviationMicrosecondsPerInvocation='371' invocations='1191'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1098' totalMilliseconds='382' name='edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory' maxMicrosecondsPerInvocation='31963' standardDeviationMicrosecondsPerInvocation='3225' invocations='348'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='308' totalMilliseconds='366' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' maxMicrosecondsPerInvocation='15077' standardDeviationMicrosecondsPerInvocation='826' invocations='1188'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='898' totalMilliseconds='307' name='edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory' maxMicrosecondsPerInvocation='19892' standardDeviationMicrosecondsPerInvocation='2232' invocations='342'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='914' totalMilliseconds='288' name='edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory' maxMicrosecondsPerInvocation='25117' standardDeviationMicrosecondsPerInvocation='2397' invocations='316'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='823' totalMilliseconds='256' name='edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory' maxMicrosecondsPerInvocation='19356' standardDeviationMicrosecondsPerInvocation='2265' invocations='311'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='323' totalMilliseconds='244' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' maxMicrosecondsPerInvocation='15333' standardDeviationMicrosecondsPerInvocation='772' invocations='754'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='815' totalMilliseconds='243' name='edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder' maxMicrosecondsPerInvocation='12181' standardDeviationMicrosecondsPerInvocation='1684' invocations='298'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='975' totalMilliseconds='223' name='edu.umd.cs.findbugs.detect.FieldItemSummary' maxMicrosecondsPerInvocation='21915' standardDeviationMicrosecondsPerInvocation='2390' invocations='229'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='546' totalMilliseconds='189' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' maxMicrosecondsPerInvocation='151363' standardDeviationMicrosecondsPerInvocation='8121' invocations='346'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='966' totalMilliseconds='185' name='edu.umd.cs.findbugs.detect.StreamResourceTracker' maxMicrosecondsPerInvocation='4067' standardDeviationMicrosecondsPerInvocation='916' invocations='192'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='796' totalMilliseconds='182' name='edu.umd.cs.findbugs.detect.FindNoSideEffectMethods' maxMicrosecondsPerInvocation='25078' standardDeviationMicrosecondsPerInvocation='1992' invocations='229'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='595' totalMilliseconds='155' name='edu.umd.cs.findbugs.detect.FindRefComparison$SpecialTypeAnalysis' maxMicrosecondsPerInvocation='11620' standardDeviationMicrosecondsPerInvocation='1346' invocations='261'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='449' totalMilliseconds='141' name='edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory' maxMicrosecondsPerInvocation='16269' standardDeviationMicrosecondsPerInvocation='1254' invocations='316'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='280' totalMilliseconds='89' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' maxMicrosecondsPerInvocation='18872' standardDeviationMicrosecondsPerInvocation='1368' invocations='317'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1496' totalMilliseconds='79' name='edu.umd.cs.findbugs.detect.FindOpenStream' maxMicrosecondsPerInvocation='19362' standardDeviationMicrosecondsPerInvocation='3908' invocations='53'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='311' totalMilliseconds='71' name='edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers' maxMicrosecondsPerInvocation='6544' standardDeviationMicrosecondsPerInvocation='721' invocations='229'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='51' totalMilliseconds='58' name='edu.umd.cs.findbugs.util.TopologicalSort' maxMicrosecondsPerInvocation='1910' standardDeviationMicrosecondsPerInvocation='100' invocations='1140'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='177' totalMilliseconds='55' name='edu.umd.cs.findbugs.classfile.engine.bcel.ConstantDataflowFactory' maxMicrosecondsPerInvocation='3346' standardDeviationMicrosecondsPerInvocation='384' invocations='316'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2270' totalMilliseconds='54' name='edu.umd.cs.findbugs.detect.FindUnreleasedLock$LockResourceTracker' maxMicrosecondsPerInvocation='14032' standardDeviationMicrosecondsPerInvocation='2881' invocations='24'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='914' totalMilliseconds='48' name='edu.umd.cs.findbugs.detect.DumbMethods' maxMicrosecondsPerInvocation='15562' standardDeviationMicrosecondsPerInvocation='2309' invocations='53'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='204' totalMilliseconds='46' name='edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase' maxMicrosecondsPerInvocation='2619' standardDeviationMicrosecondsPerInvocation='350' invocations='229'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='833' totalMilliseconds='44' name='edu.umd.cs.findbugs.detect.CheckRelaxingNullnessAnnotation' maxMicrosecondsPerInvocation='25850' standardDeviationMicrosecondsPerInvocation='3522' invocations='53'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='190' totalMilliseconds='43' name='edu.umd.cs.findbugs.detect.CalledMethods' maxMicrosecondsPerInvocation='3492' standardDeviationMicrosecondsPerInvocation='400' invocations='229'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>