
<BugCollection sequence='0' release='' analysisTimestamp='1570480162413' version='3.1.12' timestamp='1570477685140'><Project projectName='nifi-data-provenance-utils'><Jar>C:\Users\Nello\Desktop\repo2\nifi\nifi-commons\nifi-data-provenance-utils\target\classes</Jar><AuxClasspathEntry>C:\Users\Nello\.m2\repository\org\apache\nifi\nifi-api\0.4.0\nifi-api-0.4.0.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Nello\.m2\repository\org\apache\nifi\nifi-utils\0.4.0\nifi-utils-0.4.0.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Nello\.m2\repository\org\slf4j\slf4j-api\1.7.12\slf4j-api-1.7.12.jar</AuxClasspathEntry><SrcDir>C:\Users\Nello\Desktop\repo2\nifi\nifi-commons\nifi-data-provenance-utils\src\main\java</SrcDir><WrkDir>C:\Users\Nello\Desktop\repo2\nifi\nifi-commons\nifi-data-provenance-utils\target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='1718627db0b35c95a52e7b984c78fdc8' cweid='374' rank='18' abbrev='EI' category='MALICIOUS_CODE' priority='2' type='EI_EXPOSE_REP' instanceOccurrenceMax='0'><ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage><LongMessage>org.apache.nifi.provenance.AsyncLineageSubmission.getSubmissionTime() may expose internal representation by returning AsyncLineageSubmission.submissionTime</LongMessage><Class classname='org.apache.nifi.provenance.AsyncLineageSubmission' primary='true'><SourceLine classname='org.apache.nifi.provenance.AsyncLineageSubmission' start='29' end='86' sourcepath='org/apache/nifi/provenance/AsyncLineageSubmission.java' sourcefile='AsyncLineageSubmission.java'><Message>At AsyncLineageSubmission.java:[lines 29-86]</Message></SourceLine><Message>In class org.apache.nifi.provenance.AsyncLineageSubmission</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.AsyncLineageSubmission' signature='()Ljava/util/Date;' name='getSubmissionTime' primary='true'><SourceLine endBytecode='46' classname='org.apache.nifi.provenance.AsyncLineageSubmission' start='56' end='56' sourcepath='org/apache/nifi/provenance/AsyncLineageSubmission.java' sourcefile='AsyncLineageSubmission.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.AsyncLineageSubmission.getSubmissionTime()</Message></Method><Field isStatic='false' classname='org.apache.nifi.provenance.AsyncLineageSubmission' signature='Ljava/util/Date;' name='submissionTime' primary='true'><SourceLine classname='org.apache.nifi.provenance.AsyncLineageSubmission' sourcepath='org/apache/nifi/provenance/AsyncLineageSubmission.java' sourcefile='AsyncLineageSubmission.java'><Message>In AsyncLineageSubmission.java</Message></SourceLine><Message>Field org.apache.nifi.provenance.AsyncLineageSubmission.submissionTime</Message></Field><SourceLine endBytecode='4' classname='org.apache.nifi.provenance.AsyncLineageSubmission' start='56' end='56' sourcepath='org/apache/nifi/provenance/AsyncLineageSubmission.java' sourcefile='AsyncLineageSubmission.java' startBytecode='4' primary='true'><Message>At AsyncLineageSubmission.java:[line 56]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f23590511210ac1d78244b05c5ea2307' cweid='374' rank='18' abbrev='EI' category='MALICIOUS_CODE' priority='2' type='EI_EXPOSE_REP' instanceOccurrenceMax='0'><ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage><LongMessage>org.apache.nifi.provenance.AsyncQuerySubmission.getSubmissionTime() may expose internal representation by returning AsyncQuerySubmission.submissionTime</LongMessage><Class classname='org.apache.nifi.provenance.AsyncQuerySubmission' primary='true'><SourceLine classname='org.apache.nifi.provenance.AsyncQuerySubmission' start='25' end='76' sourcepath='org/apache/nifi/provenance/AsyncQuerySubmission.java' sourcefile='AsyncQuerySubmission.java'><Message>At AsyncQuerySubmission.java:[lines 25-76]</Message></SourceLine><Message>In class org.apache.nifi.provenance.AsyncQuerySubmission</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.AsyncQuerySubmission' signature='()Ljava/util/Date;' name='getSubmissionTime' primary='true'><SourceLine endBytecode='46' classname='org.apache.nifi.provenance.AsyncQuerySubmission' start='50' end='50' sourcepath='org/apache/nifi/provenance/AsyncQuerySubmission.java' sourcefile='AsyncQuerySubmission.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.AsyncQuerySubmission.getSubmissionTime()</Message></Method><Field isStatic='false' classname='org.apache.nifi.provenance.AsyncQuerySubmission' signature='Ljava/util/Date;' name='submissionTime' primary='true'><SourceLine classname='org.apache.nifi.provenance.AsyncQuerySubmission' sourcepath='org/apache/nifi/provenance/AsyncQuerySubmission.java' sourcefile='AsyncQuerySubmission.java'><Message>In AsyncQuerySubmission.java</Message></SourceLine><Message>Field org.apache.nifi.provenance.AsyncQuerySubmission.submissionTime</Message></Field><SourceLine endBytecode='4' classname='org.apache.nifi.provenance.AsyncQuerySubmission' start='50' end='50' sourcepath='org/apache/nifi/provenance/AsyncQuerySubmission.java' sourcefile='AsyncQuerySubmission.java' startBytecode='4' primary='true'><Message>At AsyncQuerySubmission.java:[line 50]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='dbab11ae2d62ab1f1e2f97600d974ddf' rank='20' abbrev='SIC' category='PERFORMANCE' priority='3' type='SIC_INNER_SHOULD_BE_STATIC_ANON' instanceOccurrenceMax='0'><ShortMessage>Could be refactored into a named static inner class</ShortMessage><LongMessage>The class org.apache.nifi.provenance.StandardLineageResult$1 could be refactored into a named _static_ inner class</LongMessage><Class role='CLASS_ANONYMOUS' classname='org.apache.nifi.provenance.StandardLineageResult$1'><SourceLine classname='org.apache.nifi.provenance.StandardLineageResult$1' start='211' end='219' sourcepath='org/apache/nifi/provenance/StandardLineageResult.java' sourcefile='StandardLineageResult.java'><Message>At StandardLineageResult.java:[lines 211-219]</Message></SourceLine><Message>Anonymous class org.apache.nifi.provenance.StandardLineageResult$1</Message></Class><Class classname='org.apache.nifi.provenance.StandardLineageResult' primary='true'><SourceLine classname='org.apache.nifi.provenance.StandardLineageResult' start='49' end='326' sourcepath='org/apache/nifi/provenance/StandardLineageResult.java' sourcefile='StandardLineageResult.java'><Message>At StandardLineageResult.java:[lines 49-326]</Message></SourceLine><Message>In class org.apache.nifi.provenance.StandardLineageResult</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.StandardLineageResult' signature='()V' name='computeLineage' primary='true'><SourceLine endBytecode='1394' classname='org.apache.nifi.provenance.StandardLineageResult' start='204' end='315' sourcepath='org/apache/nifi/provenance/StandardLineageResult.java' sourcefile='StandardLineageResult.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.StandardLineageResult.computeLineage()</Message></Method><SourceLine endBytecode='50' classname='org.apache.nifi.provenance.StandardLineageResult' start='211' end='211' sourcepath='org/apache/nifi/provenance/StandardLineageResult.java' sourcefile='StandardLineageResult.java' startBytecode='50' primary='true'><Message>At StandardLineageResult.java:[line 211]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='1dd89c98d5e379b729dfc3b02f015117' cweid='476' rank='13' abbrev='NP' category='STYLE' priority='2' type='NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE' instanceOccurrenceMax='0'><ShortMessage>Possible null pointer dereference on branch that might be infeasible</ShortMessage><LongMessage>Possible null pointer dereference of a on branch that might be infeasible in org.apache.nifi.provenance.StandardProvenanceEventRecord.different(List, List)</LongMessage><Class classname='org.apache.nifi.provenance.StandardProvenanceEventRecord' primary='true'><SourceLine classname='org.apache.nifi.provenance.StandardProvenanceEventRecord' start='36' end='399' sourcepath='org/apache/nifi/provenance/StandardProvenanceEventRecord.java' sourcefile='StandardProvenanceEventRecord.java'><Message>At StandardProvenanceEventRecord.java:[lines 36-399]</Message></SourceLine><Message>In class org.apache.nifi.provenance.StandardProvenanceEventRecord</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.StandardProvenanceEventRecord' signature='(Ljava/util/List;Ljava/util/List;)Z' name='different' primary='true'><SourceLine endBytecode='354' classname='org.apache.nifi.provenance.StandardProvenanceEventRecord' start='366' end='394' sourcepath='org/apache/nifi/provenance/StandardProvenanceEventRecord.java' sourcefile='StandardProvenanceEventRecord.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.StandardProvenanceEventRecord.different(List, List)</Message></Method><LocalVariable role='LOCAL_VARIABLE_VALUE_OF' pc='30' name='a' register='1'><Message>Value loaded from a</Message></LocalVariable><SourceLine role='SOURCE_LINE_DEREF' endBytecode='31' classname='org.apache.nifi.provenance.StandardProvenanceEventRecord' start='378' end='378' sourcepath='org/apache/nifi/provenance/StandardProvenanceEventRecord.java' sourcefile='StandardProvenanceEventRecord.java' startBytecode='31' primary='true'><Message>Dereferenced at StandardProvenanceEventRecord.java:[line 378]</Message></SourceLine><SourceLine role='SOURCE_LINE_KNOWN_NULL' endBytecode='15' classname='org.apache.nifi.provenance.StandardProvenanceEventRecord' start='370' end='370' sourcepath='org/apache/nifi/provenance/StandardProvenanceEventRecord.java' sourcefile='StandardProvenanceEventRecord.java' startBytecode='15'><Message>Known null at StandardProvenanceEventRecord.java:[line 370]</Message></SourceLine><SourceLine role='SOURCE_LINE_KNOWN_NULL' endBytecode='21' classname='org.apache.nifi.provenance.StandardProvenanceEventRecord' start='374' end='374' sourcepath='org/apache/nifi/provenance/StandardProvenanceEventRecord.java' sourcefile='StandardProvenanceEventRecord.java' startBytecode='21'><Message>Known null at StandardProvenanceEventRecord.java:[line 374]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c3acdf2bde8c4edbb68edf4e81f9e801' rank='18' abbrev='UrF' category='PERFORMANCE' priority='2' type='URF_UNREAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Unread field</ShortMessage><LongMessage>Unread field: org.apache.nifi.provenance.StandardProvenanceEventRecord$Builder.contentType</LongMessage><Class classname='org.apache.nifi.provenance.StandardProvenanceEventRecord$Builder' primary='true'><SourceLine classname='org.apache.nifi.provenance.StandardProvenanceEventRecord$Builder' start='412' end='749' sourcepath='org/apache/nifi/provenance/StandardProvenanceEventRecord.java' sourcefile='StandardProvenanceEventRecord.java'><Message>At StandardProvenanceEventRecord.java:[lines 412-749]</Message></SourceLine><Message>In class org.apache.nifi.provenance.StandardProvenanceEventRecord$Builder</Message></Class><Field isStatic='false' classname='org.apache.nifi.provenance.StandardProvenanceEventRecord$Builder' signature='Ljava/lang/String;' name='contentType' primary='true'><SourceLine classname='org.apache.nifi.provenance.StandardProvenanceEventRecord$Builder' sourcepath='org/apache/nifi/provenance/StandardProvenanceEventRecord.java' sourcefile='StandardProvenanceEventRecord.java'><Message>In StandardProvenanceEventRecord.java</Message></SourceLine><Message>Field org.apache.nifi.provenance.StandardProvenanceEventRecord$Builder.contentType</Message></Field><SourceLine endBytecode='64' classname='org.apache.nifi.provenance.StandardProvenanceEventRecord$Builder' start='426' end='426' sourcepath='org/apache/nifi/provenance/StandardProvenanceEventRecord.java' sourcefile='StandardProvenanceEventRecord.java' startBytecode='64' primary='true'><Message>At StandardProvenanceEventRecord.java:[line 426]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='d11a907bf4b2d7a9a11d611fa3264897' cweid='374' rank='18' abbrev='EI' category='MALICIOUS_CODE' priority='2' type='EI_EXPOSE_REP' instanceOccurrenceMax='0'><ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage><LongMessage>org.apache.nifi.provenance.StandardQueryResult.getExpiration() may expose internal representation by returning StandardQueryResult.expirationDate</LongMessage><Class classname='org.apache.nifi.provenance.StandardQueryResult' primary='true'><SourceLine classname='org.apache.nifi.provenance.StandardQueryResult' start='37' end='177' sourcepath='org/apache/nifi/provenance/StandardQueryResult.java' sourcefile='StandardQueryResult.java'><Message>At StandardQueryResult.java:[lines 37-177]</Message></SourceLine><Message>In class org.apache.nifi.provenance.StandardQueryResult</Message></Class><Method isStatic='false' classname='org.apache.nifi.provenance.StandardQueryResult' signature='()Ljava/util/Date;' name='getExpiration' primary='true'><SourceLine endBytecode='46' classname='org.apache.nifi.provenance.StandardQueryResult' start='106' end='106' sourcepath='org/apache/nifi/provenance/StandardQueryResult.java' sourcefile='StandardQueryResult.java' startBytecode='0'></SourceLine><Message>In method org.apache.nifi.provenance.StandardQueryResult.getExpiration()</Message></Method><Field isStatic='false' classname='org.apache.nifi.provenance.StandardQueryResult' signature='Ljava/util/Date;' name='expirationDate' primary='true'><SourceLine classname='org.apache.nifi.provenance.StandardQueryResult' sourcepath='org/apache/nifi/provenance/StandardQueryResult.java' sourcefile='StandardQueryResult.java'><Message>In StandardQueryResult.java</Message></SourceLine><Message>Field org.apache.nifi.provenance.StandardQueryResult.expirationDate</Message></Field><SourceLine endBytecode='4' classname='org.apache.nifi.provenance.StandardQueryResult' start='106' end='106' sourcepath='org/apache/nifi/provenance/StandardQueryResult.java' sourcefile='StandardQueryResult.java' startBytecode='4' primary='true'><Message>At StandardQueryResult.java:[line 106]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='6030b900a2cb1d8de5fa23e3b7c2ed21' rank='19' abbrev='Se' category='BAD_PRACTICE' priority='2' type='SE_COMPARATOR_SHOULD_BE_SERIALIZABLE' instanceOccurrenceMax='0'><ShortMessage>Comparator doesn't implement Serializable</ShortMessage><LongMessage>org.apache.nifi.provenance.StandardQueryResult$EventIdComparator implements Comparator but not Serializable</LongMessage><Class classname='org.apache.nifi.provenance.StandardQueryResult$EventIdComparator' primary='true'><SourceLine classname='org.apache.nifi.provenance.StandardQueryResult$EventIdComparator' start='179' end='182' sourcepath='org/apache/nifi/provenance/StandardQueryResult.java' sourcefile='StandardQueryResult.java'><Message>At StandardQueryResult.java:[lines 179-182]</Message></SourceLine><Message>In class org.apache.nifi.provenance.StandardQueryResult$EventIdComparator</Message></Class><SourceLine synthetic='true' classname='org.apache.nifi.provenance.StandardQueryResult$EventIdComparator' start='179' end='182' sourcepath='org/apache/nifi/provenance/StandardQueryResult.java' sourcefile='StandardQueryResult.java'><Message>At StandardQueryResult.java:[lines 179-182]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='d5add0ea918ed0b6a3187f6706d36292' rank='12' abbrev='UwF' category='CORRECTNESS' priority='2' type='UWF_UNWRITTEN_FIELD' instanceOccurrenceMax='0'><ShortMessage>Unwritten field</ShortMessage><LongMessage>Unwritten field: org.apache.nifi.provenance.lineage.FlowFileNode.clusterNodeIdentifier</LongMessage><Class classname='org.apache.nifi.provenance.lineage.FlowFileNode' primary='true'><SourceLine classname='org.apache.nifi.provenance.lineage.FlowFileNode' start='27' end='82' sourcepath='org/apache/nifi/provenance/lineage/FlowFileNode.java' sourcefile='FlowFileNode.java'><Message>At FlowFileNode.java:[lines 27-82]</Message></SourceLine><Message>In class org.apache.nifi.provenance.lineage.FlowFileNode</Message></Class><Field isStatic='false' classname='org.apache.nifi.provenance.lineage.FlowFileNode' signature='Ljava/lang/String;' name='clusterNodeIdentifier' primary='true'><SourceLine classname='org.apache.nifi.provenance.lineage.FlowFileNode' sourcepath='org/apache/nifi/provenance/lineage/FlowFileNode.java' sourcefile='FlowFileNode.java'><Message>In FlowFileNode.java</Message></SourceLine><Message>Field org.apache.nifi.provenance.lineage.FlowFileNode.clusterNodeIdentifier</Message></Field><SourceLine endBytecode='1' classname='org.apache.nifi.provenance.lineage.FlowFileNode' start='45' end='45' sourcepath='org/apache/nifi/provenance/lineage/FlowFileNode.java' sourcefile='FlowFileNode.java' startBytecode='1' primary='true'><Message>At FlowFileNode.java:[line 45]</Message></SourceLine></BugInstance><BugCategory category='BAD_PRACTICE'><Description>Bad practice</Description></BugCategory><BugCategory category='MALICIOUS_CODE'><Description>Malicious code vulnerability</Description></BugCategory><BugCategory category='PERFORMANCE'><Description>Performance</Description></BugCategory><BugCategory category='CORRECTNESS'><Description>Correctness</Description></BugCategory><BugCategory category='STYLE'><Description>Dodgy code</Description></BugCategory><BugPattern cweid='374' abbrev='EI' category='MALICIOUS_CODE' type='EI_EXPOSE_REP'><ShortDescription>May expose internal representation by returning reference to mutable object</ShortDescription><Details>

  &lt;p&gt; Returning a reference to a mutable object value stored in one of the object's fields
  exposes the internal representation of the object.&amp;nbsp;
   If instances
   are accessed by untrusted code, and unchecked changes to
   the mutable object would compromise security or other
   important properties, you will need to do something different.
  Returning a new copy of the object is better approach in many situations.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='UwF' category='CORRECTNESS' type='UWF_UNWRITTEN_FIELD'><ShortDescription>Unwritten field</ShortDescription><Details>

  &lt;p&gt; This field is never written.&amp;nbsp; All reads of it will return the default
value. Check for errors (should it have been initialized?), or remove it if it is useless.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='SIC' category='PERFORMANCE' type='SIC_INNER_SHOULD_BE_STATIC_ANON'><ShortDescription>Could be refactored into a named static inner class</ShortDescription><Details>

  &lt;p&gt; This class is an inner class, but does not use its embedded reference
  to the object which created it.&amp;nbsp; This reference makes the instances
  of the class larger, and may keep the reference to the creator object
  alive longer than necessary.&amp;nbsp; If possible, the class should be
  made into a &lt;em&gt;static&lt;/em&gt; inner class. Since anonymous inner
classes cannot be marked as static, doing this will require refactoring
the inner class so that it is a named inner class.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='NP' category='STYLE' type='NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE'><ShortDescription>Possible null pointer dereference on branch that might be infeasible</ShortDescription><Details>

&lt;p&gt; There is a branch of statement that, &lt;em&gt;if executed,&lt;/em&gt;  guarantees that
a null value will be dereferenced, which
would generate a &lt;code&gt;NullPointerException&lt;/code&gt; when the code is executed.
Of course, the problem might be that the branch or statement is infeasible and that
the null pointer exception can't ever be executed; deciding that is beyond the ability of SpotBugs.
Due to the fact that this value had been previously tested for nullness,
this is a definite possibility.
&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='UrF' category='PERFORMANCE' type='URF_UNREAD_FIELD'><ShortDescription>Unread field</ShortDescription><Details>

  &lt;p&gt; This field is never read.&amp;nbsp; Consider removing it from the class.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='Se' category='BAD_PRACTICE' type='SE_COMPARATOR_SHOULD_BE_SERIALIZABLE'><ShortDescription>Comparator doesn't implement Serializable</ShortDescription><Details>

  &lt;p&gt; This class implements the &lt;code&gt;Comparator&lt;/code&gt; interface. You
should consider whether or not it should also implement the &lt;code&gt;Serializable&lt;/code&gt;
interface. If a comparator is used to construct an ordered collection
such as a &lt;code&gt;TreeMap&lt;/code&gt;, then the &lt;code&gt;TreeMap&lt;/code&gt;
will be serializable only if the comparator is also serializable.
As most comparators have little or no state, making them serializable
is generally easy and good defensive programming.
&lt;/p&gt;

    </Details></BugPattern><BugCode cweid='476' abbrev='NP'><Description>Null pointer dereference</Description></BugCode><BugCode abbrev='Se'><Description>Incorrect definition of Serializable class</Description></BugCode><BugCode abbrev='EI'><Description>Method returning array may expose internal representation</Description></BugCode><BugCode abbrev='UwF'><Description>Unwritten field</Description></BugCode><BugCode abbrev='UrF'><Description>Unread field</Description></BugCode><BugCode abbrev='SIC'><Description>Inner class could be made static</Description></BugCode><Errors missingClasses='0' errors='0'></Errors><FindBugsSummary num_packages='2' total_classes='18' priority_2='7' priority_3='1' total_size='1081' clock_seconds='3.31' referenced_classes='89' vm_version='25.221-b11' total_bugs='8' java_version='1.8.0_221' gc_seconds='0.04' alloc_mbytes='3641.00' cpu_seconds='14.19' peak_mbytes='192.04' timestamp='Mon, 7 Oct 2019 21:48:05 +0200'><FileStats path='org/apache/nifi/provenance/AsyncLineageSubmission.java' size='37' bugHash='93f8dba3d5dbca6ae0f19dc4800f9c17' bugCount='1'></FileStats><FileStats path='org/apache/nifi/provenance/AsyncQuerySubmission.java' size='31' bugHash='1b7db9b4443155f7da4d68c3b741b9a2' bugCount='1'></FileStats><FileStats path='org/apache/nifi/provenance/NamedSearchableField.java' size='38' bugCount='0'></FileStats><FileStats path='org/apache/nifi/provenance/SearchableFieldParser.java' size='18' bugCount='0'></FileStats><FileStats path='org/apache/nifi/provenance/SearchableFields.java' size='54' bugCount='0'></FileStats><FileStats path='org/apache/nifi/provenance/StandardLineageResult.java' size='179' bugHash='f86b1e4f8a49e9ae2f0109ad39bcf16a' bugCount='1'></FileStats><FileStats path='org/apache/nifi/provenance/StandardProvenanceEventRecord.java' size='489' bugHash='4d5224628f68d2b1c4105e5dce6b6622' bugCount='2'></FileStats><FileStats path='org/apache/nifi/provenance/StandardQueryResult.java' size='102' bugHash='1e74f06a5e7ea6129bed8ebe770284a6' bugCount='2'></FileStats><FileStats path='org/apache/nifi/provenance/lineage/EdgeNode.java' size='29' bugCount='0'></FileStats><FileStats path='org/apache/nifi/provenance/lineage/EventNode.java' size='42' bugCount='0'></FileStats><FileStats path='org/apache/nifi/provenance/lineage/FlowFileLineage.java' size='30' bugCount='0'></FileStats><FileStats path='org/apache/nifi/provenance/lineage/FlowFileNode.java' size='32' bugHash='df8d8f511be43c5e97e67f3e309cbea7' bugCount='1'></FileStats><PackageStats package='org.apache.nifi.provenance' total_bugs='7' priority_2='6' priority_3='1' total_size='948' total_types='14'><ClassStats bugs='1' size='37' priority_2='1' interface='false' sourceFile='AsyncLineageSubmission.java' class='org.apache.nifi.provenance.AsyncLineageSubmission'></ClassStats><ClassStats bugs='1' size='31' priority_2='1' interface='false' sourceFile='AsyncQuerySubmission.java' class='org.apache.nifi.provenance.AsyncQuerySubmission'></ClassStats><ClassStats bugs='0' size='38' interface='false' sourceFile='NamedSearchableField.java' class='org.apache.nifi.provenance.NamedSearchableField'></ClassStats><ClassStats bugs='0' size='18' interface='false' sourceFile='SearchableFieldParser.java' class='org.apache.nifi.provenance.SearchableFieldParser'></ClassStats><ClassStats bugs='0' size='54' interface='false' sourceFile='SearchableFields.java' class='org.apache.nifi.provenance.SearchableFields'></ClassStats><ClassStats bugs='1' size='165' priority_3='1' interface='false' sourceFile='StandardLineageResult.java' class='org.apache.nifi.provenance.StandardLineageResult'></ClassStats><ClassStats bugs='0' size='10' interface='false' sourceFile='StandardLineageResult.java' class='org.apache.nifi.provenance.StandardLineageResult$1'></ClassStats><ClassStats bugs='0' size='4' interface='false' sourceFile='StandardLineageResult.java' class='org.apache.nifi.provenance.StandardLineageResult$2'></ClassStats><ClassStats bugs='1' size='204' priority_2='1' interface='false' sourceFile='StandardProvenanceEventRecord.java' class='org.apache.nifi.provenance.StandardProvenanceEventRecord'></ClassStats><ClassStats bugs='0' size='4' interface='false' sourceFile='StandardProvenanceEventRecord.java' class='org.apache.nifi.provenance.StandardProvenanceEventRecord$1'></ClassStats><ClassStats bugs='1' size='281' priority_2='1' interface='false' sourceFile='StandardProvenanceEventRecord.java' class='org.apache.nifi.provenance.StandardProvenanceEventRecord$Builder'></ClassStats><ClassStats bugs='1' size='94' priority_2='1' interface='false' sourceFile='StandardQueryResult.java' class='org.apache.nifi.provenance.StandardQueryResult'></ClassStats><ClassStats bugs='0' size='1' interface='false' sourceFile='StandardQueryResult.java' class='org.apache.nifi.provenance.StandardQueryResult$1'></ClassStats><ClassStats bugs='1' size='7' priority_2='1' interface='false' sourceFile='StandardQueryResult.java' class='org.apache.nifi.provenance.StandardQueryResult$EventIdComparator'></ClassStats></PackageStats><PackageStats package='org.apache.nifi.provenance.lineage' total_bugs='1' priority_2='1' total_size='133' total_types='4'><ClassStats bugs='0' size='29' interface='false' sourceFile='EdgeNode.java' class='org.apache.nifi.provenance.lineage.EdgeNode'></ClassStats><ClassStats bugs='0' size='42' interface='false' sourceFile='EventNode.java' class='org.apache.nifi.provenance.lineage.EventNode'></ClassStats><ClassStats bugs='0' size='30' interface='false' sourceFile='FlowFileLineage.java' class='org.apache.nifi.provenance.lineage.FlowFileLineage'></ClassStats><ClassStats bugs='1' size='32' priority_2='1' interface='false' sourceFile='FlowFileNode.java' class='org.apache.nifi.provenance.lineage.FlowFileNode'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='685' totalMilliseconds='388' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' maxMicrosecondsPerInvocation='10479' standardDeviationMicrosecondsPerInvocation='539' invocations='566'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='444' totalMilliseconds='251' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' maxMicrosecondsPerInvocation='15122' standardDeviationMicrosecondsPerInvocation='1019' invocations='565'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='653' totalMilliseconds='158' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' maxMicrosecondsPerInvocation='137294' standardDeviationMicrosecondsPerInvocation='8784' invocations='243'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='544' totalMilliseconds='117' name='edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder' maxMicrosecondsPerInvocation='19369' standardDeviationMicrosecondsPerInvocation='1637' invocations='215'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='446' totalMilliseconds='109' name='edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory' maxMicrosecondsPerInvocation='17038' standardDeviationMicrosecondsPerInvocation='1773' invocations='245'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1207' totalMilliseconds='107' name='edu.umd.cs.findbugs.detect.FieldItemSummary' maxMicrosecondsPerInvocation='9363' standardDeviationMicrosecondsPerInvocation='2122' invocations='89'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='416' totalMilliseconds='101' name='edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory' maxMicrosecondsPerInvocation='18786' standardDeviationMicrosecondsPerInvocation='1359' invocations='243'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='385' totalMilliseconds='93' name='edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory' maxMicrosecondsPerInvocation='12227' standardDeviationMicrosecondsPerInvocation='1201' invocations='243'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='387' totalMilliseconds='91' name='edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory' maxMicrosecondsPerInvocation='14907' standardDeviationMicrosecondsPerInvocation='1250' invocations='236'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='226' totalMilliseconds='87' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' maxMicrosecondsPerInvocation='4838' standardDeviationMicrosecondsPerInvocation='436' invocations='385'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='857' totalMilliseconds='76' name='edu.umd.cs.findbugs.detect.FindNoSideEffectMethods' maxMicrosecondsPerInvocation='5561' standardDeviationMicrosecondsPerInvocation='1289' invocations='89'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='273' totalMilliseconds='66' name='edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory' maxMicrosecondsPerInvocation='12570' standardDeviationMicrosecondsPerInvocation='866' invocations='243'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='419' totalMilliseconds='53' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' maxMicrosecondsPerInvocation='16457' standardDeviationMicrosecondsPerInvocation='1779' invocations='128'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='421' totalMilliseconds='52' name='edu.umd.cs.findbugs.detect.FindRefComparison$SpecialTypeAnalysis' maxMicrosecondsPerInvocation='8797' standardDeviationMicrosecondsPerInvocation='953' invocations='124'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='96' totalMilliseconds='50' name='edu.umd.cs.findbugs.util.TopologicalSort' maxMicrosecondsPerInvocation='2346' standardDeviationMicrosecondsPerInvocation='197' invocations='523'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='468' totalMilliseconds='41' name='edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers' maxMicrosecondsPerInvocation='6863' standardDeviationMicrosecondsPerInvocation='980' invocations='89'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2015' totalMilliseconds='36' name='edu.umd.cs.findbugs.detect.CheckRelaxingNullnessAnnotation' maxMicrosecondsPerInvocation='25959' standardDeviationMicrosecondsPerInvocation='5872' invocations='18'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='326' totalMilliseconds='29' name='edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical' maxMicrosecondsPerInvocation='10809' standardDeviationMicrosecondsPerInvocation='1196' invocations='89'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1544' totalMilliseconds='27' name='edu.umd.cs.findbugs.detect.FindDeadLocalStores' maxMicrosecondsPerInvocation='15414' standardDeviationMicrosecondsPerInvocation='3479' invocations='18'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='301' totalMilliseconds='26' name='edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures' maxMicrosecondsPerInvocation='4603' standardDeviationMicrosecondsPerInvocation='744' invocations='89'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='300' totalMilliseconds='26' name='edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase' maxMicrosecondsPerInvocation='4024' standardDeviationMicrosecondsPerInvocation='550' invocations='89'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='276' totalMilliseconds='24' name='edu.umd.cs.findbugs.detect.BuildStringPassthruGraph' maxMicrosecondsPerInvocation='8784' standardDeviationMicrosecondsPerInvocation='970' invocations='89'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='275' totalMilliseconds='24' name='edu.umd.cs.findbugs.detect.CalledMethods' maxMicrosecondsPerInvocation='1903' standardDeviationMicrosecondsPerInvocation='440' invocations='89'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>