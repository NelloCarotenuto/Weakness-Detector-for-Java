
<BugCollection sequence='0' release='' analysisTimestamp='1568210685900' version='3.1.12' timestamp='1568207286000'><Project projectName='Camel :: Disruptor'><Jar>./camel/components/camel-disruptor/target/classes</Jar><AuxClasspathEntry>.m2/repository/org/apache/camel/camel-core/2.20.4/camel-core-2.20.4.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/com/github/ben-manes/caffeine/caffeine/2.5.5/caffeine-2.5.5.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/org/apache/camel/json-simple-ordered/2.20.4/json-simple-ordered-2.20.4.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/org/slf4j/slf4j-api/1.7.22/slf4j-api-1.7.22.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/com/lmax/disruptor/3.3.6/disruptor-3.3.6.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/org/apache/camel/apt/2.20.4/apt-2.20.4.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/org/apache/camel/spi-annotations/2.20.4/spi-annotations-2.20.4.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/com/sun/xml/bind/jaxb-core/2.2.11/jaxb-core-2.2.11.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.11/jaxb-impl-2.2.11.jar</AuxClasspathEntry><SrcDir>./camel/components/camel-disruptor/src/main/java</SrcDir><WrkDir>./camel/components/camel-disruptor/target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='12b21e552d4b4777404a940787aba16f' rank='20' abbrev='SIC' category='PERFORMANCE' priority='3' type='SIC_INNER_SHOULD_BE_STATIC_ANON' instanceOccurrenceMax='0'><ShortMessage>Could be refactored into a named static inner class</ShortMessage><LongMessage>The class org.apache.camel.component.disruptor.DisruptorConsumer$2 could be refactored into a named _static_ inner class</LongMessage><Class role='CLASS_ANONYMOUS' classname='org.apache.camel.component.disruptor.DisruptorConsumer$2'><SourceLine classname='org.apache.camel.component.disruptor.DisruptorConsumer$2' start='161' end='170' sourcepath='org/apache/camel/component/disruptor/DisruptorConsumer.java' sourcefile='DisruptorConsumer.java'><Message>At DisruptorConsumer.java:[lines 161-170]</Message></SourceLine><Message>Anonymous class org.apache.camel.component.disruptor.DisruptorConsumer$2</Message></Class><Class classname='org.apache.camel.component.disruptor.DisruptorConsumer' primary='true'><SourceLine classname='org.apache.camel.component.disruptor.DisruptorConsumer' start='42' end='187' sourcepath='org/apache/camel/component/disruptor/DisruptorConsumer.java' sourcefile='DisruptorConsumer.java'><Message>At DisruptorConsumer.java:[lines 42-187]</Message></SourceLine><Message>In class org.apache.camel.component.disruptor.DisruptorConsumer</Message></Class><Method isStatic='false' classname='org.apache.camel.component.disruptor.DisruptorConsumer' signature='(Lorg/apache/camel/component/disruptor/SynchronizedExchange;)V' name='process' primary='true'><SourceLine endBytecode='361' classname='org.apache.camel.component.disruptor.DisruptorConsumer' start='142' end='187' sourcepath='org/apache/camel/component/disruptor/DisruptorConsumer.java' sourcefile='DisruptorConsumer.java' startBytecode='0'></SourceLine><Message>In method org.apache.camel.component.disruptor.DisruptorConsumer.process(SynchronizedExchange)</Message></Method><SourceLine endBytecode='71' classname='org.apache.camel.component.disruptor.DisruptorConsumer' start='161' end='161' sourcepath='org/apache/camel/component/disruptor/DisruptorConsumer.java' sourcefile='DisruptorConsumer.java' startBytecode='71' primary='true'><Message>At DisruptorConsumer.java:[line 161]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b7d1e4f8dc541e35d549b46e5932c017' cweid='476' rank='8' abbrev='NP' category='CORRECTNESS' priority='2' type='NP_NULL_ON_SOME_PATH' instanceOccurrenceMax='0'><ShortMessage>Possible null pointer dereference</ShortMessage><LongMessage>Possible null pointer dereference of DisruptorReference.handlers in org.apache.camel.component.disruptor.DisruptorReference.shutdownDisruptor(boolean)</LongMessage><Class classname='org.apache.camel.component.disruptor.DisruptorReference' primary='true'><SourceLine classname='org.apache.camel.component.disruptor.DisruptorReference' start='52' end='388' sourcepath='org/apache/camel/component/disruptor/DisruptorReference.java' sourcefile='DisruptorReference.java'><Message>At DisruptorReference.java:[lines 52-388]</Message></SourceLine><Message>In class org.apache.camel.component.disruptor.DisruptorReference</Message></Class><Method isStatic='false' classname='org.apache.camel.component.disruptor.DisruptorReference' signature='(Z)V' name='shutdownDisruptor' primary='true'><SourceLine endBytecode='404' classname='org.apache.camel.component.disruptor.DisruptorReference' start='284' end='325' sourcepath='org/apache/camel/component/disruptor/DisruptorReference.java' sourcefile='DisruptorReference.java' startBytecode='0'></SourceLine><Message>In method org.apache.camel.component.disruptor.DisruptorReference.shutdownDisruptor(boolean)</Message></Method><Field isStatic='false' role='FIELD_CONTAINS_VALUE' classname='org.apache.camel.component.disruptor.DisruptorReference' signature='[Lorg/apache/camel/component/disruptor/LifecycleAwareExchangeEventHandler;' name='handlers' primary='true'><SourceLine classname='org.apache.camel.component.disruptor.DisruptorReference' sourcepath='org/apache/camel/component/disruptor/DisruptorReference.java' sourcefile='DisruptorReference.java'><Message>In DisruptorReference.java</Message></SourceLine><Message>Value contained in org.apache.camel.component.disruptor.DisruptorReference.handlers</Message></Field><SourceLine role='SOURCE_LINE_DEREF' endBytecode='91' classname='org.apache.camel.component.disruptor.DisruptorReference' start='302' end='302' sourcepath='org/apache/camel/component/disruptor/DisruptorReference.java' sourcefile='DisruptorReference.java' startBytecode='91' primary='true'><Message>Dereferenced at DisruptorReference.java:[line 302]</Message></SourceLine><SourceLine role='SOURCE_LINE_KNOWN_NULL' endBytecode='43' classname='org.apache.camel.component.disruptor.DisruptorReference' start='290' end='290' sourcepath='org/apache/camel/component/disruptor/DisruptorReference.java' sourcefile='DisruptorReference.java' startBytecode='43'><Message>Known null at DisruptorReference.java:[line 290]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='5b40e860b6118cc35d7314b6187d33fb' cweid='476' rank='20' abbrev='RCN' category='STYLE' priority='3' type='RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE' instanceOccurrenceMax='0'><ShortMessage>Redundant nullcheck of value known to be non-null</ShortMessage><LongMessage>Redundant nullcheck of consumerEventHandlers, which is known to be non-null in org.apache.camel.component.disruptor.DisruptorReference.createDisruptor()</LongMessage><Class classname='org.apache.camel.component.disruptor.DisruptorReference' primary='true'><SourceLine classname='org.apache.camel.component.disruptor.DisruptorReference' start='52' end='388' sourcepath='org/apache/camel/component/disruptor/DisruptorReference.java' sourcefile='DisruptorReference.java'><Message>At DisruptorReference.java:[lines 52-388]</Message></SourceLine><Message>In class org.apache.camel.component.disruptor.DisruptorReference</Message></Class><Method isStatic='false' classname='org.apache.camel.component.disruptor.DisruptorReference' signature='()Lcom/lmax/disruptor/dsl/Disruptor;' name='createDisruptor' primary='true'><SourceLine endBytecode='449' classname='org.apache.camel.component.disruptor.DisruptorReference' start='193' end='220' sourcepath='org/apache/camel/component/disruptor/DisruptorReference.java' sourcefile='DisruptorReference.java' startBytecode='0'></SourceLine><Message>In method org.apache.camel.component.disruptor.DisruptorReference.createDisruptor()</Message></Method><LocalVariable role='LOCAL_VARIABLE_VALUE_OF' pc='83' name='consumerEventHandlers' register='5'><Message>Value loaded from consumerEventHandlers</Message></LocalVariable><Method isStatic='false' role='METHOD_RETURN_VALUE_OF' classname='org.apache.camel.component.disruptor.DisruptorEndpoint' signature='()Ljava/util/Map;' name='createConsumerEventHandlers'><SourceLine endBytecode='173' classname='org.apache.camel.component.disruptor.DisruptorEndpoint' start='318' end='325' sourcepath='org/apache/camel/component/disruptor/DisruptorEndpoint.java' sourcefile='DisruptorEndpoint.java' startBytecode='0'></SourceLine><Message>Return value of org.apache.camel.component.disruptor.DisruptorEndpoint.createConsumerEventHandlers() of type java.util.Map</Message></Method><SourceLine role='SOURCE_REDUNDANT_NULL_CHECK' endBytecode='85' classname='org.apache.camel.component.disruptor.DisruptorReference' start='205' end='205' sourcepath='org/apache/camel/component/disruptor/DisruptorReference.java' sourcefile='DisruptorReference.java' startBytecode='85' primary='true'><Message>Redundant null check at DisruptorReference.java:[line 205]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='acf49123743a4654a2b4dd9da998bfaa' cweid='253' rank='19' abbrev='RV' category='BAD_PRACTICE' priority='3' type='RV_RETURN_VALUE_IGNORED_BAD_PRACTICE' instanceOccurrenceMax='0'><ShortMessage>Method ignores exceptional return value</ShortMessage><LongMessage>Exceptional return value of java.util.Queue.offer(Object) ignored in org.apache.camel.component.disruptor.DisruptorReference$BlockingExchangeEventHandler.onEvent(ExchangeEvent, long, boolean)</LongMessage><Class classname='org.apache.camel.component.disruptor.DisruptorReference$BlockingExchangeEventHandler' primary='true'><SourceLine classname='org.apache.camel.component.disruptor.DisruptorReference$BlockingExchangeEventHandler' start='396' end='415' sourcepath='org/apache/camel/component/disruptor/DisruptorReference.java' sourcefile='DisruptorReference.java'><Message>At DisruptorReference.java:[lines 396-415]</Message></SourceLine><Message>In class org.apache.camel.component.disruptor.DisruptorReference$BlockingExchangeEventHandler</Message></Class><Method isStatic='false' classname='org.apache.camel.component.disruptor.DisruptorReference$BlockingExchangeEventHandler' signature='(Lorg/apache/camel/component/disruptor/ExchangeEvent;JZ)V' name='onEvent' primary='true'><SourceLine endBytecode='190' classname='org.apache.camel.component.disruptor.DisruptorReference$BlockingExchangeEventHandler' start='402' end='411' sourcepath='org/apache/camel/component/disruptor/DisruptorReference.java' sourcefile='DisruptorReference.java' startBytecode='0'></SourceLine><Message>In method org.apache.camel.component.disruptor.DisruptorReference$BlockingExchangeEventHandler.onEvent(ExchangeEvent, long, boolean)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.util.Queue' signature='(Ljava/lang/Object;)Z' name='offer'><SourceLine classname='java.util.Queue' sourcepath='java/util/Queue.java' sourcefile='Queue.java'></SourceLine><Message>Called method java.util.Queue.offer(Object)</Message></Method><SourceLine endBytecode='67' classname='org.apache.camel.component.disruptor.DisruptorReference$BlockingExchangeEventHandler' start='409' end='409' sourcepath='org/apache/camel/component/disruptor/DisruptorReference.java' sourcefile='DisruptorReference.java' startBytecode='67' primary='true'><Message>At DisruptorReference.java:[line 409]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='9261ad52280376cee42c2a6f62f36ca' cweid='253' rank='19' abbrev='RV' category='BAD_PRACTICE' priority='3' type='RV_RETURN_VALUE_IGNORED_BAD_PRACTICE' instanceOccurrenceMax='0'><ShortMessage>Method ignores exceptional return value</ShortMessage><LongMessage>Exceptional return value of java.util.Queue.offer(Object) ignored in org.apache.camel.component.disruptor.DisruptorReference$DelayedExecutor.execute(Runnable)</LongMessage><Class classname='org.apache.camel.component.disruptor.DisruptorReference$DelayedExecutor' primary='true'><SourceLine classname='org.apache.camel.component.disruptor.DisruptorReference$DelayedExecutor' start='429' end='444' sourcepath='org/apache/camel/component/disruptor/DisruptorReference.java' sourcefile='DisruptorReference.java'><Message>At DisruptorReference.java:[lines 429-444]</Message></SourceLine><Message>In class org.apache.camel.component.disruptor.DisruptorReference$DelayedExecutor</Message></Class><Method isStatic='false' classname='org.apache.camel.component.disruptor.DisruptorReference$DelayedExecutor' signature='(Ljava/lang/Runnable;)V' name='execute' primary='true'><SourceLine endBytecode='67' classname='org.apache.camel.component.disruptor.DisruptorReference$DelayedExecutor' start='435' end='436' sourcepath='org/apache/camel/component/disruptor/DisruptorReference.java' sourcefile='DisruptorReference.java' startBytecode='0'></SourceLine><Message>In method org.apache.camel.component.disruptor.DisruptorReference$DelayedExecutor.execute(Runnable)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.util.Queue' signature='(Ljava/lang/Object;)Z' name='offer'><SourceLine classname='java.util.Queue' sourcepath='java/util/Queue.java' sourcefile='Queue.java'></SourceLine><Message>Called method java.util.Queue.offer(Object)</Message></Method><SourceLine endBytecode='5' classname='org.apache.camel.component.disruptor.DisruptorReference$DelayedExecutor' start='435' end='435' sourcepath='org/apache/camel/component/disruptor/DisruptorReference.java' sourcefile='DisruptorReference.java' startBytecode='5' primary='true'><Message>At DisruptorReference.java:[line 435]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='109ef96521ac89c53cc89f99ad12b3b2' rank='20' abbrev='UwF' category='STYLE' priority='3' type='UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR' instanceOccurrenceMax='0'><ShortMessage>Field not initialized in constructor but dereferenced without null check</ShortMessage><LongMessage>ExchangeEvent.synchronizedExchange not initialized in constructor and dereferenced in org.apache.camel.component.disruptor.ExchangeEvent.toString()</LongMessage><Class classname='org.apache.camel.component.disruptor.ExchangeEvent' primary='true'><SourceLine classname='org.apache.camel.component.disruptor.ExchangeEvent' start='25' end='47' sourcepath='org/apache/camel/component/disruptor/ExchangeEvent.java' sourcefile='ExchangeEvent.java'><Message>At ExchangeEvent.java:[lines 25-47]</Message></SourceLine><Message>In class org.apache.camel.component.disruptor.ExchangeEvent</Message></Class><Field isStatic='false' classname='org.apache.camel.component.disruptor.ExchangeEvent' signature='Lorg/apache/camel/component/disruptor/SynchronizedExchange;' name='synchronizedExchange' primary='true'><SourceLine classname='org.apache.camel.component.disruptor.ExchangeEvent' sourcepath='org/apache/camel/component/disruptor/ExchangeEvent.java' sourcefile='ExchangeEvent.java'><Message>In ExchangeEvent.java</Message></SourceLine><Message>Field org.apache.camel.component.disruptor.ExchangeEvent.synchronizedExchange</Message></Field><Method isStatic='false' classname='org.apache.camel.component.disruptor.ExchangeEvent' signature='()Ljava/lang/String;' name='toString' primary='true'><SourceLine endBytecode='74' classname='org.apache.camel.component.disruptor.ExchangeEvent' start='47' end='47' sourcepath='org/apache/camel/component/disruptor/ExchangeEvent.java' sourcefile='ExchangeEvent.java' startBytecode='0'></SourceLine><Message>In method org.apache.camel.component.disruptor.ExchangeEvent.toString()</Message></Method><SourceLine endBytecode='16' classname='org.apache.camel.component.disruptor.ExchangeEvent' start='47' end='47' sourcepath='org/apache/camel/component/disruptor/ExchangeEvent.java' sourcefile='ExchangeEvent.java' startBytecode='16' primary='true'><Message>At ExchangeEvent.java:[line 47]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='24e63ca5d896409097321e59e34912f6' cweid='218' rank='18' abbrev='MS' category='MALICIOUS_CODE' priority='2' type='MS_MUTABLE_COLLECTION_PKGPROTECT' instanceOccurrenceMax='0'><ShortMessage>Field is a mutable collection which should be package protected</ShortMessage><LongMessage>org.apache.camel.component.disruptor.vm.DisruptorVmComponent.DISRUPTORS is a mutable collection which should be package protected</LongMessage><Class classname='org.apache.camel.component.disruptor.vm.DisruptorVmComponent' primary='true'><SourceLine classname='org.apache.camel.component.disruptor.vm.DisruptorVmComponent' start='33' end='54' sourcepath='org/apache/camel/component/disruptor/vm/DisruptorVmComponent.java' sourcefile='DisruptorVmComponent.java'><Message>At DisruptorVmComponent.java:[lines 33-54]</Message></SourceLine><Message>In class org.apache.camel.component.disruptor.vm.DisruptorVmComponent</Message></Class><Field isStatic='true' classname='org.apache.camel.component.disruptor.vm.DisruptorVmComponent' signature='Ljava/util/Map;' name='DISRUPTORS' primary='true'><SourceLine classname='org.apache.camel.component.disruptor.vm.DisruptorVmComponent' sourcepath='org/apache/camel/component/disruptor/vm/DisruptorVmComponent.java' sourcefile='DisruptorVmComponent.java'><Message>In DisruptorVmComponent.java</Message></SourceLine><Message>Field org.apache.camel.component.disruptor.vm.DisruptorVmComponent.DISRUPTORS</Message></Field><SourceLine endBytecode='7' classname='org.apache.camel.component.disruptor.vm.DisruptorVmComponent' start='34' end='34' sourcepath='org/apache/camel/component/disruptor/vm/DisruptorVmComponent.java' sourcefile='DisruptorVmComponent.java' startBytecode='7' primary='true'><Message>At DisruptorVmComponent.java:[line 34]</Message></SourceLine></BugInstance><BugCategory category='BAD_PRACTICE'><Description>Bad practice</Description></BugCategory><BugCategory category='MALICIOUS_CODE'><Description>Malicious code vulnerability</Description></BugCategory><BugCategory category='PERFORMANCE'><Description>Performance</Description></BugCategory><BugCategory category='CORRECTNESS'><Description>Correctness</Description></BugCategory><BugCategory category='STYLE'><Description>Dodgy code</Description></BugCategory><BugPattern abbrev='UwF' category='STYLE' type='UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR'><ShortDescription>Field not initialized in constructor but dereferenced without null check</ShortDescription><Details>

  &lt;p&gt; This field is never initialized within any constructor, and is therefore could be null after
the object is constructed. Elsewhere, it is loaded and dereferenced without a null check.
This could be a either an error or a questionable design, since
it means a null pointer exception will be generated if that field is dereferenced
before being initialized.
&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='NP' category='CORRECTNESS' type='NP_NULL_ON_SOME_PATH'><ShortDescription>Possible null pointer dereference</ShortDescription><Details>

&lt;p&gt; There is a branch of statement that, &lt;em&gt;if executed,&lt;/em&gt;  guarantees that
a null value will be dereferenced, which
would generate a &lt;code&gt;NullPointerException&lt;/code&gt; when the code is executed.
Of course, the problem might be that the branch or statement is infeasible and that
the null pointer exception can't ever be executed; deciding that is beyond the ability of SpotBugs.
&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='MS' category='MALICIOUS_CODE' type='MS_MUTABLE_COLLECTION_PKGPROTECT'><ShortDescription>Field is a mutable collection which should be package protected</ShortDescription><Details>

 &lt;p&gt;A mutable collection instance is assigned to a final static field,
   thus can be changed by malicious code or by accident from another package.
   The field could be made package protected to avoid this vulnerability.
   Alternatively you may wrap this field into Collections.unmodifiableSet/List/Map/etc.
   to avoid this vulnerability.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='SIC' category='PERFORMANCE' type='SIC_INNER_SHOULD_BE_STATIC_ANON'><ShortDescription>Could be refactored into a named static inner class</ShortDescription><Details>

  &lt;p&gt; This class is an inner class, but does not use its embedded reference
  to the object which created it.&amp;nbsp; This reference makes the instances
  of the class larger, and may keep the reference to the creator object
  alive longer than necessary.&amp;nbsp; If possible, the class should be
  made into a &lt;em&gt;static&lt;/em&gt; inner class. Since anonymous inner
classes cannot be marked as static, doing this will require refactoring
the inner class so that it is a named inner class.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='RCN' category='STYLE' type='RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE'><ShortDescription>Redundant nullcheck of value known to be non-null</ShortDescription><Details>

&lt;p&gt; This method contains a redundant check of a known non-null value against
the constant null.&lt;/p&gt;

    </Details></BugPattern><BugPattern cweid='253' abbrev='RV' category='BAD_PRACTICE' type='RV_RETURN_VALUE_IGNORED_BAD_PRACTICE'><ShortDescription>Method ignores exceptional return value</ShortDescription><Details>

   &lt;p&gt; This method returns a value that is not checked. The return value should be checked
since it can indicate an unusual or unexpected function execution. For
example, the &lt;code&gt;File.delete()&lt;/code&gt; method returns false
if the file could not be successfully deleted (rather than
throwing an Exception).
If you don't check the result, you won't notice if the method invocation
signals unexpected behavior by returning an atypical return value.
&lt;/p&gt;

    </Details></BugPattern><BugCode cweid='476' abbrev='NP'><Description>Null pointer dereference</Description></BugCode><BugCode cweid='440' abbrev='RV'><Description>Bad use of return value from method</Description></BugCode><BugCode abbrev='UwF'><Description>Unwritten field</Description></BugCode><BugCode cweid='218' abbrev='MS'><Description>Mutable static field</Description></BugCode><BugCode abbrev='SIC'><Description>Inner class could be made static</Description></BugCode><BugCode cweid='476' abbrev='RCN'><Description>Redundant comparison to null</Description></BugCode><Errors missingClasses='0' errors='0'></Errors><FindBugsSummary num_packages='2' total_classes='24' priority_2='2' priority_3='5' total_size='897' clock_seconds='3.15' referenced_classes='191' vm_version='25.222-b10' total_bugs='7' java_version='1.8.0_222' gc_seconds='0.07' alloc_mbytes='455.50' cpu_seconds='12.71' peak_mbytes='198.09' timestamp='Wed, 11 Sep 2019 15:08:06 +0200'><FileStats path='org/apache/camel/component/disruptor/AbstractLifecycleAwareExchangeEventHandler.java' size='32' bugCount='0'></FileStats><FileStats path='org/apache/camel/component/disruptor/AbstractSynchronizedExchange.java' size='22' bugCount='0'></FileStats><FileStats path='org/apache/camel/component/disruptor/DisruptorComponent.java' size='132' bugCount='0'></FileStats><FileStats path='org/apache/camel/component/disruptor/DisruptorConsumer.java' size='105' bugHash='a0ed4b73175a0f9db7e60d6c6f6ac41b' bugCount='1'></FileStats><FileStats path='org/apache/camel/component/disruptor/DisruptorEndpoint.java' size='145' bugCount='0'></FileStats><FileStats path='org/apache/camel/component/disruptor/DisruptorNotStartedException.java' size='14' bugCount='0'></FileStats><FileStats path='org/apache/camel/component/disruptor/DisruptorProducer.java' size='97' bugCount='0'></FileStats><FileStats path='org/apache/camel/component/disruptor/DisruptorProducerType.java' size='17' bugCount='0'></FileStats><FileStats path='org/apache/camel/component/disruptor/DisruptorReference.java' size='232' bugHash='6967869dc9d4a83c59bbe1f8d4967a03' bugCount='4'></FileStats><FileStats path='org/apache/camel/component/disruptor/DisruptorWaitStrategy.java' size='21' bugCount='0'></FileStats><FileStats path='org/apache/camel/component/disruptor/ExchangeEvent.java' size='15' bugHash='0d58a913c4c0644f9ff0553b5f736ec5' bugCount='1'></FileStats><FileStats path='org/apache/camel/component/disruptor/ExchangeEventFactory.java' size='9' bugCount='0'></FileStats><FileStats path='org/apache/camel/component/disruptor/LifecycleAwareExchangeEventHandler.java' size='5' bugCount='0'></FileStats><FileStats path='org/apache/camel/component/disruptor/MultipleConsumerSynchronizedExchange.java' size='21' bugCount='0'></FileStats><FileStats path='org/apache/camel/component/disruptor/SingleConsumerSynchronizedExchange.java' size='8' bugCount='0'></FileStats><FileStats path='org/apache/camel/component/disruptor/SynchronizedExchange.java' size='4' bugCount='0'></FileStats><FileStats path='org/apache/camel/component/disruptor/vm/DisruptorVmComponent.java' size='18' bugHash='206fd1e9624f53eee81a010593559f18' bugCount='1'></FileStats><PackageStats package='org.apache.camel.component.disruptor' total_bugs='6' priority_2='1' priority_3='5' total_size='879' total_types='23'><ClassStats bugs='0' size='32' interface='false' sourceFile='AbstractLifecycleAwareExchangeEventHandler.java' class='org.apache.camel.component.disruptor.AbstractLifecycleAwareExchangeEventHandler'></ClassStats><ClassStats bugs='0' size='22' interface='false' sourceFile='AbstractSynchronizedExchange.java' class='org.apache.camel.component.disruptor.AbstractSynchronizedExchange'></ClassStats><ClassStats bugs='0' size='132' interface='false' sourceFile='DisruptorComponent.java' class='org.apache.camel.component.disruptor.DisruptorComponent'></ClassStats><ClassStats bugs='1' size='73' priority_3='1' interface='false' sourceFile='DisruptorConsumer.java' class='org.apache.camel.component.disruptor.DisruptorConsumer'></ClassStats><ClassStats bugs='0' size='5' interface='false' sourceFile='DisruptorConsumer.java' class='org.apache.camel.component.disruptor.DisruptorConsumer$1'></ClassStats><ClassStats bugs='0' size='12' interface='false' sourceFile='DisruptorConsumer.java' class='org.apache.camel.component.disruptor.DisruptorConsumer$2'></ClassStats><ClassStats bugs='0' size='15' interface='false' sourceFile='DisruptorConsumer.java' class='org.apache.camel.component.disruptor.DisruptorConsumer$ConsumerEventHandler'></ClassStats><ClassStats bugs='0' size='145' interface='false' sourceFile='DisruptorEndpoint.java' class='org.apache.camel.component.disruptor.DisruptorEndpoint'></ClassStats><ClassStats bugs='0' size='14' interface='false' sourceFile='DisruptorNotStartedException.java' class='org.apache.camel.component.disruptor.DisruptorNotStartedException'></ClassStats><ClassStats bugs='0' size='75' interface='false' sourceFile='DisruptorProducer.java' class='org.apache.camel.component.disruptor.DisruptorProducer'></ClassStats><ClassStats bugs='0' size='22' interface='false' sourceFile='DisruptorProducer.java' class='org.apache.camel.component.disruptor.DisruptorProducer$1'></ClassStats><ClassStats bugs='0' size='17' interface='false' sourceFile='DisruptorProducerType.java' class='org.apache.camel.component.disruptor.DisruptorProducerType'></ClassStats><ClassStats bugs='2' size='200' priority_2='1' priority_3='1' interface='false' sourceFile='DisruptorReference.java' class='org.apache.camel.component.disruptor.DisruptorReference'></ClassStats><ClassStats bugs='0' size='1' interface='false' sourceFile='DisruptorReference.java' class='org.apache.camel.component.disruptor.DisruptorReference$1'></ClassStats><ClassStats bugs='1' size='18' priority_3='1' interface='false' sourceFile='DisruptorReference.java' class='org.apache.camel.component.disruptor.DisruptorReference$BlockingExchangeEventHandler'></ClassStats><ClassStats bugs='1' size='13' priority_3='1' interface='false' sourceFile='DisruptorReference.java' class='org.apache.camel.component.disruptor.DisruptorReference$DelayedExecutor'></ClassStats><ClassStats bugs='0' size='21' interface='false' sourceFile='DisruptorWaitStrategy.java' class='org.apache.camel.component.disruptor.DisruptorWaitStrategy'></ClassStats><ClassStats bugs='1' size='15' priority_3='1' interface='false' sourceFile='ExchangeEvent.java' class='org.apache.camel.component.disruptor.ExchangeEvent'></ClassStats><ClassStats bugs='0' size='9' interface='false' sourceFile='ExchangeEventFactory.java' class='org.apache.camel.component.disruptor.ExchangeEventFactory'></ClassStats><ClassStats bugs='0' size='5' interface='true' sourceFile='LifecycleAwareExchangeEventHandler.java' class='org.apache.camel.component.disruptor.LifecycleAwareExchangeEventHandler'></ClassStats><ClassStats bugs='0' size='21' interface='false' sourceFile='MultipleConsumerSynchronizedExchange.java' class='org.apache.camel.component.disruptor.MultipleConsumerSynchronizedExchange'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='SingleConsumerSynchronizedExchange.java' class='org.apache.camel.component.disruptor.SingleConsumerSynchronizedExchange'></ClassStats><ClassStats bugs='0' size='4' interface='true' sourceFile='SynchronizedExchange.java' class='org.apache.camel.component.disruptor.SynchronizedExchange'></ClassStats></PackageStats><PackageStats package='org.apache.camel.component.disruptor.vm' total_bugs='1' priority_2='1' total_size='18' total_types='1'><ClassStats bugs='1' size='18' priority_2='1' interface='false' sourceFile='DisruptorVmComponent.java' class='org.apache.camel.component.disruptor.vm.DisruptorVmComponent'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='315' totalMilliseconds='333' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' maxMicrosecondsPerInvocation='1508' standardDeviationMicrosecondsPerInvocation='161' invocations='1055'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='298' totalMilliseconds='313' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' maxMicrosecondsPerInvocation='29211' standardDeviationMicrosecondsPerInvocation='1153' invocations='1050'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='885' totalMilliseconds='175' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' maxMicrosecondsPerInvocation='158036' standardDeviationMicrosecondsPerInvocation='11197' invocations='198'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='699' totalMilliseconds='133' name='edu.umd.cs.findbugs.detect.FieldItemSummary' maxMicrosecondsPerInvocation='10737' standardDeviationMicrosecondsPerInvocation='1533' invocations='191'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='574' totalMilliseconds='109' name='edu.umd.cs.findbugs.detect.FindNoSideEffectMethods' maxMicrosecondsPerInvocation='8468' standardDeviationMicrosecondsPerInvocation='1156' invocations='191'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='3868' totalMilliseconds='96' name='edu.umd.cs.findbugs.classfile.impl.ZipCodeBaseFactory' maxMicrosecondsPerInvocation='91961' standardDeviationMicrosecondsPerInvocation='17984' invocations='25'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='152' totalMilliseconds='91' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' maxMicrosecondsPerInvocation='3011' standardDeviationMicrosecondsPerInvocation='238' invocations='602'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='333' totalMilliseconds='64' name='edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory' maxMicrosecondsPerInvocation='11614' standardDeviationMicrosecondsPerInvocation='953' invocations='194'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='327' totalMilliseconds='62' name='edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory' maxMicrosecondsPerInvocation='6047' standardDeviationMicrosecondsPerInvocation='683' invocations='190'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='302' totalMilliseconds='59' name='edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory' maxMicrosecondsPerInvocation='8953' standardDeviationMicrosecondsPerInvocation='782' invocations='195'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='226' totalMilliseconds='57' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' maxMicrosecondsPerInvocation='16421' standardDeviationMicrosecondsPerInvocation='1115' invocations='252'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='297' totalMilliseconds='54' name='edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder' maxMicrosecondsPerInvocation='4035' standardDeviationMicrosecondsPerInvocation='496' invocations='183'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='278' totalMilliseconds='53' name='edu.umd.cs.findbugs.detect.EqualsOperandShouldHaveClassCompatibleWithThis' maxMicrosecondsPerInvocation='35931' standardDeviationMicrosecondsPerInvocation='2598' invocations='191'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='265' totalMilliseconds='50' name='edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers' maxMicrosecondsPerInvocation='8970' standardDeviationMicrosecondsPerInvocation='769' invocations='191'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='49' totalMilliseconds='49' name='edu.umd.cs.findbugs.util.TopologicalSort' maxMicrosecondsPerInvocation='1877' standardDeviationMicrosecondsPerInvocation='118' invocations='1001'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='256' totalMilliseconds='48' name='edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory' maxMicrosecondsPerInvocation='10744' standardDeviationMicrosecondsPerInvocation='793' invocations='190'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='225' totalMilliseconds='41' name='edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory' maxMicrosecondsPerInvocation='2366' standardDeviationMicrosecondsPerInvocation='370' invocations='186'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='216' totalMilliseconds='41' name='edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase' maxMicrosecondsPerInvocation='4252' standardDeviationMicrosecondsPerInvocation='465' invocations='191'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='265' totalMilliseconds='35' name='edu.umd.cs.findbugs.detect.FindRefComparison$SpecialTypeAnalysis' maxMicrosecondsPerInvocation='2350' standardDeviationMicrosecondsPerInvocation='382' invocations='135'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='180' totalMilliseconds='34' name='edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical' maxMicrosecondsPerInvocation='11527' standardDeviationMicrosecondsPerInvocation='853' invocations='191'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>