
<BugCollection sequence='0' release='' analysisTimestamp='1568282840834' version='3.1.12' timestamp='1568282134000'><Project projectName='dubbo-common'><Jar>./dubbo/dubbo-common/target/classes</Jar><AuxClasspathEntry>.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/org/apache/logging/log4j/log4j-api/2.11.1/log4j-api-2.11.1.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/org/apache/logging/log4j/log4j-core/2.11.1/log4j-core-2.11.1.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/com/alibaba/hessian-lite/3.2.5/hessian-lite-3.2.5.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/com/alibaba/fastjson/1.2.46/fastjson-1.2.46.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/com/esotericsoftware/kryo/4.0.1/kryo-4.0.1.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/com/esotericsoftware/reflectasm/1.11.3/reflectasm-1.11.3.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/org/ow2/asm/asm/5.0.4/asm-5.0.4.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/com/esotericsoftware/minlog/1.3.0/minlog-1.3.0.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/org/objenesis/objenesis/2.5.1/objenesis-2.5.1.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/de/javakaffee/kryo-serializers/0.42/kryo-serializers-0.42.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/de/ruedigermoeller/fst/2.48-jdk-6/fst-2.48-jdk-6.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/com/fasterxml/jackson/core/jackson-core/2.8.6/jackson-core-2.8.6.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/com/cedarsoftware/java-util/1.9.0/java-util-1.9.0.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/com/cedarsoftware/json-io/2.5.1/json-io-2.5.1.jar</AuxClasspathEntry><SrcDir>./dubbo/dubbo-common/src/main/java</SrcDir><WrkDir>./dubbo/dubbo-common/target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='61a4b2e08ef3bd08f09039c36072fac2' rank='19' abbrev='Se' category='BAD_PRACTICE' priority='3' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field org.apache.dubbo.common.URL.full is transient but isn't set by deserialization</LongMessage><Class classname='org.apache.dubbo.common.URL' primary='true'><SourceLine classname='org.apache.dubbo.common.URL' start='127' end='1496' sourcepath='org/apache/dubbo/common/URL.java' sourcefile='URL.java'><Message>At URL.java:[lines 127-1496]</Message></SourceLine><Message>In class org.apache.dubbo.common.URL</Message></Class><Field isStatic='false' classname='org.apache.dubbo.common.URL' signature='Ljava/lang/String;' name='full' primary='true'><SourceLine classname='org.apache.dubbo.common.URL' sourcepath='org/apache/dubbo/common/URL.java' sourcefile='URL.java'><Message>In URL.java</Message></SourceLine><Message>Field org.apache.dubbo.common.URL.full</Message></Field><SourceLine synthetic='true' classname='org.apache.dubbo.common.URL' sourcepath='org/apache/dubbo/common/URL.java' sourcefile='URL.java'><Message>In URL.java</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='dbf08cb08a48994bcad6ecfd2deda742' rank='19' abbrev='Se' category='BAD_PRACTICE' priority='3' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field org.apache.dubbo.common.URL.identity is transient but isn't set by deserialization</LongMessage><Class classname='org.apache.dubbo.common.URL' primary='true'><SourceLine classname='org.apache.dubbo.common.URL' start='127' end='1496' sourcepath='org/apache/dubbo/common/URL.java' sourcefile='URL.java'><Message>At URL.java:[lines 127-1496]</Message></SourceLine><Message>In class org.apache.dubbo.common.URL</Message></Class><Field isStatic='false' classname='org.apache.dubbo.common.URL' signature='Ljava/lang/String;' name='identity' primary='true'><SourceLine classname='org.apache.dubbo.common.URL' sourcepath='org/apache/dubbo/common/URL.java' sourcefile='URL.java'><Message>In URL.java</Message></SourceLine><Message>Field org.apache.dubbo.common.URL.identity</Message></Field><SourceLine synthetic='true' classname='org.apache.dubbo.common.URL' sourcepath='org/apache/dubbo/common/URL.java' sourcefile='URL.java'><Message>In URL.java</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='28475263702220b555f4d3b39dbd97b7' rank='19' abbrev='Se' category='BAD_PRACTICE' priority='3' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field org.apache.dubbo.common.URL.ip is transient but isn't set by deserialization</LongMessage><Class classname='org.apache.dubbo.common.URL' primary='true'><SourceLine classname='org.apache.dubbo.common.URL' start='127' end='1496' sourcepath='org/apache/dubbo/common/URL.java' sourcefile='URL.java'><Message>At URL.java:[lines 127-1496]</Message></SourceLine><Message>In class org.apache.dubbo.common.URL</Message></Class><Field isStatic='false' classname='org.apache.dubbo.common.URL' signature='Ljava/lang/String;' name='ip' primary='true'><SourceLine classname='org.apache.dubbo.common.URL' sourcepath='org/apache/dubbo/common/URL.java' sourcefile='URL.java'><Message>In URL.java</Message></SourceLine><Message>Field org.apache.dubbo.common.URL.ip</Message></Field><SourceLine synthetic='true' classname='org.apache.dubbo.common.URL' sourcepath='org/apache/dubbo/common/URL.java' sourcefile='URL.java'><Message>In URL.java</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='4f88d8db7ba84b6a2628a5ec92a2a69b' rank='19' abbrev='Se' category='BAD_PRACTICE' priority='3' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field org.apache.dubbo.common.URL.numbers is transient but isn't set by deserialization</LongMessage><Class classname='org.apache.dubbo.common.URL' primary='true'><SourceLine classname='org.apache.dubbo.common.URL' start='127' end='1496' sourcepath='org/apache/dubbo/common/URL.java' sourcefile='URL.java'><Message>At URL.java:[lines 127-1496]</Message></SourceLine><Message>In class org.apache.dubbo.common.URL</Message></Class><Field isStatic='false' classname='org.apache.dubbo.common.URL' signature='Ljava/util/Map;' name='numbers' primary='true'><SourceLine classname='org.apache.dubbo.common.URL' sourcepath='org/apache/dubbo/common/URL.java' sourcefile='URL.java'><Message>In URL.java</Message></SourceLine><Message>Field org.apache.dubbo.common.URL.numbers</Message></Field><SourceLine synthetic='true' classname='org.apache.dubbo.common.URL' sourcepath='org/apache/dubbo/common/URL.java' sourcefile='URL.java'><Message>In URL.java</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='fa4a487dbb747aaf9c2c849221d0697d' rank='19' abbrev='Se' category='BAD_PRACTICE' priority='3' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field org.apache.dubbo.common.URL.parameter is transient but isn't set by deserialization</LongMessage><Class classname='org.apache.dubbo.common.URL' primary='true'><SourceLine classname='org.apache.dubbo.common.URL' start='127' end='1496' sourcepath='org/apache/dubbo/common/URL.java' sourcefile='URL.java'><Message>At URL.java:[lines 127-1496]</Message></SourceLine><Message>In class org.apache.dubbo.common.URL</Message></Class><Field isStatic='false' classname='org.apache.dubbo.common.URL' signature='Ljava/lang/String;' name='parameter' primary='true'><SourceLine classname='org.apache.dubbo.common.URL' sourcepath='org/apache/dubbo/common/URL.java' sourcefile='URL.java'><Message>In URL.java</Message></SourceLine><Message>Field org.apache.dubbo.common.URL.parameter</Message></Field><SourceLine synthetic='true' classname='org.apache.dubbo.common.URL' sourcepath='org/apache/dubbo/common/URL.java' sourcefile='URL.java'><Message>In URL.java</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='a92760de942aae79a8292aaea00d6fc9' rank='19' abbrev='Se' category='BAD_PRACTICE' priority='3' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field org.apache.dubbo.common.URL.string is transient but isn't set by deserialization</LongMessage><Class classname='org.apache.dubbo.common.URL' primary='true'><SourceLine classname='org.apache.dubbo.common.URL' start='127' end='1496' sourcepath='org/apache/dubbo/common/URL.java' sourcefile='URL.java'><Message>At URL.java:[lines 127-1496]</Message></SourceLine><Message>In class org.apache.dubbo.common.URL</Message></Class><Field isStatic='false' classname='org.apache.dubbo.common.URL' signature='Ljava/lang/String;' name='string' primary='true'><SourceLine classname='org.apache.dubbo.common.URL' sourcepath='org/apache/dubbo/common/URL.java' sourcefile='URL.java'><Message>In URL.java</Message></SourceLine><Message>Field org.apache.dubbo.common.URL.string</Message></Field><SourceLine synthetic='true' classname='org.apache.dubbo.common.URL' sourcepath='org/apache/dubbo/common/URL.java' sourcefile='URL.java'><Message>In URL.java</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='2e7066a563901d54bbd1d9cb0d0d311e' rank='19' abbrev='Se' category='BAD_PRACTICE' priority='3' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field org.apache.dubbo.common.URL.urls is transient but isn't set by deserialization</LongMessage><Class classname='org.apache.dubbo.common.URL' primary='true'><SourceLine classname='org.apache.dubbo.common.URL' start='127' end='1496' sourcepath='org/apache/dubbo/common/URL.java' sourcefile='URL.java'><Message>At URL.java:[lines 127-1496]</Message></SourceLine><Message>In class org.apache.dubbo.common.URL</Message></Class><Field isStatic='false' classname='org.apache.dubbo.common.URL' signature='Ljava/util/Map;' name='urls' primary='true'><SourceLine classname='org.apache.dubbo.common.URL' sourcepath='org/apache/dubbo/common/URL.java' sourcefile='URL.java'><Message>In URL.java</Message></SourceLine><Message>Field org.apache.dubbo.common.URL.urls</Message></Field><SourceLine synthetic='true' classname='org.apache.dubbo.common.URL' sourcepath='org/apache/dubbo/common/URL.java' sourcefile='URL.java'><Message>In URL.java</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c7e453b04a6a27933a65168e1c63b17c' rank='20' abbrev='Dm' category='I18N' priority='3' type='DM_CONVERT_CASE' instanceOccurrenceMax='0'><ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage><LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil.getSetterMethod(Class, String, Class)</LongMessage><Class classname='org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil' primary='true'><SourceLine classname='org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil' start='36' end='457' sourcepath='org/apache/dubbo/common/beanutil/JavaBeanSerializeUtil.java' sourcefile='JavaBeanSerializeUtil.java'><Message>At JavaBeanSerializeUtil.java:[lines 36-457]</Message></SourceLine><Message>In class org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil' signature='(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/reflect/Method;' name='getSetterMethod' primary='true'><SourceLine endBytecode='403' classname='org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil' start='296' end='311' sourcepath='org/apache/dubbo/common/beanutil/JavaBeanSerializeUtil.java' sourcefile='JavaBeanSerializeUtil.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil.getSetterMethod(Class, String, Class)</Message></Method><SourceLine endBytecode='18' classname='org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil' start='296' end='296' sourcepath='org/apache/dubbo/common/beanutil/JavaBeanSerializeUtil.java' sourcefile='JavaBeanSerializeUtil.java' startBytecode='18' primary='true'><Message>At JavaBeanSerializeUtil.java:[line 296]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c39c1bd2bf46889e22ee696748e65c1d' rank='18' abbrev='Bx' category='PERFORMANCE' priority='2' type='DM_NUMBER_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage><LongMessage>org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil.getConstructorArg(Class) invokes inefficient new Character(char) constructor; use Character.valueOf(char) instead</LongMessage><Class classname='org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil' primary='true'><SourceLine classname='org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil' start='36' end='457' sourcepath='org/apache/dubbo/common/beanutil/JavaBeanSerializeUtil.java' sourcefile='JavaBeanSerializeUtil.java'><Message>At JavaBeanSerializeUtil.java:[lines 36-457]</Message></SourceLine><Message>In class org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil' signature='(Ljava/lang/Class;)Ljava/lang/Object;' name='getConstructorArg' primary='true'><SourceLine endBytecode='344' classname='org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil' start='347' end='364' sourcepath='org/apache/dubbo/common/beanutil/JavaBeanSerializeUtil.java' sourcefile='JavaBeanSerializeUtil.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil.getConstructorArg(Class)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.Character' signature='(C)V' name='&lt;init&gt;'><SourceLine endBytecode='41' classname='java.lang.Character' start='4555' end='4557' sourcepath='java/lang/Character.java' sourcefile='Character.java' startBytecode='0'></SourceLine><Message>Called method new Character(char)</Message></Method><Method isStatic='true' role='SHOULD_CALL' classname='java.lang.Character' signature='(C)Ljava/lang/Character;' name='valueOf'><SourceLine endBytecode='61' classname='java.lang.Character' start='4588' end='4591' sourcepath='java/lang/Character.java' sourcefile='Character.java' startBytecode='0'></SourceLine><Message>Should call Character.valueOf(char) instead</Message></Method><SourceLine endBytecode='191' classname='org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil' start='362' end='362' sourcepath='org/apache/dubbo/common/beanutil/JavaBeanSerializeUtil.java' sourcefile='JavaBeanSerializeUtil.java' startBytecode='191' primary='true'><Message>At JavaBeanSerializeUtil.java:[line 362]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='8b9e10e2e576ed147f279e20e221b82f' cweid='476' rank='20' abbrev='RCN' category='STYLE' priority='3' type='RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE' instanceOccurrenceMax='0'><ShortMessage>Redundant nullcheck of value known to be non-null</ShortMessage><LongMessage>Redundant nullcheck of field, which is known to be non-null in org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil.deserializeInternal(Object, JavaBeanDescriptor, ClassLoader, IdentityHashMap)</LongMessage><Class classname='org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil' primary='true'><SourceLine classname='org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil' start='36' end='457' sourcepath='org/apache/dubbo/common/beanutil/JavaBeanSerializeUtil.java' sourcefile='JavaBeanSerializeUtil.java'><Message>At JavaBeanSerializeUtil.java:[lines 36-457]</Message></SourceLine><Message>In class org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil' signature='(Ljava/lang/Object;Lorg/apache/dubbo/common/beanutil/JavaBeanDescriptor;Ljava/lang/ClassLoader;Ljava/util/IdentityHashMap;)V' name='deserializeInternal' primary='true'><SourceLine endBytecode='1521' classname='org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil' start='209' end='293' sourcepath='org/apache/dubbo/common/beanutil/JavaBeanSerializeUtil.java' sourcefile='JavaBeanSerializeUtil.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil.deserializeInternal(Object, JavaBeanDescriptor, ClassLoader, IdentityHashMap)</Message></Method><LocalVariable role='LOCAL_VARIABLE_VALUE_OF' pc='575' name='field' register='10'><Message>Value loaded from field</Message></LocalVariable><Method isStatic='false' role='METHOD_RETURN_VALUE_OF' classname='java.lang.Class' signature='(Ljava/lang/String;)Ljava/lang/reflect/Field;' name='getField'><SourceLine endBytecode='83' classname='java.lang.Class' start='1700' end='1705' sourcepath='java/lang/Class.java' sourcefile='Class.java' startBytecode='0'></SourceLine><Message>Return value of Class.getField(String) of type java.lang.reflect.Field</Message></Method><SourceLine role='SOURCE_REDUNDANT_NULL_CHECK' endBytecode='577' classname='org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil' start='280' end='280' sourcepath='org/apache/dubbo/common/beanutil/JavaBeanSerializeUtil.java' sourcefile='JavaBeanSerializeUtil.java' startBytecode='577' primary='true'><Message>Redundant null check at JavaBeanSerializeUtil.java:[line 280]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='5a5146f8712d1b93d009cc3f58284a36' cweid='396' rank='20' abbrev='REC' category='STYLE' priority='3' type='REC_CATCH_EXCEPTION' instanceOccurrenceMax='0'><ShortMessage>Exception is caught when Exception is not thrown</ShortMessage><LongMessage>Exception is caught when Exception is not thrown in org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil.instantiateForDeserialize(JavaBeanDescriptor, ClassLoader, IdentityHashMap)</LongMessage><Class classname='org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil' primary='true'><SourceLine classname='org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil' start='36' end='457' sourcepath='org/apache/dubbo/common/beanutil/JavaBeanSerializeUtil.java' sourcefile='JavaBeanSerializeUtil.java'><Message>At JavaBeanSerializeUtil.java:[lines 36-457]</Message></SourceLine><Message>In class org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil' signature='(Lorg/apache/dubbo/common/beanutil/JavaBeanDescriptor;Ljava/lang/ClassLoader;Ljava/util/IdentityHashMap;)Ljava/lang/Object;' name='instantiateForDeserialize' primary='true'><SourceLine endBytecode='715' classname='org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil' start='369' end='413' sourcepath='org/apache/dubbo/common/beanutil/JavaBeanSerializeUtil.java' sourcefile='JavaBeanSerializeUtil.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil.instantiateForDeserialize(JavaBeanDescriptor, ClassLoader, IdentityHashMap)</Message></Method><SourceLine endBytecode='100' classname='org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil' start='386' end='386' sourcepath='org/apache/dubbo/common/beanutil/JavaBeanSerializeUtil.java' sourcefile='JavaBeanSerializeUtil.java' startBytecode='100' primary='true'><Message>At JavaBeanSerializeUtil.java:[line 386]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='cd970d7d722c0a67d980a4c8d64f7fbf' rank='18' abbrev='SIC' category='PERFORMANCE' priority='2' type='SIC_INNER_SHOULD_BE_STATIC' instanceOccurrenceMax='0'><ShortMessage>Should be a static inner class</ShortMessage><LongMessage>Should org.apache.dubbo.common.compiler.support.JdkCompiler$ClassLoaderImpl be a _static_ inner class?</LongMessage><Class classname='org.apache.dubbo.common.compiler.support.JdkCompiler$ClassLoaderImpl' primary='true'><SourceLine classname='org.apache.dubbo.common.compiler.support.JdkCompiler$ClassLoaderImpl' start='245' end='287' sourcepath='org/apache/dubbo/common/compiler/support/JdkCompiler.java' sourcefile='JdkCompiler.java'><Message>At JdkCompiler.java:[lines 245-287]</Message></SourceLine><Message>In class org.apache.dubbo.common.compiler.support.JdkCompiler$ClassLoaderImpl</Message></Class><SourceLine synthetic='true' classname='org.apache.dubbo.common.compiler.support.JdkCompiler$ClassLoaderImpl' start='245' end='287' sourcepath='org/apache/dubbo/common/compiler/support/JdkCompiler.java' sourcefile='JdkCompiler.java'><Message>At JdkCompiler.java:[lines 245-287]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='73a1fe870802bc423550dec08af6ba93' rank='17' abbrev='UC' category='STYLE' priority='2' type='UC_USELESS_OBJECT' instanceOccurrenceMax='0'><ShortMessage>Useless object created</ShortMessage><LongMessage>Useless object stored in variable urlList of method org.apache.dubbo.common.compiler.support.JdkCompiler$JavaFileManagerImpl.list(JavaFileManager$Location, String, Set, boolean)</LongMessage><Class classname='org.apache.dubbo.common.compiler.support.JdkCompiler$JavaFileManagerImpl' primary='true'><SourceLine classname='org.apache.dubbo.common.compiler.support.JdkCompiler$JavaFileManagerImpl' start='160' end='239' sourcepath='org/apache/dubbo/common/compiler/support/JdkCompiler.java' sourcefile='JdkCompiler.java'><Message>At JdkCompiler.java:[lines 160-239]</Message></SourceLine><Message>In class org.apache.dubbo.common.compiler.support.JdkCompiler$JavaFileManagerImpl</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.compiler.support.JdkCompiler$JavaFileManagerImpl' signature='(Ljavax/tools/JavaFileManager$Location;Ljava/lang/String;Ljava/util/Set;Z)Ljava/lang/Iterable;' name='list' primary='true'><SourceLine endBytecode='702' classname='org.apache.dubbo.common.compiler.support.JdkCompiler$JavaFileManagerImpl' start='208' end='239' sourcepath='org/apache/dubbo/common/compiler/support/JdkCompiler.java' sourcefile='JdkCompiler.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.compiler.support.JdkCompiler$JavaFileManagerImpl.list(JavaFileManager$Location, String, Set, boolean)</Message></Method><String value='urlList'><Message>Value urlList</Message></String><Type descriptor='Ljava/util/ArrayList;'><SourceLine classname='java.util.ArrayList' start='107' end='1467' sourcepath='java/util/ArrayList.java' sourcefile='ArrayList.java'><Message>At ArrayList.java:[lines 107-1467]</Message></SourceLine><Message>Type java.util.ArrayList</Message></Type><SourceLine endBytecode='23' classname='org.apache.dubbo.common.compiler.support.JdkCompiler$JavaFileManagerImpl' start='211' end='211' sourcepath='org/apache/dubbo/common/compiler/support/JdkCompiler.java' sourcefile='JdkCompiler.java' startBytecode='23' primary='true'><Message>At JdkCompiler.java:[line 211]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='5df7866b0b48187cb596b07d4f065cc4' cweid='391' rank='19' abbrev='DE' category='BAD_PRACTICE' priority='3' type='DE_MIGHT_IGNORE' instanceOccurrenceMax='0'><ShortMessage>Method might ignore exception</ShortMessage><LongMessage>org.apache.dubbo.common.config.ConfigurationUtils.getServerShutdownTimeout() might ignore java.lang.Exception</LongMessage><Class classname='org.apache.dubbo.common.config.ConfigurationUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.config.ConfigurationUtils' start='36' end='84' sourcepath='org/apache/dubbo/common/config/ConfigurationUtils.java' sourcefile='ConfigurationUtils.java'><Message>At ConfigurationUtils.java:[lines 36-84]</Message></SourceLine><Message>In class org.apache.dubbo.common.config.ConfigurationUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.config.ConfigurationUtils' signature='()I' name='getServerShutdownTimeout' primary='true'><SourceLine endBytecode='244' classname='org.apache.dubbo.common.config.ConfigurationUtils' start='42' end='62' sourcepath='org/apache/dubbo/common/config/ConfigurationUtils.java' sourcefile='ConfigurationUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.config.ConfigurationUtils.getServerShutdownTimeout()</Message></Method><Class role='CLASS_EXCEPTION' classname='java.lang.Exception'><SourceLine classname='java.lang.Exception' start='54' end='123' sourcepath='java/lang/Exception.java' sourcefile='Exception.java'><Message>At Exception.java:[lines 54-123]</Message></SourceLine><Message>Exception class java.lang.Exception</Message></Class><SourceLine endBytecode='42' classname='org.apache.dubbo.common.config.ConfigurationUtils' start='49' end='49' sourcepath='org/apache/dubbo/common/config/ConfigurationUtils.java' sourcefile='ConfigurationUtils.java' startBytecode='42' primary='true'><Message>At ConfigurationUtils.java:[line 49]</Message></SourceLine><SourceLine endBytecode='42' classname='org.apache.dubbo.common.config.ConfigurationUtils' start='49' end='49' sourcepath='org/apache/dubbo/common/config/ConfigurationUtils.java' sourcefile='ConfigurationUtils.java' startBytecode='42' primary='true'><Message>At ConfigurationUtils.java:[line 49]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='e8831405954ec252f748bccbfefb396b' rank='20' abbrev='FS' category='BAD_PRACTICE' priority='2' type='VA_FORMAT_STRING_USES_NEWLINE' instanceOccurrenceMax='0'><ShortMessage>Format string should use %n rather than /n</ShortMessage><LongMessage>Format string should use %n rather than /n in org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generateClassDeclaration()</LongMessage><Class classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' primary='true'><SourceLine classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='36' end='378' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java'><Message>At AdaptiveClassCodeGenerator.java:[lines 36-378]</Message></SourceLine><Message>In class org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' signature='()Ljava/lang/String;' name='generateClassDeclaration' primary='true'><SourceLine endBytecode='71' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='127' end='127' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generateClassDeclaration()</Message></Method><Method isStatic='true' role='METHOD_CALLED' classname='java.lang.String' signature='(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;' name='format'><SourceLine endBytecode='39' classname='java.lang.String' start='2940' end='2940' sourcepath='java/lang/String.java' sourcefile='String.java' startBytecode='0'></SourceLine><Message>Called method String.format(String, Object[])</Message></Method><String role='STRING_FORMAT_STRING' value='public class %s$Adaptive implements %s {/n'><Message>Format string "public class %s$Adaptive implements %s {/n"</Message></String><SourceLine endBytecode='26' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='127' end='127' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='26' primary='true'><Message>At AdaptiveClassCodeGenerator.java:[line 127]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='49031f45b36eb185bce1e6b47c832d60' rank='20' abbrev='FS' category='BAD_PRACTICE' priority='2' type='VA_FORMAT_STRING_USES_NEWLINE' instanceOccurrenceMax='0'><ShortMessage>Format string should use %n rather than /n</ShortMessage><LongMessage>Format string should use %n rather than /n in org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generateExtNameAssignment(String[], boolean)</LongMessage><Class classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' primary='true'><SourceLine classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='36' end='378' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java'><Message>At AdaptiveClassCodeGenerator.java:[lines 36-378]</Message></SourceLine><Message>In class org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' signature='([Ljava/lang/String;Z)Ljava/lang/String;' name='generateExtNameAssignment' primary='true'><SourceLine endBytecode='480' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='245' end='282' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generateExtNameAssignment(String[], boolean)</Message></Method><Method isStatic='true' role='METHOD_CALLED' classname='java.lang.String' signature='(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;' name='format'><SourceLine endBytecode='39' classname='java.lang.String' start='2940' end='2940' sourcepath='java/lang/String.java' sourcefile='String.java' startBytecode='0'></SourceLine><Message>Called method String.format(String, Object[])</Message></Method><String role='STRING_FORMAT_STRING' value='String extName = %s;/n'><Message>Format string "String extName = %s;/n"</Message></String><SourceLine endBytecode='286' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='282' end='282' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='286' primary='true'><Message>At AdaptiveClassCodeGenerator.java:[line 282]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='8e37f05af412378022be5cac695c006f' rank='20' abbrev='FS' category='BAD_PRACTICE' priority='2' type='VA_FORMAT_STRING_USES_NEWLINE' instanceOccurrenceMax='0'><ShortMessage>Format string should use %n rather than /n</ShortMessage><LongMessage>Format string should use %n rather than /n in org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generateExtNameNullCheck(String[])</LongMessage><Class classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' primary='true'><SourceLine classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='36' end='378' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java'><Message>At AdaptiveClassCodeGenerator.java:[lines 36-378]</Message></SourceLine><Message>In class org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' signature='([Ljava/lang/String;)Ljava/lang/String;' name='generateExtNameNullCheck' primary='true'><SourceLine endBytecode='78' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='237' end='237' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generateExtNameNullCheck(String[])</Message></Method><Method isStatic='true' role='METHOD_CALLED' classname='java.lang.String' signature='(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;' name='format'><SourceLine endBytecode='39' classname='java.lang.String' start='2940' end='2940' sourcepath='java/lang/String.java' sourcefile='String.java' startBytecode='0'></SourceLine><Message>Called method String.format(String, Object[])</Message></Method><String role='STRING_FORMAT_STRING' value='if(extName == null) throw new IllegalStateException("Failed to get extension (%s) name from url (" + url.toString() + ") use keys(%s)");/n'><Message>Format string "if(extName == null) throw new IllegalStateException("Failed to get extension (%s) name from url (" + url.toString() + ") use keys(%s)");/n"</Message></String><SourceLine endBytecode='23' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='237' end='237' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='23' primary='true'><Message>At AdaptiveClassCodeGenerator.java:[line 237]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='3e7110d3a1990412310ea96b092fe83d' rank='20' abbrev='FS' category='BAD_PRACTICE' priority='2' type='VA_FORMAT_STRING_USES_NEWLINE' instanceOccurrenceMax='0'><ShortMessage>Format string should use %n rather than /n</ShortMessage><LongMessage>Format string should use %n rather than /n in org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generateExtensionAssignment()</LongMessage><Class classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' primary='true'><SourceLine classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='36' end='378' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java'><Message>At AdaptiveClassCodeGenerator.java:[lines 36-378]</Message></SourceLine><Message>In class org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' signature='()Ljava/lang/String;' name='generateExtensionAssignment' primary='true'><SourceLine endBytecode='79' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='289' end='289' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generateExtensionAssignment()</Message></Method><Method isStatic='true' role='METHOD_CALLED' classname='java.lang.String' signature='(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;' name='format'><SourceLine endBytecode='39' classname='java.lang.String' start='2940' end='2940' sourcepath='java/lang/String.java' sourcefile='String.java' startBytecode='0'></SourceLine><Message>Called method String.format(String, Object[])</Message></Method><String role='STRING_FORMAT_STRING' value='%s extension = (%&lt;s)%s.getExtensionLoader(%s.class).getExtension(extName);/n'><Message>Format string "%s extension = (%&lt;s)%s.getExtensionLoader(%s.class).getExtension(extName);/n"</Message></String><SourceLine endBytecode='34' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='289' end='289' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='34' primary='true'><Message>At AdaptiveClassCodeGenerator.java:[line 289]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c1531da35f2d78ac0fd35a3613a25d84' rank='20' abbrev='FS' category='BAD_PRACTICE' priority='2' type='VA_FORMAT_STRING_USES_NEWLINE' instanceOccurrenceMax='0'><ShortMessage>Format string should use %n rather than /n</ShortMessage><LongMessage>Format string should use %n rather than /n in org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generateGetUrlNullCheck(int, Class, String)</LongMessage><Class classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' primary='true'><SourceLine classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='36' end='378' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java'><Message>At AdaptiveClassCodeGenerator.java:[lines 36-378]</Message></SourceLine><Message>In class org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' signature='(ILjava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' name='generateGetUrlNullCheck' primary='true'><SourceLine endBytecode='246' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='371' end='378' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generateGetUrlNullCheck(int, Class, String)</Message></Method><Method isStatic='true' role='METHOD_CALLED' classname='java.lang.String' signature='(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;' name='format'><SourceLine endBytecode='39' classname='java.lang.String' start='2940' end='2940' sourcepath='java/lang/String.java' sourcefile='String.java' startBytecode='0'></SourceLine><Message>Called method String.format(String, Object[])</Message></Method><String role='STRING_FORMAT_STRING' value='%s url = arg%d.%s();/n'><Message>Format string "%s url = arg%d.%s();/n"</Message></String><SourceLine endBytecode='102' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='377' end='377' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='102' primary='true'><Message>At AdaptiveClassCodeGenerator.java:[line 377]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='aaba640f935ab06d4d7496683fc91ea4' rank='20' abbrev='FS' category='BAD_PRACTICE' priority='2' type='VA_FORMAT_STRING_USES_NEWLINE' instanceOccurrenceMax='0'><ShortMessage>Format string should use %n rather than /n</ShortMessage><LongMessage>Format string should use %n rather than /n in org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generateGetUrlNullCheck(int, Class, String)</LongMessage><Class classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' primary='true'><SourceLine classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='36' end='378' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java'><Message>At AdaptiveClassCodeGenerator.java:[lines 36-378]</Message></SourceLine><Message>In class org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' signature='(ILjava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' name='generateGetUrlNullCheck' primary='true'><SourceLine endBytecode='246' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='371' end='378' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generateGetUrlNullCheck(int, Class, String)</Message></Method><Method isStatic='true' role='METHOD_CALLED' classname='java.lang.String' signature='(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;' name='format'><SourceLine endBytecode='39' classname='java.lang.String' start='2940' end='2940' sourcepath='java/lang/String.java' sourcefile='String.java' startBytecode='0'></SourceLine><Message>Called method String.format(String, Object[])</Message></Method><String role='STRING_FORMAT_STRING' value='if (arg%d == null) throw new IllegalArgumentException("%s argument == null");/n'><Message>Format string "if (arg%d == null) throw new IllegalArgumentException("%s argument == null");/n"</Message></String><SourceLine endBytecode='31' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='372' end='372' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='31' primary='true'><Message>At AdaptiveClassCodeGenerator.java:[line 372]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='21c957afffcf7ee08a72bb3c8294e50b' rank='20' abbrev='FS' category='BAD_PRACTICE' priority='2' type='VA_FORMAT_STRING_USES_NEWLINE' instanceOccurrenceMax='0'><ShortMessage>Format string should use %n rather than /n</ShortMessage><LongMessage>Format string should use %n rather than /n in org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generateGetUrlNullCheck(int, Class, String)</LongMessage><Class classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' primary='true'><SourceLine classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='36' end='378' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java'><Message>At AdaptiveClassCodeGenerator.java:[lines 36-378]</Message></SourceLine><Message>In class org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' signature='(ILjava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' name='generateGetUrlNullCheck' primary='true'><SourceLine endBytecode='246' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='371' end='378' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generateGetUrlNullCheck(int, Class, String)</Message></Method><Method isStatic='true' role='METHOD_CALLED' classname='java.lang.String' signature='(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;' name='format'><SourceLine endBytecode='39' classname='java.lang.String' start='2940' end='2940' sourcepath='java/lang/String.java' sourcefile='String.java' startBytecode='0'></SourceLine><Message>Called method String.format(String, Object[])</Message></Method><String role='STRING_FORMAT_STRING' value='if (arg%d.%s() == null) throw new IllegalArgumentException("%s argument %s() == null");/n'><Message>Format string "if (arg%d.%s() == null) throw new IllegalArgumentException("%s argument %s() == null");/n"</Message></String><SourceLine endBytecode='68' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='374' end='374' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='68' primary='true'><Message>At AdaptiveClassCodeGenerator.java:[line 374]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='6324f575f1268a21e48f7a83064b0b6' rank='20' abbrev='FS' category='BAD_PRACTICE' priority='2' type='VA_FORMAT_STRING_USES_NEWLINE' instanceOccurrenceMax='0'><ShortMessage>Format string should use %n rather than /n</ShortMessage><LongMessage>Format string should use %n rather than /n in org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generateImports()</LongMessage><Class classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' primary='true'><SourceLine classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='36' end='378' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java'><Message>At AdaptiveClassCodeGenerator.java:[lines 36-378]</Message></SourceLine><Message>In class org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' signature='()Ljava/lang/String;' name='generateImports' primary='true'><SourceLine endBytecode='59' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='120' end='120' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generateImports()</Message></Method><Method isStatic='true' role='METHOD_CALLED' classname='java.lang.String' signature='(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;' name='format'><SourceLine endBytecode='39' classname='java.lang.String' start='2940' end='2940' sourcepath='java/lang/String.java' sourcefile='String.java' startBytecode='0'></SourceLine><Message>Called method String.format(String, Object[])</Message></Method><String role='STRING_FORMAT_STRING' value='import %s;/n'><Message>Format string "import %s;/n"</Message></String><SourceLine endBytecode='14' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='120' end='120' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='14' primary='true'><Message>At AdaptiveClassCodeGenerator.java:[line 120]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='64d70760f5e549452346aa28a8434476' rank='20' abbrev='FS' category='BAD_PRACTICE' priority='2' type='VA_FORMAT_STRING_USES_NEWLINE' instanceOccurrenceMax='0'><ShortMessage>Format string should use %n rather than /n</ShortMessage><LongMessage>Format string should use %n rather than /n in org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generateMethod(Method)</LongMessage><Class classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' primary='true'><SourceLine classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='36' end='378' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java'><Message>At AdaptiveClassCodeGenerator.java:[lines 36-378]</Message></SourceLine><Message>In class org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' signature='(Ljava/lang/reflect/Method;)Ljava/lang/String;' name='generateMethod' primary='true'><SourceLine endBytecode='188' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='156' end='161' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generateMethod(Method)</Message></Method><Method isStatic='true' role='METHOD_CALLED' classname='java.lang.String' signature='(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;' name='format'><SourceLine endBytecode='39' classname='java.lang.String' start='2940' end='2940' sourcepath='java/lang/String.java' sourcefile='String.java' startBytecode='0'></SourceLine><Message>Called method String.format(String, Object[])</Message></Method><String role='STRING_FORMAT_STRING' value='public %s %s(%s) %s {/n%s}/n'><Message>Format string "public %s %s(%s) %s {/n%s}/n"</Message></String><SourceLine endBytecode='63' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='161' end='161' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='63' primary='true'><Message>At AdaptiveClassCodeGenerator.java:[line 161]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f602c3558a71ed8231677a833ccbb864' rank='20' abbrev='FS' category='BAD_PRACTICE' priority='2' type='VA_FORMAT_STRING_USES_NEWLINE' instanceOccurrenceMax='0'><ShortMessage>Format string should use %n rather than /n</ShortMessage><LongMessage>Format string should use %n rather than /n in org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generatePackageInfo()</LongMessage><Class classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' primary='true'><SourceLine classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='36' end='378' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java'><Message>At AdaptiveClassCodeGenerator.java:[lines 36-378]</Message></SourceLine><Message>In class org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' signature='()Ljava/lang/String;' name='generatePackageInfo' primary='true'><SourceLine endBytecode='64' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='113' end='113' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generatePackageInfo()</Message></Method><Method isStatic='true' role='METHOD_CALLED' classname='java.lang.String' signature='(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;' name='format'><SourceLine endBytecode='39' classname='java.lang.String' start='2940' end='2940' sourcepath='java/lang/String.java' sourcefile='String.java' startBytecode='0'></SourceLine><Message>Called method String.format(String, Object[])</Message></Method><String role='STRING_FORMAT_STRING' value='package %s;/n'><Message>Format string "package %s;/n"</Message></String><SourceLine endBytecode='19' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='113' end='113' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='19' primary='true'><Message>At AdaptiveClassCodeGenerator.java:[line 113]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='86300baa734b5560120fcaca319e60b3' rank='20' abbrev='FS' category='BAD_PRACTICE' priority='2' type='VA_FORMAT_STRING_USES_NEWLINE' instanceOccurrenceMax='0'><ShortMessage>Format string should use %n rather than /n</ShortMessage><LongMessage>Format string should use %n rather than /n in org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generateReturnAndInvocation(Method)</LongMessage><Class classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' primary='true'><SourceLine classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='36' end='378' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java'><Message>At AdaptiveClassCodeGenerator.java:[lines 36-378]</Message></SourceLine><Message>In class org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' signature='(Ljava/lang/reflect/Method;)Ljava/lang/String;' name='generateReturnAndInvocation' primary='true'><SourceLine endBytecode='182' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='296' end='300' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generateReturnAndInvocation(Method)</Message></Method><Method isStatic='true' role='METHOD_CALLED' classname='java.lang.String' signature='(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;' name='format'><SourceLine endBytecode='39' classname='java.lang.String' start='2940' end='2940' sourcepath='java/lang/String.java' sourcefile='String.java' startBytecode='0'></SourceLine><Message>Called method String.format(String, Object[])</Message></Method><String role='STRING_FORMAT_STRING' value='extension.%s(%s);/n'><Message>Format string "extension.%s(%s);/n"</Message></String><SourceLine endBytecode='80' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='300' end='300' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='80' primary='true'><Message>At AdaptiveClassCodeGenerator.java:[line 300]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='1fed9b5664aab2dab8cbc968381e9f4f' rank='20' abbrev='FS' category='BAD_PRACTICE' priority='2' type='VA_FORMAT_STRING_USES_NEWLINE' instanceOccurrenceMax='0'><ShortMessage>Format string should use %n rather than /n</ShortMessage><LongMessage>Format string should use %n rather than /n in org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generateUnsupported(Method)</LongMessage><Class classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' primary='true'><SourceLine classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='36' end='378' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java'><Message>At AdaptiveClassCodeGenerator.java:[lines 36-378]</Message></SourceLine><Message>In class org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' signature='(Ljava/lang/reflect/Method;)Ljava/lang/String;' name='generateUnsupported' primary='true'><SourceLine endBytecode='75' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='134' end='134' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generateUnsupported(Method)</Message></Method><Method isStatic='true' role='METHOD_CALLED' classname='java.lang.String' signature='(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;' name='format'><SourceLine endBytecode='39' classname='java.lang.String' start='2940' end='2940' sourcepath='java/lang/String.java' sourcefile='String.java' startBytecode='0'></SourceLine><Message>Called method String.format(String, Object[])</Message></Method><String role='STRING_FORMAT_STRING' value='throw new UnsupportedOperationException("The method %s of interface %s is not adaptive method!");/n'><Message>Format string "throw new UnsupportedOperationException("The method %s of interface %s is not adaptive method!");/n"</Message></String><SourceLine endBytecode='20' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='134' end='134' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='20' primary='true'><Message>At AdaptiveClassCodeGenerator.java:[line 134]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='96dc7e48c49f447389f94d0e9d99f00e' rank='20' abbrev='FS' category='BAD_PRACTICE' priority='2' type='VA_FORMAT_STRING_USES_NEWLINE' instanceOccurrenceMax='0'><ShortMessage>Format string should use %n rather than /n</ShortMessage><LongMessage>Format string should use %n rather than /n in org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generateUrlNullCheck(int)</LongMessage><Class classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' primary='true'><SourceLine classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='36' end='378' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java'><Message>At AdaptiveClassCodeGenerator.java:[lines 36-378]</Message></SourceLine><Message>In class org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' signature='(I)Ljava/lang/String;' name='generateUrlNullCheck' primary='true'><SourceLine endBytecode='83' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='191' end='191' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.generateUrlNullCheck(int)</Message></Method><Method isStatic='true' role='METHOD_CALLED' classname='java.lang.String' signature='(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;' name='format'><SourceLine endBytecode='39' classname='java.lang.String' start='2940' end='2940' sourcepath='java/lang/String.java' sourcefile='String.java' startBytecode='0'></SourceLine><Message>Called method String.format(String, Object[])</Message></Method><String role='STRING_FORMAT_STRING' value='if (arg%d == null) throw new IllegalArgumentException("url == null");/n%s url = arg%d;/n'><Message>Format string "if (arg%d == null) throw new IllegalArgumentException("url == null");/n%s url = arg%d;/n"</Message></String><SourceLine endBytecode='28' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='191' end='191' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='28' primary='true'><Message>At AdaptiveClassCodeGenerator.java:[line 191]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b8f2f11eceb93846d8c188e4f8f17e1f' rank='20' abbrev='FS' category='BAD_PRACTICE' priority='2' type='VA_FORMAT_STRING_USES_NEWLINE' instanceOccurrenceMax='0'><ShortMessage>Format string should use %n rather than /n</ShortMessage><LongMessage>Format string should use %n rather than /n in org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.lambda$generateInvocationArgumentNullCheck$4(int)</LongMessage><Class classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' primary='true'><SourceLine classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='36' end='378' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java'><Message>At AdaptiveClassCodeGenerator.java:[lines 36-378]</Message></SourceLine><Message>In class org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' signature='(I)Ljava/lang/String;' name='lambda$generateInvocationArgumentNullCheck$4' primary='true'><SourceLine endBytecode='65' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='317' end='317' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator.lambda$generateInvocationArgumentNullCheck$4(int)</Message></Method><Method isStatic='true' role='METHOD_CALLED' classname='java.lang.String' signature='(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;' name='format'><SourceLine endBytecode='39' classname='java.lang.String' start='2940' end='2940' sourcepath='java/lang/String.java' sourcefile='String.java' startBytecode='0'></SourceLine><Message>Called method String.format(String, Object[])</Message></Method><String role='STRING_FORMAT_STRING' value='if (arg%d == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg%d.getMethodName();/n'><Message>Format string "if (arg%d == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg%d.getMethodName();/n"</Message></String><SourceLine endBytecode='20' classname='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator' start='317' end='317' sourcepath='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' sourcefile='AdaptiveClassCodeGenerator.java' startBytecode='20' primary='true'><Message>At AdaptiveClassCodeGenerator.java:[line 317]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='dca2a454e796d2469987e63d33d147fa' rank='20' abbrev='Dm' category='I18N' priority='3' type='DM_CONVERT_CASE' instanceOccurrenceMax='0'><ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage><LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.dubbo.common.extension.ExtensionLoader.findAnnotationName(Class)</LongMessage><Class classname='org.apache.dubbo.common.extension.ExtensionLoader' primary='true'><SourceLine classname='org.apache.dubbo.common.extension.ExtensionLoader' start='69' end='868' sourcepath='org/apache/dubbo/common/extension/ExtensionLoader.java' sourcefile='ExtensionLoader.java'><Message>At ExtensionLoader.java:[lines 69-868]</Message></SourceLine><Message>In class org.apache.dubbo.common.extension.ExtensionLoader</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.extension.ExtensionLoader' signature='(Ljava/lang/Class;)Ljava/lang/String;' name='findAnnotationName' primary='true'><SourceLine endBytecode='209' classname='org.apache.dubbo.common.extension.ExtensionLoader' start='831' end='839' sourcepath='org/apache/dubbo/common/extension/ExtensionLoader.java' sourcefile='ExtensionLoader.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.extension.ExtensionLoader.findAnnotationName(Class)</Message></Method><SourceLine endBytecode='55' classname='org.apache.dubbo.common.extension.ExtensionLoader' start='837' end='837' sourcepath='org/apache/dubbo/common/extension/ExtensionLoader.java' sourcefile='ExtensionLoader.java' startBytecode='55' primary='true'><Message>At ExtensionLoader.java:[line 837]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='3832b7e32c1283b33671b0731a415df5' rank='20' abbrev='Dm' category='I18N' priority='3' type='DM_CONVERT_CASE' instanceOccurrenceMax='0'><ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage><LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.dubbo.common.extension.ExtensionLoader.findException(String)</LongMessage><Class classname='org.apache.dubbo.common.extension.ExtensionLoader' primary='true'><SourceLine classname='org.apache.dubbo.common.extension.ExtensionLoader' start='69' end='868' sourcepath='org/apache/dubbo/common/extension/ExtensionLoader.java' sourcefile='ExtensionLoader.java'><Message>At ExtensionLoader.java:[lines 69-868]</Message></SourceLine><Message>In class org.apache.dubbo.common.extension.ExtensionLoader</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.extension.ExtensionLoader' signature='(Ljava/lang/String;)Ljava/lang/IllegalStateException;' name='findException' primary='true'><SourceLine endBytecode='471' classname='org.apache.dubbo.common.extension.ExtensionLoader' start='499' end='520' sourcepath='org/apache/dubbo/common/extension/ExtensionLoader.java' sourcefile='ExtensionLoader.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.extension.ExtensionLoader.findException(String)</Message></Method><SourceLine endBytecode='43' classname='org.apache.dubbo.common.extension.ExtensionLoader' start='500' end='500' sourcepath='org/apache/dubbo/common/extension/ExtensionLoader.java' sourcefile='ExtensionLoader.java' startBytecode='43' primary='true'><Message>At ExtensionLoader.java:[line 500]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c573f7fa02dde6296decc423d1e05ed4' rank='20' abbrev='Dm' category='I18N' priority='3' type='DM_CONVERT_CASE' instanceOccurrenceMax='0'><ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage><LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.dubbo.common.extension.ExtensionLoader.getSetterProperty(Method)</LongMessage><Class classname='org.apache.dubbo.common.extension.ExtensionLoader' primary='true'><SourceLine classname='org.apache.dubbo.common.extension.ExtensionLoader' start='69' end='868' sourcepath='org/apache/dubbo/common/extension/ExtensionLoader.java' sourcefile='ExtensionLoader.java'><Message>At ExtensionLoader.java:[lines 69-868]</Message></SourceLine><Message>In class org.apache.dubbo.common.extension.ExtensionLoader</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.extension.ExtensionLoader' signature='(Ljava/lang/reflect/Method;)Ljava/lang/String;' name='getSetterProperty' primary='true'><SourceLine endBytecode='135' classname='org.apache.dubbo.common.extension.ExtensionLoader' start='589' end='589' sourcepath='org/apache/dubbo/common/extension/ExtensionLoader.java' sourcefile='ExtensionLoader.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.extension.ExtensionLoader.getSetterProperty(Method)</Message></Method><SourceLine endBytecode='27' classname='org.apache.dubbo.common.extension.ExtensionLoader' start='589' end='589' sourcepath='org/apache/dubbo/common/extension/ExtensionLoader.java' sourcefile='ExtensionLoader.java' startBytecode='27' primary='true'><Message>At ExtensionLoader.java:[line 589]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='a7eebe6311c97ef59c87caf3478665c7' cweid='476' rank='20' abbrev='RCN' category='STYLE' priority='3' type='RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE' instanceOccurrenceMax='0'><ShortMessage>Redundant nullcheck of value known to be non-null</ShortMessage><LongMessage>Redundant nullcheck of urls, which is known to be non-null in org.apache.dubbo.common.extension.ExtensionLoader.loadDirectory(Map, String, String)</LongMessage><Class classname='org.apache.dubbo.common.extension.ExtensionLoader' primary='true'><SourceLine classname='org.apache.dubbo.common.extension.ExtensionLoader' start='69' end='868' sourcepath='org/apache/dubbo/common/extension/ExtensionLoader.java' sourcefile='ExtensionLoader.java'><Message>At ExtensionLoader.java:[lines 69-868]</Message></SourceLine><Message>In class org.apache.dubbo.common.extension.ExtensionLoader</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.extension.ExtensionLoader' signature='(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V' name='loadDirectory' primary='true'><SourceLine endBytecode='432' classname='org.apache.dubbo.common.extension.ExtensionLoader' start='666' end='685' sourcepath='org/apache/dubbo/common/extension/ExtensionLoader.java' sourcefile='ExtensionLoader.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.extension.ExtensionLoader.loadDirectory(Map, String, String)</Message></Method><LocalVariable role='LOCAL_VARIABLE_VALUE_OF' pc='49' name='urls' register='5'><Message>Value loaded from urls</Message></LocalVariable><SourceLine role='SOURCE_REDUNDANT_NULL_CHECK' endBytecode='51' classname='org.apache.dubbo.common.extension.ExtensionLoader' start='675' end='675' sourcepath='org/apache/dubbo/common/extension/ExtensionLoader.java' sourcefile='ExtensionLoader.java' startBytecode='51' primary='true'><Message>Redundant null check at ExtensionLoader.java:[line 675]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='88ea489c8d3cf1c3b4350c83e242d05d' cweid='396' rank='20' abbrev='REC' category='STYLE' priority='3' type='REC_CATCH_EXCEPTION' instanceOccurrenceMax='0'><ShortMessage>Exception is caught when Exception is not thrown</ShortMessage><LongMessage>Exception is caught when Exception is not thrown in org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(Object)</LongMessage><Class classname='org.apache.dubbo.common.extension.ExtensionLoader' primary='true'><SourceLine classname='org.apache.dubbo.common.extension.ExtensionLoader' start='69' end='868' sourcepath='org/apache/dubbo/common/extension/ExtensionLoader.java' sourcefile='ExtensionLoader.java'><Message>At ExtensionLoader.java:[lines 69-868]</Message></SourceLine><Message>In class org.apache.dubbo.common.extension.ExtensionLoader</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.extension.ExtensionLoader' signature='(Ljava/lang/Object;)Ljava/lang/Object;' name='injectExtension' primary='true'><SourceLine endBytecode='503' classname='org.apache.dubbo.common.extension.ExtensionLoader' start='551' end='580' sourcepath='org/apache/dubbo/common/extension/ExtensionLoader.java' sourcefile='ExtensionLoader.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(Object)</Message></Method><SourceLine endBytecode='122' classname='org.apache.dubbo.common.extension.ExtensionLoader' start='570' end='570' sourcepath='org/apache/dubbo/common/extension/ExtensionLoader.java' sourcefile='ExtensionLoader.java' startBytecode='122' primary='true'><Message>At ExtensionLoader.java:[line 570]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='194' classname='org.apache.dubbo.common.extension.ExtensionLoader' start='577' end='577' sourcepath='org/apache/dubbo/common/extension/ExtensionLoader.java' sourcefile='ExtensionLoader.java' startBytecode='194'><Message>Another occurrence at ExtensionLoader.java:[line 577]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='a517588d5e23fd196ed5b9d5c35a116' cweid='476' rank='18' abbrev='RCN' category='STYLE' priority='2' type='RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE' instanceOccurrenceMax='0'><ShortMessage>Redundant nullcheck of value known to be non-null</ShortMessage><LongMessage>Redundant nullcheck of a1, which is known to be non-null in org.apache.dubbo.common.extension.support.ActivateComparator.compare(Object, Object)</LongMessage><Class classname='org.apache.dubbo.common.extension.support.ActivateComparator' primary='true'><SourceLine classname='org.apache.dubbo.common.extension.support.ActivateComparator' start='30' end='117' sourcepath='org/apache/dubbo/common/extension/support/ActivateComparator.java' sourcefile='ActivateComparator.java'><Message>At ActivateComparator.java:[lines 30-117]</Message></SourceLine><Message>In class org.apache.dubbo.common.extension.support.ActivateComparator</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.extension.support.ActivateComparator' signature='(Ljava/lang/Object;Ljava/lang/Object;)I' name='compare' primary='true'><SourceLine endBytecode='555' classname='org.apache.dubbo.common.extension.support.ActivateComparator' start='36' end='81' sourcepath='org/apache/dubbo/common/extension/support/ActivateComparator.java' sourcefile='ActivateComparator.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.extension.support.ActivateComparator.compare(Object, Object)</Message></Method><LocalVariable role='LOCAL_VARIABLE_VALUE_OF' pc='173' name='a1' register='4'><Message>Value loaded from a1</Message></LocalVariable><Method isStatic='false' role='METHOD_RETURN_VALUE_OF' classname='org.apache.dubbo.common.extension.support.ActivateComparator' signature='(Ljava/lang/Class;)Lorg/apache/dubbo/common/extension/support/ActivateComparator$ActivateInfo;' name='parseActivate'><SourceLine endBytecode='267' classname='org.apache.dubbo.common.extension.support.ActivateComparator' start='104' end='117' sourcepath='org/apache/dubbo/common/extension/support/ActivateComparator.java' sourcefile='ActivateComparator.java' startBytecode='0'></SourceLine><Message>Return value of org.apache.dubbo.common.extension.support.ActivateComparator.parseActivate(Class) of type org.apache.dubbo.common.extension.support.ActivateComparator$ActivateInfo</Message></Method><SourceLine role='SOURCE_REDUNDANT_NULL_CHECK' endBytecode='175' classname='org.apache.dubbo.common.extension.support.ActivateComparator' start='78' end='78' sourcepath='org/apache/dubbo/common/extension/support/ActivateComparator.java' sourcefile='ActivateComparator.java' startBytecode='175' primary='true'><Message>Redundant null check at ActivateComparator.java:[line 78]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='9481944d1549d9e23c335d5321db3b22' cweid='476' rank='18' abbrev='RCN' category='STYLE' priority='2' type='RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE' instanceOccurrenceMax='0'><ShortMessage>Redundant nullcheck of value known to be non-null</ShortMessage><LongMessage>Redundant nullcheck of a2, which is known to be non-null in org.apache.dubbo.common.extension.support.ActivateComparator.compare(Object, Object)</LongMessage><Class classname='org.apache.dubbo.common.extension.support.ActivateComparator' primary='true'><SourceLine classname='org.apache.dubbo.common.extension.support.ActivateComparator' start='30' end='117' sourcepath='org/apache/dubbo/common/extension/support/ActivateComparator.java' sourcefile='ActivateComparator.java'><Message>At ActivateComparator.java:[lines 30-117]</Message></SourceLine><Message>In class org.apache.dubbo.common.extension.support.ActivateComparator</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.extension.support.ActivateComparator' signature='(Ljava/lang/Object;Ljava/lang/Object;)I' name='compare' primary='true'><SourceLine endBytecode='555' classname='org.apache.dubbo.common.extension.support.ActivateComparator' start='36' end='81' sourcepath='org/apache/dubbo/common/extension/support/ActivateComparator.java' sourcefile='ActivateComparator.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.extension.support.ActivateComparator.compare(Object, Object)</Message></Method><LocalVariable role='LOCAL_VARIABLE_VALUE_OF' pc='189' name='a2' register='5'><Message>Value loaded from a2</Message></LocalVariable><Method isStatic='false' role='METHOD_RETURN_VALUE_OF' classname='org.apache.dubbo.common.extension.support.ActivateComparator' signature='(Ljava/lang/Class;)Lorg/apache/dubbo/common/extension/support/ActivateComparator$ActivateInfo;' name='parseActivate'><SourceLine endBytecode='267' classname='org.apache.dubbo.common.extension.support.ActivateComparator' start='104' end='117' sourcepath='org/apache/dubbo/common/extension/support/ActivateComparator.java' sourcefile='ActivateComparator.java' startBytecode='0'></SourceLine><Message>Return value of org.apache.dubbo.common.extension.support.ActivateComparator.parseActivate(Class) of type org.apache.dubbo.common.extension.support.ActivateComparator$ActivateInfo</Message></Method><SourceLine role='SOURCE_REDUNDANT_NULL_CHECK' endBytecode='191' classname='org.apache.dubbo.common.extension.support.ActivateComparator' start='79' end='79' sourcepath='org/apache/dubbo/common/extension/support/ActivateComparator.java' sourcefile='ActivateComparator.java' startBytecode='191' primary='true'><Message>Redundant null check at ActivateComparator.java:[line 79]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='5c7a4be042d122d3791e513417ea40e7' rank='20' abbrev='Se' category='BAD_PRACTICE' priority='3' type='SE_COMPARATOR_SHOULD_BE_SERIALIZABLE' instanceOccurrenceMax='0'><ShortMessage>Comparator doesn't implement Serializable</ShortMessage><LongMessage>org.apache.dubbo.common.extension.support.ActivateComparator implements Comparator but not Serializable</LongMessage><Class classname='org.apache.dubbo.common.extension.support.ActivateComparator' primary='true'><SourceLine classname='org.apache.dubbo.common.extension.support.ActivateComparator' start='30' end='117' sourcepath='org/apache/dubbo/common/extension/support/ActivateComparator.java' sourcefile='ActivateComparator.java'><Message>At ActivateComparator.java:[lines 30-117]</Message></SourceLine><Message>In class org.apache.dubbo.common.extension.support.ActivateComparator</Message></Class><SourceLine synthetic='true' classname='org.apache.dubbo.common.extension.support.ActivateComparator' start='30' end='117' sourcepath='org/apache/dubbo/common/extension/support/ActivateComparator.java' sourcefile='ActivateComparator.java'><Message>At ActivateComparator.java:[lines 30-117]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='19c16d592a2bc49f5f1deb250bdf930a' rank='19' abbrev='Dm' category='I18N' priority='1' type='DM_DEFAULT_ENCODING' instanceOccurrenceMax='0'><ShortMessage>Reliance on default encoding</ShortMessage><LongMessage>Found reliance on default encoding in org.apache.dubbo.common.io.Bytes.getMD5(String): String.getBytes()</LongMessage><Class classname='org.apache.dubbo.common.io.Bytes' primary='true'><SourceLine classname='org.apache.dubbo.common.io.Bytes' start='40' end='924' sourcepath='org/apache/dubbo/common/io/Bytes.java' sourcefile='Bytes.java'><Message>At Bytes.java:[lines 40-924]</Message></SourceLine><Message>In class org.apache.dubbo.common.io.Bytes</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.io.Bytes' signature='(Ljava/lang/String;)[B' name='getMD5' primary='true'><SourceLine endBytecode='49' classname='org.apache.dubbo.common.io.Bytes' start='815' end='815' sourcepath='org/apache/dubbo/common/io/Bytes.java' sourcefile='Bytes.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.io.Bytes.getMD5(String)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.String' signature='()[B' name='getBytes'><SourceLine endBytecode='37' classname='java.lang.String' start='958' end='958' sourcepath='java/lang/String.java' sourcefile='String.java' startBytecode='0'></SourceLine><Message>Called method String.getBytes()</Message></Method><SourceLine endBytecode='1' classname='org.apache.dubbo.common.io.Bytes' start='815' end='815' sourcepath='org/apache/dubbo/common/io/Bytes.java' sourcefile='Bytes.java' startBytecode='1' primary='true'><Message>At Bytes.java:[line 815]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b2c7fbecb5cef5cc3e14f4948b7dc1a7' rank='19' abbrev='RR' category='BAD_PRACTICE' priority='3' type='SR_NOT_CHECKED' instanceOccurrenceMax='0'><ShortMessage>Method ignores results of InputStream.skip()</ShortMessage><LongMessage>org.apache.dubbo.common.io.StreamUtils.skipUnusedStream(InputStream) ignores result of java.io.InputStream.skip(long)</LongMessage><Class classname='org.apache.dubbo.common.io.StreamUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.io.StreamUtils' start='26' end='230' sourcepath='org/apache/dubbo/common/io/StreamUtils.java' sourcefile='StreamUtils.java'><Message>At StreamUtils.java:[lines 26-230]</Message></SourceLine><Message>In class org.apache.dubbo.common.io.StreamUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.io.StreamUtils' signature='(Ljava/io/InputStream;)V' name='skipUnusedStream' primary='true'><SourceLine endBytecode='76' classname='org.apache.dubbo.common.io.StreamUtils' start='227' end='230' sourcepath='org/apache/dubbo/common/io/StreamUtils.java' sourcefile='StreamUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.io.StreamUtils.skipUnusedStream(InputStream)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.io.InputStream' signature='(J)J' name='skip'><SourceLine endBytecode='187' classname='java.io.InputStream' start='214' end='231' sourcepath='java/io/InputStream.java' sourcefile='InputStream.java' startBytecode='0'></SourceLine><Message>Called method java.io.InputStream.skip(long)</Message></Method><SourceLine endBytecode='13' classname='org.apache.dubbo.common.io.StreamUtils' start='228' end='228' sourcepath='org/apache/dubbo/common/io/StreamUtils.java' sourcefile='StreamUtils.java' startBytecode='13' primary='true'><Message>At StreamUtils.java:[line 228]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c2038c4bfe170ca95c63b2ea85d77e2d' rank='16' abbrev='RR' category='BAD_PRACTICE' priority='2' type='RR_NOT_CHECKED' instanceOccurrenceMax='0'><ShortMessage>Method ignores results of InputStream.read()</ShortMessage><LongMessage>org.apache.dubbo.common.io.StreamUtils$1.read(byte[], int, int) ignores result of java.io.InputStream.read(byte[], int, int)</LongMessage><Class classname='org.apache.dubbo.common.io.StreamUtils$1' primary='true'><SourceLine classname='org.apache.dubbo.common.io.StreamUtils$1' start='30' end='109' sourcepath='org/apache/dubbo/common/io/StreamUtils.java' sourcefile='StreamUtils.java'><Message>At StreamUtils.java:[lines 30-109]</Message></SourceLine><Message>In class org.apache.dubbo.common.io.StreamUtils$1</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.io.StreamUtils$1' signature='([BII)I' name='read' primary='true'><SourceLine endBytecode='234' classname='org.apache.dubbo.common.io.StreamUtils$1' start='44' end='66' sourcepath='org/apache/dubbo/common/io/StreamUtils.java' sourcefile='StreamUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.io.StreamUtils$1.read(byte[], int, int)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.io.InputStream' signature='([BII)I' name='read'><SourceLine endBytecode='243' classname='java.io.InputStream' start='162' end='187' sourcepath='java/io/InputStream.java' sourcefile='InputStream.java' startBytecode='0'></SourceLine><Message>Called method java.io.InputStream.read(byte[], int, int)</Message></Method><SourceLine endBytecode='85' classname='org.apache.dubbo.common.io.StreamUtils$1' start='64' end='64' sourcepath='org/apache/dubbo/common/io/StreamUtils.java' sourcefile='StreamUtils.java' startBytecode='85' primary='true'><Message>At StreamUtils.java:[line 64]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='7aad7903c891430f651013c6da658ce2' rank='16' abbrev='RR' category='BAD_PRACTICE' priority='2' type='SR_NOT_CHECKED' instanceOccurrenceMax='0'><ShortMessage>Method ignores results of InputStream.skip()</ShortMessage><LongMessage>org.apache.dubbo.common.io.StreamUtils$1.skip(long) ignores result of java.io.InputStream.skip(long)</LongMessage><Class classname='org.apache.dubbo.common.io.StreamUtils$1' primary='true'><SourceLine classname='org.apache.dubbo.common.io.StreamUtils$1' start='30' end='109' sourcepath='org/apache/dubbo/common/io/StreamUtils.java' sourcefile='StreamUtils.java'><Message>At StreamUtils.java:[lines 30-109]</Message></SourceLine><Message>In class org.apache.dubbo.common.io.StreamUtils$1</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.io.StreamUtils$1' signature='(J)J' name='skip' primary='true'><SourceLine endBytecode='143' classname='org.apache.dubbo.common.io.StreamUtils$1' start='71' end='81' sourcepath='org/apache/dubbo/common/io/StreamUtils.java' sourcefile='StreamUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.io.StreamUtils$1.skip(long)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.io.InputStream' signature='(J)J' name='skip'><SourceLine endBytecode='187' classname='java.io.InputStream' start='214' end='231' sourcepath='java/io/InputStream.java' sourcefile='InputStream.java' startBytecode='0'></SourceLine><Message>Called method java.io.InputStream.skip(long)</Message></Method><SourceLine endBytecode='40' classname='org.apache.dubbo.common.io.StreamUtils$1' start='79' end='79' sourcepath='org/apache/dubbo/common/io/StreamUtils.java' sourcefile='StreamUtils.java' startBytecode='40' primary='true'><Message>At StreamUtils.java:[line 79]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='6088190172662b73a9d7c6e509531427' rank='20' abbrev='UwF' category='STYLE' priority='3' type='UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR' instanceOccurrenceMax='0'><ShortMessage>Field not initialized in constructor but dereferenced without null check</ShortMessage><LongMessage>StreamUtils$2.mMarkBuffer not initialized in constructor and dereferenced in org.apache.dubbo.common.io.StreamUtils$2.read()</LongMessage><Class classname='org.apache.dubbo.common.io.StreamUtils$2' primary='true'><SourceLine classname='org.apache.dubbo.common.io.StreamUtils$2' start='118' end='218' sourcepath='org/apache/dubbo/common/io/StreamUtils.java' sourcefile='StreamUtils.java'><Message>At StreamUtils.java:[lines 118-218]</Message></SourceLine><Message>In class org.apache.dubbo.common.io.StreamUtils$2</Message></Class><Field isStatic='false' classname='org.apache.dubbo.common.io.StreamUtils$2' signature='[B' name='mMarkBuffer' primary='true'><SourceLine classname='org.apache.dubbo.common.io.StreamUtils$2' sourcepath='org/apache/dubbo/common/io/StreamUtils.java' sourcefile='StreamUtils.java'><Message>In StreamUtils.java</Message></SourceLine><Message>Field org.apache.dubbo.common.io.StreamUtils$2.mMarkBuffer</Message></Field><Method isStatic='false' classname='org.apache.dubbo.common.io.StreamUtils$2' signature='()I' name='read' primary='true'><SourceLine endBytecode='355' classname='org.apache.dubbo.common.io.StreamUtils$2' start='129' end='166' sourcepath='org/apache/dubbo/common/io/StreamUtils.java' sourcefile='StreamUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.io.StreamUtils$2.read()</Message></Method><SourceLine endBytecode='41' classname='org.apache.dubbo.common.io.StreamUtils$2' start='133' end='133' sourcepath='org/apache/dubbo/common/io/StreamUtils.java' sourcefile='StreamUtils.java' startBytecode='41' primary='true'><Message>At StreamUtils.java:[line 133]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='8d6fe80573a9df3e814f01ae9d4b4fbf' cweid='374' rank='18' abbrev='EI2' category='MALICIOUS_CODE' priority='2' type='EI_EXPOSE_REP2' instanceOccurrenceMax='0'><ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage><LongMessage>new org.apache.dubbo.common.io.UnsafeByteArrayInputStream(byte[], int, int) may expose internal representation by storing an externally mutable object into UnsafeByteArrayInputStream.mData</LongMessage><Class classname='org.apache.dubbo.common.io.UnsafeByteArrayInputStream' primary='true'><SourceLine classname='org.apache.dubbo.common.io.UnsafeByteArrayInputStream' start='28' end='116' sourcepath='org/apache/dubbo/common/io/UnsafeByteArrayInputStream.java' sourcefile='UnsafeByteArrayInputStream.java'><Message>At UnsafeByteArrayInputStream.java:[lines 28-116]</Message></SourceLine><Message>In class org.apache.dubbo.common.io.UnsafeByteArrayInputStream</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.io.UnsafeByteArrayInputStream' signature='([BII)V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='128' classname='org.apache.dubbo.common.io.UnsafeByteArrayInputStream' start='38' end='42' sourcepath='org/apache/dubbo/common/io/UnsafeByteArrayInputStream.java' sourcefile='UnsafeByteArrayInputStream.java' startBytecode='0'></SourceLine><Message>In method new org.apache.dubbo.common.io.UnsafeByteArrayInputStream(byte[], int, int)</Message></Method><Field isStatic='false' classname='org.apache.dubbo.common.io.UnsafeByteArrayInputStream' signature='[B' name='mData' primary='true'><SourceLine classname='org.apache.dubbo.common.io.UnsafeByteArrayInputStream' sourcepath='org/apache/dubbo/common/io/UnsafeByteArrayInputStream.java' sourcefile='UnsafeByteArrayInputStream.java'><Message>In UnsafeByteArrayInputStream.java</Message></SourceLine><Message>Field org.apache.dubbo.common.io.UnsafeByteArrayInputStream.mData</Message></Field><LocalVariable role='LOCAL_VARIABLE_NAMED' pc='11' name='buf' register='1'><Message>Local variable named buf</Message></LocalVariable><SourceLine endBytecode='11' classname='org.apache.dubbo.common.io.UnsafeByteArrayInputStream' start='39' end='39' sourcepath='org/apache/dubbo/common/io/UnsafeByteArrayInputStream.java' sourcefile='UnsafeByteArrayInputStream.java' startBytecode='11' primary='true'><Message>At UnsafeByteArrayInputStream.java:[line 39]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='9d105ab3f454a6b61fe1bc04558c013a' rank='19' abbrev='Dm' category='I18N' priority='1' type='DM_DEFAULT_ENCODING' instanceOccurrenceMax='0'><ShortMessage>Reliance on default encoding</ShortMessage><LongMessage>Found reliance on default encoding in org.apache.dubbo.common.io.UnsafeByteArrayOutputStream.toString(): new String(byte[], int, int)</LongMessage><Class classname='org.apache.dubbo.common.io.UnsafeByteArrayOutputStream' primary='true'><SourceLine classname='org.apache.dubbo.common.io.UnsafeByteArrayOutputStream' start='33' end='100' sourcepath='org/apache/dubbo/common/io/UnsafeByteArrayOutputStream.java' sourcefile='UnsafeByteArrayOutputStream.java'><Message>At UnsafeByteArrayOutputStream.java:[lines 33-100]</Message></SourceLine><Message>In class org.apache.dubbo.common.io.UnsafeByteArrayOutputStream</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.io.UnsafeByteArrayOutputStream' signature='()Ljava/lang/String;' name='toString' primary='true'><SourceLine endBytecode='58' classname='org.apache.dubbo.common.io.UnsafeByteArrayOutputStream' start='91' end='91' sourcepath='org/apache/dubbo/common/io/UnsafeByteArrayOutputStream.java' sourcefile='UnsafeByteArrayOutputStream.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.io.UnsafeByteArrayOutputStream.toString()</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.String' signature='([BII)V' name='&lt;init&gt;'><SourceLine endBytecode='56' classname='java.lang.String' start='544' end='547' sourcepath='java/lang/String.java' sourcefile='String.java' startBytecode='0'></SourceLine><Message>Called method new String(byte[], int, int)</Message></Method><SourceLine endBytecode='13' classname='org.apache.dubbo.common.io.UnsafeByteArrayOutputStream' start='91' end='91' sourcepath='org/apache/dubbo/common/io/UnsafeByteArrayOutputStream.java' sourcefile='UnsafeByteArrayOutputStream.java' startBytecode='13' primary='true'><Message>At UnsafeByteArrayOutputStream.java:[line 91]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='ba15c6375b4e859aef6ebe2925d04b2c' rank='18' abbrev='Bx' category='PERFORMANCE' priority='2' type='BX_UNBOXING_IMMEDIATELY_REBOXED' instanceOccurrenceMax='0'><ShortMessage>Boxed value is unboxed and then immediately reboxed</ShortMessage><LongMessage>Boxed value is unboxed and then immediately reboxed in org.apache.dubbo.common.json.GenericJSONConverter$10.decode(Object)</LongMessage><Class classname='org.apache.dubbo.common.json.GenericJSONConverter$10' primary='true'><SourceLine classname='org.apache.dubbo.common.json.GenericJSONConverter$10' start='136' end='142' sourcepath='org/apache/dubbo/common/json/GenericJSONConverter.java' sourcefile='GenericJSONConverter.java'><Message>At GenericJSONConverter.java:[lines 136-142]</Message></SourceLine><Message>In class org.apache.dubbo.common.json.GenericJSONConverter$10</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.json.GenericJSONConverter$10' signature='(Ljava/lang/Object;)Ljava/lang/Object;' name='decode' primary='true'><SourceLine endBytecode='91' classname='org.apache.dubbo.common.json.GenericJSONConverter$10' start='139' end='142' sourcepath='org/apache/dubbo/common/json/GenericJSONConverter.java' sourcefile='GenericJSONConverter.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.json.GenericJSONConverter$10.decode(Object)</Message></Method><Method isStatic='true' role='METHOD_CALLED' classname='java.lang.Boolean' signature='(Z)Ljava/lang/Boolean;' name='valueOf'><SourceLine endBytecode='50' classname='java.lang.Boolean' start='150' end='150' sourcepath='java/lang/Boolean.java' sourcefile='Boolean.java' startBytecode='0'></SourceLine><Message>Called method Boolean.valueOf(boolean)</Message></Method><SourceLine endBytecode='14' classname='org.apache.dubbo.common.json.GenericJSONConverter$10' start='140' end='140' sourcepath='org/apache/dubbo/common/json/GenericJSONConverter.java' sourcefile='GenericJSONConverter.java' startBytecode='14' primary='true'><Message>At GenericJSONConverter.java:[line 140]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='65725614434a35a736080e0d1ff9096a' rank='20' abbrev='Bx' category='PERFORMANCE' priority='3' type='DM_FP_NUMBER_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortMessage><LongMessage>org.apache.dubbo.common.json.GenericJSONConverter$21.decode(Object) invokes inefficient new Float(float) constructor; use Float.valueOf(float) instead</LongMessage><Class classname='org.apache.dubbo.common.json.GenericJSONConverter$21' primary='true'><SourceLine classname='org.apache.dubbo.common.json.GenericJSONConverter$21' start='257' end='263' sourcepath='org/apache/dubbo/common/json/GenericJSONConverter.java' sourcefile='GenericJSONConverter.java'><Message>At GenericJSONConverter.java:[lines 257-263]</Message></SourceLine><Message>In class org.apache.dubbo.common.json.GenericJSONConverter$21</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.json.GenericJSONConverter$21' signature='(Ljava/lang/Object;)Ljava/lang/Object;' name='decode' primary='true'><SourceLine endBytecode='95' classname='org.apache.dubbo.common.json.GenericJSONConverter$21' start='260' end='263' sourcepath='org/apache/dubbo/common/json/GenericJSONConverter.java' sourcefile='GenericJSONConverter.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.json.GenericJSONConverter$21.decode(Object)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.Float' signature='(F)V' name='&lt;init&gt;'><SourceLine endBytecode='41' classname='java.lang.Float' start='506' end='508' sourcepath='java/lang/Float.java' sourcefile='Float.java' startBytecode='0'></SourceLine><Message>Called method new Float(float)</Message></Method><Method isStatic='true' role='SHOULD_CALL' classname='java.lang.Float' signature='(F)Ljava/lang/Float;' name='valueOf'><SourceLine endBytecode='32' classname='java.lang.Float' start='433' end='433' sourcepath='java/lang/Float.java' sourcefile='Float.java' startBytecode='0'></SourceLine><Message>Should call Float.valueOf(float) instead</Message></Method><SourceLine endBytecode='18' classname='org.apache.dubbo.common.json.GenericJSONConverter$21' start='261' end='261' sourcepath='org/apache/dubbo/common/json/GenericJSONConverter.java' sourcefile='GenericJSONConverter.java' startBytecode='18' primary='true'><Message>At GenericJSONConverter.java:[line 261]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='1ee94bf19f2dd8540b0cff39395c2e75' rank='20' abbrev='Bx' category='PERFORMANCE' priority='3' type='DM_FP_NUMBER_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortMessage><LongMessage>org.apache.dubbo.common.json.GenericJSONConverter$23.decode(Object) invokes inefficient new Double(double) constructor; use Double.valueOf(double) instead</LongMessage><Class classname='org.apache.dubbo.common.json.GenericJSONConverter$23' primary='true'><SourceLine classname='org.apache.dubbo.common.json.GenericJSONConverter$23' start='279' end='285' sourcepath='org/apache/dubbo/common/json/GenericJSONConverter.java' sourcefile='GenericJSONConverter.java'><Message>At GenericJSONConverter.java:[lines 279-285]</Message></SourceLine><Message>In class org.apache.dubbo.common.json.GenericJSONConverter$23</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.json.GenericJSONConverter$23' signature='(Ljava/lang/Object;)Ljava/lang/Object;' name='decode' primary='true'><SourceLine endBytecode='95' classname='org.apache.dubbo.common.json.GenericJSONConverter$23' start='282' end='285' sourcepath='org/apache/dubbo/common/json/GenericJSONConverter.java' sourcefile='GenericJSONConverter.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.json.GenericJSONConverter$23.decode(Object)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.Double' signature='(D)V' name='&lt;init&gt;'><SourceLine endBytecode='41' classname='java.lang.Double' start='592' end='594' sourcepath='java/lang/Double.java' sourcefile='Double.java' startBytecode='0'></SourceLine><Message>Called method new Double(double)</Message></Method><Method isStatic='true' role='SHOULD_CALL' classname='java.lang.Double' signature='(D)Ljava/lang/Double;' name='valueOf'><SourceLine endBytecode='32' classname='java.lang.Double' start='519' end='519' sourcepath='java/lang/Double.java' sourcefile='Double.java' startBytecode='0'></SourceLine><Message>Should call Double.valueOf(double) instead</Message></Method><SourceLine endBytecode='18' classname='org.apache.dubbo.common.json.GenericJSONConverter$23' start='283' end='283' sourcepath='org/apache/dubbo/common/json/GenericJSONConverter.java' sourcefile='GenericJSONConverter.java' startBytecode='18' primary='true'><Message>At GenericJSONConverter.java:[line 283]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='ac0e82dbe172aee0363bf6f7a2c8aaf' rank='20' abbrev='DP' category='MALICIOUS_CODE' priority='3' type='DP_DO_INSIDE_DO_PRIVILEGED' instanceOccurrenceMax='0'><ShortMessage>Method invoked that should be only be invoked inside a doPrivileged block</ShortMessage><LongMessage>Invocation of reflect.Field.setAccessible(boolean), which should be invoked from within a doPrivileged block, in org.apache.dubbo.common.json.J2oVisitor.objectItemValue(Object, boolean)</LongMessage><Class classname='org.apache.dubbo.common.json.J2oVisitor' primary='true'><SourceLine classname='org.apache.dubbo.common.json.J2oVisitor' start='40' end='392' sourcepath='org/apache/dubbo/common/json/J2oVisitor.java' sourcefile='J2oVisitor.java'><Message>At J2oVisitor.java:[lines 40-392]</Message></SourceLine><Message>In class org.apache.dubbo.common.json.J2oVisitor</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.json.J2oVisitor' signature='(Ljava/lang/Object;Z)V' name='objectItemValue' primary='true'><SourceLine endBytecode='462' classname='org.apache.dubbo.common.json.J2oVisitor' start='288' end='317' sourcepath='org/apache/dubbo/common/json/J2oVisitor.java' sourcefile='J2oVisitor.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.json.J2oVisitor.objectItemValue(Object, boolean)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.reflect.Field' signature='(Z)V' name='setAccessible'><SourceLine classname='java.lang.reflect.Field' sourcepath='java/lang/reflect/Field.java' sourcefile='Field.java'></SourceLine><Message>Called method reflect.Field.setAccessible(boolean)</Message></Method><SourceLine endBytecode='123' classname='org.apache.dubbo.common.json.J2oVisitor' start='304' end='304' sourcepath='org/apache/dubbo/common/json/J2oVisitor.java' sourcefile='J2oVisitor.java' startBytecode='123' primary='true'><Message>At J2oVisitor.java:[line 304]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='d9529a15be500150dde0148743ee8247' rank='20' abbrev='UwF' category='STYLE' priority='3' type='UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR' instanceOccurrenceMax='0'><ShortMessage>Field not initialized in constructor but dereferenced without null check</ShortMessage><LongMessage>J2oVisitor.mValue not initialized in constructor and dereferenced in org.apache.dubbo.common.json.J2oVisitor.objectItemValue(Object, boolean)</LongMessage><Class classname='org.apache.dubbo.common.json.J2oVisitor' primary='true'><SourceLine classname='org.apache.dubbo.common.json.J2oVisitor' start='40' end='392' sourcepath='org/apache/dubbo/common/json/J2oVisitor.java' sourcefile='J2oVisitor.java'><Message>At J2oVisitor.java:[lines 40-392]</Message></SourceLine><Message>In class org.apache.dubbo.common.json.J2oVisitor</Message></Class><Field isStatic='false' classname='org.apache.dubbo.common.json.J2oVisitor' signature='Ljava/lang/Object;' name='mValue' primary='true'><SourceLine classname='org.apache.dubbo.common.json.J2oVisitor' sourcepath='org/apache/dubbo/common/json/J2oVisitor.java' sourcefile='J2oVisitor.java'><Message>In J2oVisitor.java</Message></SourceLine><Message>Field org.apache.dubbo.common.json.J2oVisitor.mValue</Message></Field><Method isStatic='false' classname='org.apache.dubbo.common.json.J2oVisitor' signature='(Ljava/lang/Object;Z)V' name='objectItemValue' primary='true'><SourceLine endBytecode='462' classname='org.apache.dubbo.common.json.J2oVisitor' start='288' end='317' sourcepath='org/apache/dubbo/common/json/J2oVisitor.java' sourcefile='J2oVisitor.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.json.J2oVisitor.objectItemValue(Object, boolean)</Message></Method><SourceLine endBytecode='27' classname='org.apache.dubbo.common.json.J2oVisitor' start='290' end='290' sourcepath='org/apache/dubbo/common/json/J2oVisitor.java' sourcefile='J2oVisitor.java' startBytecode='27' primary='true'><Message>At J2oVisitor.java:[line 290]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='714cf31acfd9d6e4d687f3ba00a1e4b8' cweid='484' rank='17' abbrev='SF' category='STYLE' priority='2' type='SF_SWITCH_FALLTHROUGH' instanceOccurrenceMax='0'><ShortMessage>Switch statement found where one case falls through to the next case</ShortMessage><LongMessage>Switch statement found in org.apache.dubbo.common.json.JSONWriter.beforeObjectItem() where one case falls through to the next case</LongMessage><Class classname='org.apache.dubbo.common.json.JSONWriter' primary='true'><SourceLine classname='org.apache.dubbo.common.json.JSONWriter' start='35' end='293' sourcepath='org/apache/dubbo/common/json/JSONWriter.java' sourcefile='JSONWriter.java'><Message>At JSONWriter.java:[lines 35-293]</Message></SourceLine><Message>In class org.apache.dubbo.common.json.JSONWriter</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.json.JSONWriter' signature='()V' name='beforeObjectItem' primary='true'><SourceLine endBytecode='157' classname='org.apache.dubbo.common.json.JSONWriter' start='283' end='293' sourcepath='org/apache/dubbo/common/json/JSONWriter.java' sourcefile='JSONWriter.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.json.JSONWriter.beforeObjectItem()</Message></Method><SourceLine endBytecode='41' classname='org.apache.dubbo.common.json.JSONWriter' start='285' end='287' sourcepath='org/apache/dubbo/common/json/JSONWriter.java' sourcefile='JSONWriter.java' startBytecode='38' primary='true'><Message>At JSONWriter.java:[lines 285-287]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='ad794211cb8c11e57e72b46d0d2ce3a6' cweid='563' rank='17' abbrev='DLS' category='STYLE' priority='2' type='DLS_DEAD_LOCAL_STORE' instanceOccurrenceMax='0'><ShortMessage>Dead store to local variable</ShortMessage><LongMessage>Dead store to offset in org.apache.dubbo.common.json.Yylex.zzUnpackAction()</LongMessage><Class classname='org.apache.dubbo.common.json.Yylex' primary='true'><SourceLine classname='org.apache.dubbo.common.json.Yylex' start='48' end='840' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java'><Message>At Yylex.java:[lines 48-840]</Message></SourceLine><Message>In class org.apache.dubbo.common.json.Yylex</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.json.Yylex' signature='()[I' name='zzUnpackAction' primary='true'><SourceLine endBytecode='11' classname='org.apache.dubbo.common.json.Yylex' start='330' end='333' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.json.Yylex.zzUnpackAction()</Message></Method><LocalVariable role='LOCAL_VARIABLE_NAMED' pc='15' name='offset' register='1'><Message>Local variable named offset</Message></LocalVariable><SourceLine endBytecode='14' classname='org.apache.dubbo.common.json.Yylex' start='332' end='332' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java' startBytecode='14' primary='true'><Message>At Yylex.java:[line 332]</Message></SourceLine><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.BASE_VALUE' value='true'></Property><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME' value='offset'></Property><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.METHOD_RESULT' value='true'></Property><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.TWO_STORES_MULTIPLE_LOADS' value='true'></Property></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='89789960819a421bcb09bc5e6eca74ec' cweid='563' rank='17' abbrev='DLS' category='STYLE' priority='2' type='DLS_DEAD_LOCAL_STORE' instanceOccurrenceMax='0'><ShortMessage>Dead store to local variable</ShortMessage><LongMessage>Dead store to offset in org.apache.dubbo.common.json.Yylex.zzUnpackAttribute()</LongMessage><Class classname='org.apache.dubbo.common.json.Yylex' primary='true'><SourceLine classname='org.apache.dubbo.common.json.Yylex' start='48' end='840' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java'><Message>At Yylex.java:[lines 48-840]</Message></SourceLine><Message>In class org.apache.dubbo.common.json.Yylex</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.json.Yylex' signature='()[I' name='zzUnpackAttribute' primary='true'><SourceLine endBytecode='11' classname='org.apache.dubbo.common.json.Yylex' start='385' end='388' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.json.Yylex.zzUnpackAttribute()</Message></Method><LocalVariable role='LOCAL_VARIABLE_NAMED' pc='15' name='offset' register='1'><Message>Local variable named offset</Message></LocalVariable><SourceLine endBytecode='14' classname='org.apache.dubbo.common.json.Yylex' start='387' end='387' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java' startBytecode='14' primary='true'><Message>At Yylex.java:[line 387]</Message></SourceLine><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.BASE_VALUE' value='true'></Property><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME' value='offset'></Property><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.METHOD_RESULT' value='true'></Property><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.TWO_STORES_MULTIPLE_LOADS' value='true'></Property></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='92c32f381e2624a05064015d83e847fa' cweid='563' rank='17' abbrev='DLS' category='STYLE' priority='2' type='DLS_DEAD_LOCAL_STORE' instanceOccurrenceMax='0'><ShortMessage>Dead store to local variable</ShortMessage><LongMessage>Dead store to offset in org.apache.dubbo.common.json.Yylex.zzUnpackRowMap()</LongMessage><Class classname='org.apache.dubbo.common.json.Yylex' primary='true'><SourceLine classname='org.apache.dubbo.common.json.Yylex' start='48' end='840' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java'><Message>At Yylex.java:[lines 48-840]</Message></SourceLine><Message>In class org.apache.dubbo.common.json.Yylex</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.json.Yylex' signature='()[I' name='zzUnpackRowMap' primary='true'><SourceLine endBytecode='11' classname='org.apache.dubbo.common.json.Yylex' start='367' end='370' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.json.Yylex.zzUnpackRowMap()</Message></Method><LocalVariable role='LOCAL_VARIABLE_NAMED' pc='15' name='offset' register='1'><Message>Local variable named offset</Message></LocalVariable><SourceLine endBytecode='14' classname='org.apache.dubbo.common.json.Yylex' start='369' end='369' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java' startBytecode='14' primary='true'><Message>At Yylex.java:[line 369]</Message></SourceLine><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.BASE_VALUE' value='true'></Property><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME' value='offset'></Property><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.METHOD_RESULT' value='true'></Property><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.TWO_STORES_MULTIPLE_LOADS' value='true'></Property></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='72e43b8d820a43223cc714bfb2466a35' rank='19' abbrev='Dm' category='I18N' priority='1' type='DM_DEFAULT_ENCODING' instanceOccurrenceMax='0'><ShortMessage>Reliance on default encoding</ShortMessage><LongMessage>Found reliance on default encoding in new org.apache.dubbo.common.json.Yylex(InputStream): new java.io.InputStreamReader(InputStream)</LongMessage><Class classname='org.apache.dubbo.common.json.Yylex' primary='true'><SourceLine classname='org.apache.dubbo.common.json.Yylex' start='48' end='840' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java'><Message>At Yylex.java:[lines 48-840]</Message></SourceLine><Message>In class org.apache.dubbo.common.json.Yylex</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.json.Yylex' signature='(Ljava/io/InputStream;)V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='68' classname='org.apache.dubbo.common.json.Yylex' start='326' end='327' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java' startBytecode='0'></SourceLine><Message>In method new org.apache.dubbo.common.json.Yylex(InputStream)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.io.InputStreamReader' signature='(Ljava/io/InputStream;)V' name='&lt;init&gt;'><SourceLine endBytecode='108' classname='java.io.InputStreamReader' start='72' end='79' sourcepath='java/io/InputStreamReader.java' sourcefile='InputStreamReader.java' startBytecode='0'></SourceLine><Message>Called method new java.io.InputStreamReader(InputStream)</Message></Method><SourceLine endBytecode='6' classname='org.apache.dubbo.common.json.Yylex' start='326' end='326' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java' startBytecode='6' primary='true'><Message>At Yylex.java:[line 326]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='e49e46dd3d9062cdabd82bc8e53ae6f6' cweid='484' rank='20' abbrev='SF' category='STYLE' priority='3' type='SF_SWITCH_FALLTHROUGH' instanceOccurrenceMax='0'><ShortMessage>Switch statement found where one case falls through to the next case</ShortMessage><LongMessage>Switch statement found in org.apache.dubbo.common.json.Yylex.yylex() where one case falls through to the next case</LongMessage><Class classname='org.apache.dubbo.common.json.Yylex' primary='true'><SourceLine classname='org.apache.dubbo.common.json.Yylex' start='48' end='840' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java'><Message>At Yylex.java:[lines 48-840]</Message></SourceLine><Message>In class org.apache.dubbo.common.json.Yylex</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.json.Yylex' signature='()Lorg/apache/dubbo/common/json/JSONToken;' name='yylex' primary='true'><SourceLine endBytecode='1819' classname='org.apache.dubbo.common.json.Yylex' start='620' end='840' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.json.Yylex.yylex()</Message></Method><SourceLine endBytecode='510' classname='org.apache.dubbo.common.json.Yylex' start='692' end='695' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java' startBytecode='509' primary='true'><Message>At Yylex.java:[lines 692-695]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='523' classname='org.apache.dubbo.common.json.Yylex' start='697' end='700' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java' startBytecode='522'><Message>Another occurrence at Yylex.java:[lines 697-700]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='572' classname='org.apache.dubbo.common.json.Yylex' start='713' end='716' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java' startBytecode='571'><Message>Another occurrence at Yylex.java:[lines 713-716]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='613' classname='org.apache.dubbo.common.json.Yylex' start='728' end='731' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java' startBytecode='612'><Message>Another occurrence at Yylex.java:[lines 728-731]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='632' classname='org.apache.dubbo.common.json.Yylex' start='734' end='737' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java' startBytecode='629'><Message>Another occurrence at Yylex.java:[lines 734-737]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='674' classname='org.apache.dubbo.common.json.Yylex' start='749' end='752' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java' startBytecode='673'><Message>Another occurrence at Yylex.java:[lines 749-752]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='758' classname='org.apache.dubbo.common.json.Yylex' start='773' end='776' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java' startBytecode='757'><Message>Another occurrence at Yylex.java:[lines 773-776]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='784' classname='org.apache.dubbo.common.json.Yylex' start='783' end='786' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java' startBytecode='783'><Message>Another occurrence at Yylex.java:[lines 783-786]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='859' classname='org.apache.dubbo.common.json.Yylex' start='799' end='802' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java' startBytecode='858'><Message>Another occurrence at Yylex.java:[lines 799-802]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='909' classname='org.apache.dubbo.common.json.Yylex' start='815' end='818' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java' startBytecode='908'><Message>Another occurrence at Yylex.java:[lines 815-818]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='928' classname='org.apache.dubbo.common.json.Yylex' start='821' end='824' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java' startBytecode='925'><Message>Another occurrence at Yylex.java:[lines 821-824]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='941' classname='org.apache.dubbo.common.json.Yylex' start='826' end='829' sourcepath='org/apache/dubbo/common/json/Yylex.java' sourcefile='Yylex.java' startBytecode='940'><Message>Another occurrence at Yylex.java:[lines 826-829]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='1a42e684b60d4154b129bd7e0ed5d803' rank='16' abbrev='Se' category='BAD_PRACTICE' priority='2' type='SE_BAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage><LongMessage>Class org.apache.dubbo.common.logger.jcl.JclLogger defines non-transient non-serializable instance field logger</LongMessage><Class classname='org.apache.dubbo.common.logger.jcl.JclLogger' primary='true'><SourceLine classname='org.apache.dubbo.common.logger.jcl.JclLogger' start='35' end='136' sourcepath='org/apache/dubbo/common/logger/jcl/JclLogger.java' sourcefile='JclLogger.java'><Message>At JclLogger.java:[lines 35-136]</Message></SourceLine><Message>In class org.apache.dubbo.common.logger.jcl.JclLogger</Message></Class><Field isStatic='false' classname='org.apache.dubbo.common.logger.jcl.JclLogger' signature='Lorg/apache/commons/logging/Log;' name='logger' primary='true'><SourceLine classname='org.apache.dubbo.common.logger.jcl.JclLogger' sourcepath='org/apache/dubbo/common/logger/jcl/JclLogger.java' sourcefile='JclLogger.java'><Message>In JclLogger.java</Message></SourceLine><Message>Field org.apache.dubbo.common.logger.jcl.JclLogger.logger</Message></Field><Type role='TYPE_FOUND' descriptor='Lorg/apache/commons/logging/Log;'><SourceLine classname='org.apache.commons.logging.Log' sourcepath='org/apache/commons/logging/Log.java' sourcefile='Log.java'><Message>In Log.java</Message></SourceLine><Message>Actual type org.apache.commons.logging.Log</Message></Type><SourceLine synthetic='true' classname='org.apache.dubbo.common.logger.jcl.JclLogger' sourcepath='org/apache/dubbo/common/logger/jcl/JclLogger.java' sourcefile='JclLogger.java'><Message>In JclLogger.java</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='9faac92f9606ed3557a967c09b7331fb' rank='10' abbrev='LG' category='EXPERIMENTAL' priority='1' type='LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE' instanceOccurrenceMax='0'><ShortMessage>Potential lost logger changes due to weak reference in OpenJDK</ShortMessage><LongMessage>Changes to logger could be lost in org.apache.dubbo.common.logger.jdk.JdkLoggerAdapter.setLevel(Level)</LongMessage><Class classname='org.apache.dubbo.common.logger.jdk.JdkLoggerAdapter' primary='true'><SourceLine classname='org.apache.dubbo.common.logger.jdk.JdkLoggerAdapter' start='36' end='137' sourcepath='org/apache/dubbo/common/logger/jdk/JdkLoggerAdapter.java' sourcefile='JdkLoggerAdapter.java'><Message>At JdkLoggerAdapter.java:[lines 36-137]</Message></SourceLine><Message>In class org.apache.dubbo.common.logger.jdk.JdkLoggerAdapter</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.logger.jdk.JdkLoggerAdapter' signature='(Lorg/apache/dubbo/common/logger/Level;)V' name='setLevel' primary='true'><SourceLine endBytecode='68' classname='org.apache.dubbo.common.logger.jdk.JdkLoggerAdapter' start='126' end='127' sourcepath='org/apache/dubbo/common/logger/jdk/JdkLoggerAdapter.java' sourcefile='JdkLoggerAdapter.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.logger.jdk.JdkLoggerAdapter.setLevel(Level)</Message></Method><Method isStatic='true' role='METHOD_RETURN_VALUE_OF' classname='java.util.logging.Logger' signature='(Ljava/lang/String;)Ljava/util/logging/Logger;' name='getLogger'><SourceLine endBytecode='32' classname='java.util.logging.Logger' start='502' end='502' sourcepath='java/util/logging/Logger.java' sourcefile='Logger.java' startBytecode='0'></SourceLine><Message>Return value of java.util.logging.Logger.getLogger(String) of type java.util.logging.Logger</Message></Method><SourceLine endBytecode='9' classname='org.apache.dubbo.common.logger.jdk.JdkLoggerAdapter' start='126' end='126' sourcepath='org/apache/dubbo/common/logger/jdk/JdkLoggerAdapter.java' sourcefile='JdkLoggerAdapter.java' startBytecode='9' primary='true'><Message>At JdkLoggerAdapter.java:[line 126]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b6526dc52ac6393966540606a5962e5e' rank='20' abbrev='UPM' category='PERFORMANCE' priority='3' type='UPM_UNCALLED_PRIVATE_METHOD' instanceOccurrenceMax='0'><ShortMessage>Private method is never called</ShortMessage><LongMessage>Private method org.apache.dubbo.common.logger.log4j2.Log4j2LoggerAdapter.fromLog4j2Level(Level) is never called</LongMessage><Class classname='org.apache.dubbo.common.logger.log4j2.Log4j2LoggerAdapter' primary='true'><SourceLine classname='org.apache.dubbo.common.logger.log4j2.Log4j2LoggerAdapter' start='31' end='106' sourcepath='org/apache/dubbo/common/logger/log4j2/Log4j2LoggerAdapter.java' sourcefile='Log4j2LoggerAdapter.java'><Message>At Log4j2LoggerAdapter.java:[lines 31-106]</Message></SourceLine><Message>In class org.apache.dubbo.common.logger.log4j2.Log4j2LoggerAdapter</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.logger.log4j2.Log4j2LoggerAdapter' signature='(Lorg/apache/logging/log4j/Level;)Lorg/apache/dubbo/common/logger/Level;' name='fromLog4j2Level' primary='true'><SourceLine endBytecode='173' classname='org.apache.dubbo.common.logger.log4j2.Log4j2LoggerAdapter' start='58' end='76' sourcepath='org/apache/dubbo/common/logger/log4j2/Log4j2LoggerAdapter.java' sourcefile='Log4j2LoggerAdapter.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.logger.log4j2.Log4j2LoggerAdapter.fromLog4j2Level(Level)</Message></Method><SourceLine synthetic='true' endBytecode='173' classname='org.apache.dubbo.common.logger.log4j2.Log4j2LoggerAdapter' start='58' end='76' sourcepath='org/apache/dubbo/common/logger/log4j2/Log4j2LoggerAdapter.java' sourcefile='Log4j2LoggerAdapter.java' startBytecode='0'><Message>At Log4j2LoggerAdapter.java:[lines 58-76]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='3eaad9df1c231448db9952045517ed66' rank='20' abbrev='UPM' category='PERFORMANCE' priority='3' type='UPM_UNCALLED_PRIVATE_METHOD' instanceOccurrenceMax='0'><ShortMessage>Private method is never called</ShortMessage><LongMessage>Private method org.apache.dubbo.common.logger.log4j2.Log4j2LoggerAdapter.toLog4j2Level(Level) is never called</LongMessage><Class classname='org.apache.dubbo.common.logger.log4j2.Log4j2LoggerAdapter' primary='true'><SourceLine classname='org.apache.dubbo.common.logger.log4j2.Log4j2LoggerAdapter' start='31' end='106' sourcepath='org/apache/dubbo/common/logger/log4j2/Log4j2LoggerAdapter.java' sourcefile='Log4j2LoggerAdapter.java'><Message>At Log4j2LoggerAdapter.java:[lines 31-106]</Message></SourceLine><Message>In class org.apache.dubbo.common.logger.log4j2.Log4j2LoggerAdapter</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.logger.log4j2.Log4j2LoggerAdapter' signature='(Lorg/apache/dubbo/common/logger/Level;)Lorg/apache/logging/log4j/Level;' name='toLog4j2Level' primary='true'><SourceLine endBytecode='173' classname='org.apache.dubbo.common.logger.log4j2.Log4j2LoggerAdapter' start='36' end='54' sourcepath='org/apache/dubbo/common/logger/log4j2/Log4j2LoggerAdapter.java' sourcefile='Log4j2LoggerAdapter.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.logger.log4j2.Log4j2LoggerAdapter.toLog4j2Level(Level)</Message></Method><SourceLine synthetic='true' endBytecode='173' classname='org.apache.dubbo.common.logger.log4j2.Log4j2LoggerAdapter' start='36' end='54' sourcepath='org/apache/dubbo/common/logger/log4j2/Log4j2LoggerAdapter.java' sourcefile='Log4j2LoggerAdapter.java' startBytecode='0'><Message>At Log4j2LoggerAdapter.java:[lines 36-54]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='678185d32c90fd43410bc2a51d5987fc' rank='16' abbrev='Se' category='BAD_PRACTICE' priority='2' type='SE_BAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage><LongMessage>Class org.apache.dubbo.common.logger.slf4j.Slf4jLogger defines non-transient non-serializable instance field locationAwareLogger</LongMessage><Class classname='org.apache.dubbo.common.logger.slf4j.Slf4jLogger' primary='true'><SourceLine classname='org.apache.dubbo.common.logger.slf4j.Slf4jLogger' start='30' end='202' sourcepath='org/apache/dubbo/common/logger/slf4j/Slf4jLogger.java' sourcefile='Slf4jLogger.java'><Message>At Slf4jLogger.java:[lines 30-202]</Message></SourceLine><Message>In class org.apache.dubbo.common.logger.slf4j.Slf4jLogger</Message></Class><Field isStatic='false' classname='org.apache.dubbo.common.logger.slf4j.Slf4jLogger' signature='Lorg/slf4j/spi/LocationAwareLogger;' name='locationAwareLogger' primary='true'><SourceLine classname='org.apache.dubbo.common.logger.slf4j.Slf4jLogger' sourcepath='org/apache/dubbo/common/logger/slf4j/Slf4jLogger.java' sourcefile='Slf4jLogger.java'><Message>In Slf4jLogger.java</Message></SourceLine><Message>Field org.apache.dubbo.common.logger.slf4j.Slf4jLogger.locationAwareLogger</Message></Field><Type role='TYPE_FOUND' descriptor='Lorg/slf4j/spi/LocationAwareLogger;'><SourceLine classname='org.slf4j.spi.LocationAwareLogger' sourcepath='org/slf4j/spi/LocationAwareLogger.java' sourcefile='LocationAwareLogger.java'><Message>In LocationAwareLogger.java</Message></SourceLine><Message>Actual type org.slf4j.spi.LocationAwareLogger</Message></Type><SourceLine synthetic='true' classname='org.apache.dubbo.common.logger.slf4j.Slf4jLogger' sourcepath='org/apache/dubbo/common/logger/slf4j/Slf4jLogger.java' sourcefile='Slf4jLogger.java'><Message>In Slf4jLogger.java</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='e3866e0c0f0c9983654b928a0a1d85f7' rank='16' abbrev='Se' category='BAD_PRACTICE' priority='2' type='SE_BAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage><LongMessage>Class org.apache.dubbo.common.logger.slf4j.Slf4jLogger defines non-transient non-serializable instance field logger</LongMessage><Class classname='org.apache.dubbo.common.logger.slf4j.Slf4jLogger' primary='true'><SourceLine classname='org.apache.dubbo.common.logger.slf4j.Slf4jLogger' start='30' end='202' sourcepath='org/apache/dubbo/common/logger/slf4j/Slf4jLogger.java' sourcefile='Slf4jLogger.java'><Message>At Slf4jLogger.java:[lines 30-202]</Message></SourceLine><Message>In class org.apache.dubbo.common.logger.slf4j.Slf4jLogger</Message></Class><Field isStatic='false' classname='org.apache.dubbo.common.logger.slf4j.Slf4jLogger' signature='Lorg/slf4j/Logger;' name='logger' primary='true'><SourceLine classname='org.apache.dubbo.common.logger.slf4j.Slf4jLogger' sourcepath='org/apache/dubbo/common/logger/slf4j/Slf4jLogger.java' sourcefile='Slf4jLogger.java'><Message>In Slf4jLogger.java</Message></SourceLine><Message>Field org.apache.dubbo.common.logger.slf4j.Slf4jLogger.logger</Message></Field><Type role='TYPE_FOUND' descriptor='Lorg/slf4j/Logger;'><SourceLine classname='org.slf4j.Logger' sourcepath='org/slf4j/Logger.java' sourcefile='Logger.java'><Message>In Logger.java</Message></SourceLine><Message>Actual type org.slf4j.Logger</Message></Type><SourceLine synthetic='true' classname='org.apache.dubbo.common.logger.slf4j.Slf4jLogger' sourcepath='org/apache/dubbo/common/logger/slf4j/Slf4jLogger.java' sourcefile='Slf4jLogger.java'><Message>In Slf4jLogger.java</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='2b41a3623cd234b6652974ad19577d47' rank='20' abbrev='Dm' category='I18N' priority='3' type='DM_CONVERT_CASE' instanceOccurrenceMax='0'><ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage><LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.dubbo.common.threadpool.support.AbortPolicyWithReport.lambda$dumpJStack$0()</LongMessage><Class classname='org.apache.dubbo.common.threadpool.support.AbortPolicyWithReport' primary='true'><SourceLine classname='org.apache.dubbo.common.threadpool.support.AbortPolicyWithReport' start='42' end='124' sourcepath='org/apache/dubbo/common/threadpool/support/AbortPolicyWithReport.java' sourcefile='AbortPolicyWithReport.java'><Message>At AbortPolicyWithReport.java:[lines 42-124]</Message></SourceLine><Message>In class org.apache.dubbo.common.threadpool.support.AbortPolicyWithReport</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.threadpool.support.AbortPolicyWithReport' signature='()V' name='lambda$dumpJStack$0' primary='true'><SourceLine endBytecode='659' classname='org.apache.dubbo.common.threadpool.support.AbortPolicyWithReport' start='96' end='120' sourcepath='org/apache/dubbo/common/threadpool/support/AbortPolicyWithReport.java' sourcefile='AbortPolicyWithReport.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.threadpool.support.AbortPolicyWithReport.lambda$dumpJStack$0()</Message></Method><SourceLine endBytecode='20' classname='org.apache.dubbo.common.threadpool.support.AbortPolicyWithReport' start='100' end='100' sourcepath='org/apache/dubbo/common/threadpool/support/AbortPolicyWithReport.java' sourcefile='AbortPolicyWithReport.java' startBytecode='20' primary='true'><Message>At AbortPolicyWithReport.java:[line 100]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f6607a09d77363fb5aa18d02e3fe54fa' rank='16' abbrev='Se' category='BAD_PRACTICE' priority='2' type='SE_BAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage><LongMessage>Class org.apache.dubbo.common.threadpool.support.eager.TaskQueue defines non-transient non-serializable instance field executor</LongMessage><Class classname='org.apache.dubbo.common.threadpool.support.eager.TaskQueue' primary='true'><SourceLine classname='org.apache.dubbo.common.threadpool.support.eager.TaskQueue' start='31' end='77' sourcepath='org/apache/dubbo/common/threadpool/support/eager/TaskQueue.java' sourcefile='TaskQueue.java'><Message>At TaskQueue.java:[lines 31-77]</Message></SourceLine><Message>In class org.apache.dubbo.common.threadpool.support.eager.TaskQueue</Message></Class><Field isStatic='false' classname='org.apache.dubbo.common.threadpool.support.eager.TaskQueue' signature='Lorg/apache/dubbo/common/threadpool/support/eager/EagerThreadPoolExecutor;' name='executor' primary='true'><SourceLine classname='org.apache.dubbo.common.threadpool.support.eager.TaskQueue' sourcepath='org/apache/dubbo/common/threadpool/support/eager/TaskQueue.java' sourcefile='TaskQueue.java'><Message>In TaskQueue.java</Message></SourceLine><Message>Field org.apache.dubbo.common.threadpool.support.eager.TaskQueue.executor</Message></Field><Type role='TYPE_FOUND' descriptor='Lorg/apache/dubbo/common/threadpool/support/eager/EagerThreadPoolExecutor;'><SourceLine classname='org.apache.dubbo.common.threadpool.support.eager.EagerThreadPoolExecutor' start='35' end='84' sourcepath='org/apache/dubbo/common/threadpool/support/eager/EagerThreadPoolExecutor.java' sourcefile='EagerThreadPoolExecutor.java'><Message>At EagerThreadPoolExecutor.java:[lines 35-84]</Message></SourceLine><Message>Actual type org.apache.dubbo.common.threadpool.support.eager.EagerThreadPoolExecutor</Message></Type><SourceLine synthetic='true' classname='org.apache.dubbo.common.threadpool.support.eager.TaskQueue' sourcepath='org/apache/dubbo/common/threadpool/support/eager/TaskQueue.java' sourcefile='TaskQueue.java'><Message>In TaskQueue.java</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='4037ec013fc6221b44fd91315e52ba20' rank='20' abbrev='UwF' category='STYLE' priority='3' type='UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR' instanceOccurrenceMax='0'><ShortMessage>Field not initialized in constructor but dereferenced without null check</ShortMessage><LongMessage>TaskQueue.executor not initialized in constructor and dereferenced in org.apache.dubbo.common.threadpool.support.eager.TaskQueue.retryOffer(Runnable, long, TimeUnit)</LongMessage><Class classname='org.apache.dubbo.common.threadpool.support.eager.TaskQueue' primary='true'><SourceLine classname='org.apache.dubbo.common.threadpool.support.eager.TaskQueue' start='31' end='77' sourcepath='org/apache/dubbo/common/threadpool/support/eager/TaskQueue.java' sourcefile='TaskQueue.java'><Message>At TaskQueue.java:[lines 31-77]</Message></SourceLine><Message>In class org.apache.dubbo.common.threadpool.support.eager.TaskQueue</Message></Class><Field isStatic='false' classname='org.apache.dubbo.common.threadpool.support.eager.TaskQueue' signature='Lorg/apache/dubbo/common/threadpool/support/eager/EagerThreadPoolExecutor;' name='executor' primary='true'><SourceLine classname='org.apache.dubbo.common.threadpool.support.eager.TaskQueue' sourcepath='org/apache/dubbo/common/threadpool/support/eager/TaskQueue.java' sourcefile='TaskQueue.java'><Message>In TaskQueue.java</Message></SourceLine><Message>Field org.apache.dubbo.common.threadpool.support.eager.TaskQueue.executor</Message></Field><Method isStatic='false' classname='org.apache.dubbo.common.threadpool.support.eager.TaskQueue' signature='(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Z' name='retryOffer' primary='true'><SourceLine endBytecode='135' classname='org.apache.dubbo.common.threadpool.support.eager.TaskQueue' start='74' end='77' sourcepath='org/apache/dubbo/common/threadpool/support/eager/TaskQueue.java' sourcefile='TaskQueue.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.threadpool.support.eager.TaskQueue.retryOffer(Runnable, long, TimeUnit)</Message></Method><SourceLine endBytecode='4' classname='org.apache.dubbo.common.threadpool.support.eager.TaskQueue' start='74' end='74' sourcepath='org/apache/dubbo/common/threadpool/support/eager/TaskQueue.java' sourcefile='TaskQueue.java' startBytecode='4' primary='true'><Message>At TaskQueue.java:[line 74]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='bb2343c7a2a4a660e02bb245e5633476' rank='18' abbrev='Dm' category='PERFORMANCE' priority='2' type='DM_BOOLEAN_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient Boolean constructor; use Boolean.valueOf(...) instead</ShortMessage><LongMessage>org.apache.dubbo.common.utils.CompatibleTypeUtils.compatibleTypeConvert(Object, Class) invokes inefficient Boolean constructor; use Boolean.valueOf(...) instead</LongMessage><Class classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' start='35' end='174' sourcepath='org/apache/dubbo/common/utils/CompatibleTypeUtils.java' sourcefile='CompatibleTypeUtils.java'><Message>At CompatibleTypeUtils.java:[lines 35-174]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.CompatibleTypeUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' signature='(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;' name='compatibleTypeConvert' primary='true'><SourceLine endBytecode='1837' classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' start='51' end='174' sourcepath='org/apache/dubbo/common/utils/CompatibleTypeUtils.java' sourcefile='CompatibleTypeUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.CompatibleTypeUtils.compatibleTypeConvert(Object, Class)</Message></Method><SourceLine endBytecode='283' classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' start='81' end='81' sourcepath='org/apache/dubbo/common/utils/CompatibleTypeUtils.java' sourcefile='CompatibleTypeUtils.java' startBytecode='283' primary='true'><Message>At CompatibleTypeUtils.java:[line 81]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='4825351482b21effa6917e3bc96bb119' rank='20' abbrev='Bx' category='PERFORMANCE' priority='3' type='DM_FP_NUMBER_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortMessage><LongMessage>org.apache.dubbo.common.utils.CompatibleTypeUtils.compatibleTypeConvert(Object, Class) invokes inefficient new Double(String) constructor; use Double.valueOf(String) instead</LongMessage><Class classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' start='35' end='174' sourcepath='org/apache/dubbo/common/utils/CompatibleTypeUtils.java' sourcefile='CompatibleTypeUtils.java'><Message>At CompatibleTypeUtils.java:[lines 35-174]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.CompatibleTypeUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' signature='(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;' name='compatibleTypeConvert' primary='true'><SourceLine endBytecode='1837' classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' start='51' end='174' sourcepath='org/apache/dubbo/common/utils/CompatibleTypeUtils.java' sourcefile='CompatibleTypeUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.CompatibleTypeUtils.compatibleTypeConvert(Object, Class)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.Double' signature='(Ljava/lang/String;)V' name='&lt;init&gt;'><SourceLine endBytecode='44' classname='java.lang.Double' start='607' end='609' sourcepath='java/lang/Double.java' sourcefile='Double.java' startBytecode='0'></SourceLine><Message>Called method new Double(String)</Message></Method><Method isStatic='true' role='SHOULD_CALL' classname='java.lang.Double' signature='(Ljava/lang/String;)Ljava/lang/Double;' name='valueOf'><SourceLine endBytecode='35' classname='java.lang.Double' start='502' end='502' sourcepath='java/lang/Double.java' sourcefile='Double.java' startBytecode='0'></SourceLine><Message>Should call Double.valueOf(String) instead</Message></Method><SourceLine endBytecode='217' classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' start='75' end='75' sourcepath='org/apache/dubbo/common/utils/CompatibleTypeUtils.java' sourcefile='CompatibleTypeUtils.java' startBytecode='217' primary='true'><Message>At CompatibleTypeUtils.java:[line 75]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c64342dc9176205b2141ad5ebbb7b9fc' rank='20' abbrev='Bx' category='PERFORMANCE' priority='3' type='DM_FP_NUMBER_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortMessage><LongMessage>org.apache.dubbo.common.utils.CompatibleTypeUtils.compatibleTypeConvert(Object, Class) invokes inefficient new Float(String) constructor; use Float.valueOf(String) instead</LongMessage><Class classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' start='35' end='174' sourcepath='org/apache/dubbo/common/utils/CompatibleTypeUtils.java' sourcefile='CompatibleTypeUtils.java'><Message>At CompatibleTypeUtils.java:[lines 35-174]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.CompatibleTypeUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' signature='(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;' name='compatibleTypeConvert' primary='true'><SourceLine endBytecode='1837' classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' start='51' end='174' sourcepath='org/apache/dubbo/common/utils/CompatibleTypeUtils.java' sourcefile='CompatibleTypeUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.CompatibleTypeUtils.compatibleTypeConvert(Object, Class)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.Float' signature='(Ljava/lang/String;)V' name='&lt;init&gt;'><SourceLine endBytecode='44' classname='java.lang.Float' start='531' end='533' sourcepath='java/lang/Float.java' sourcefile='Float.java' startBytecode='0'></SourceLine><Message>Called method new Float(String)</Message></Method><Method isStatic='true' role='SHOULD_CALL' classname='java.lang.Float' signature='(Ljava/lang/String;)Ljava/lang/Float;' name='valueOf'><SourceLine endBytecode='35' classname='java.lang.Float' start='416' end='416' sourcepath='java/lang/Float.java' sourcefile='Float.java' startBytecode='0'></SourceLine><Message>Should call Float.valueOf(String) instead</Message></Method><SourceLine endBytecode='239' classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' start='77' end='77' sourcepath='org/apache/dubbo/common/utils/CompatibleTypeUtils.java' sourcefile='CompatibleTypeUtils.java' startBytecode='239' primary='true'><Message>At CompatibleTypeUtils.java:[line 77]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='51d3205d1eae9fbc3b47a5d932fa7b2b' rank='18' abbrev='Bx' category='PERFORMANCE' priority='2' type='DM_NUMBER_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage><LongMessage>org.apache.dubbo.common.utils.CompatibleTypeUtils.compatibleTypeConvert(Object, Class) invokes inefficient new Byte(String) constructor; use Byte.valueOf(String) instead</LongMessage><Class classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' start='35' end='174' sourcepath='org/apache/dubbo/common/utils/CompatibleTypeUtils.java' sourcefile='CompatibleTypeUtils.java'><Message>At CompatibleTypeUtils.java:[lines 35-174]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.CompatibleTypeUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' signature='(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;' name='compatibleTypeConvert' primary='true'><SourceLine endBytecode='1837' classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' start='51' end='174' sourcepath='org/apache/dubbo/common/utils/CompatibleTypeUtils.java' sourcefile='CompatibleTypeUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.CompatibleTypeUtils.compatibleTypeConvert(Object, Class)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.Byte' signature='(Ljava/lang/String;)V' name='&lt;init&gt;'><SourceLine endBytecode='46' classname='java.lang.Byte' start='315' end='317' sourcepath='java/lang/Byte.java' sourcefile='Byte.java' startBytecode='0'></SourceLine><Message>Called method new Byte(String)</Message></Method><Method isStatic='true' role='SHOULD_CALL' classname='java.lang.Byte' signature='(Ljava/lang/String;)Ljava/lang/Byte;' name='valueOf'><SourceLine endBytecode='30' classname='java.lang.Byte' start='231' end='231' sourcepath='java/lang/Byte.java' sourcefile='Byte.java' startBytecode='0'></SourceLine><Message>Should call Byte.valueOf(String) instead</Message></Method><SourceLine endBytecode='261' classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' start='79' end='79' sourcepath='org/apache/dubbo/common/utils/CompatibleTypeUtils.java' sourcefile='CompatibleTypeUtils.java' startBytecode='261' primary='true'><Message>At CompatibleTypeUtils.java:[line 79]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='6d399e811baf68ea9c384bdbec41afcd' rank='18' abbrev='Bx' category='PERFORMANCE' priority='2' type='DM_NUMBER_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage><LongMessage>org.apache.dubbo.common.utils.CompatibleTypeUtils.compatibleTypeConvert(Object, Class) invokes inefficient new Integer(String) constructor; use Integer.valueOf(String) instead</LongMessage><Class classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' start='35' end='174' sourcepath='org/apache/dubbo/common/utils/CompatibleTypeUtils.java' sourcefile='CompatibleTypeUtils.java'><Message>At CompatibleTypeUtils.java:[lines 35-174]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.CompatibleTypeUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' signature='(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;' name='compatibleTypeConvert' primary='true'><SourceLine endBytecode='1837' classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' start='51' end='174' sourcepath='org/apache/dubbo/common/utils/CompatibleTypeUtils.java' sourcefile='CompatibleTypeUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.CompatibleTypeUtils.compatibleTypeConvert(Object, Class)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.Integer' signature='(Ljava/lang/String;)V' name='&lt;init&gt;'><SourceLine endBytecode='46' classname='java.lang.Integer' start='866' end='868' sourcepath='java/lang/Integer.java' sourcefile='Integer.java' startBytecode='0'></SourceLine><Message>Called method new Integer(String)</Message></Method><Method isStatic='true' role='SHOULD_CALL' classname='java.lang.Integer' signature='(Ljava/lang/String;)Ljava/lang/Integer;' name='valueOf'><SourceLine endBytecode='33' classname='java.lang.Integer' start='766' end='766' sourcepath='java/lang/Integer.java' sourcefile='Integer.java' startBytecode='0'></SourceLine><Message>Should call Integer.valueOf(String) instead</Message></Method><SourceLine endBytecode='173' classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' start='71' end='71' sourcepath='org/apache/dubbo/common/utils/CompatibleTypeUtils.java' sourcefile='CompatibleTypeUtils.java' startBytecode='173' primary='true'><Message>At CompatibleTypeUtils.java:[line 71]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='2ce0a35016da08cf6d4803bf02548063' rank='18' abbrev='Bx' category='PERFORMANCE' priority='2' type='DM_NUMBER_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage><LongMessage>org.apache.dubbo.common.utils.CompatibleTypeUtils.compatibleTypeConvert(Object, Class) invokes inefficient new Long(String) constructor; use Long.valueOf(String) instead</LongMessage><Class classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' start='35' end='174' sourcepath='org/apache/dubbo/common/utils/CompatibleTypeUtils.java' sourcefile='CompatibleTypeUtils.java'><Message>At CompatibleTypeUtils.java:[lines 35-174]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.CompatibleTypeUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' signature='(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;' name='compatibleTypeConvert' primary='true'><SourceLine endBytecode='1837' classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' start='51' end='174' sourcepath='org/apache/dubbo/common/utils/CompatibleTypeUtils.java' sourcefile='CompatibleTypeUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.CompatibleTypeUtils.compatibleTypeConvert(Object, Class)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.Long' signature='(Ljava/lang/String;)V' name='&lt;init&gt;'><SourceLine endBytecode='46' classname='java.lang.Long' start='964' end='966' sourcepath='java/lang/Long.java' sourcefile='Long.java' startBytecode='0'></SourceLine><Message>Called method new Long(String)</Message></Method><Method isStatic='true' role='SHOULD_CALL' classname='java.lang.Long' signature='(Ljava/lang/String;)Ljava/lang/Long;' name='valueOf'><SourceLine endBytecode='33' classname='java.lang.Long' start='803' end='803' sourcepath='java/lang/Long.java' sourcefile='Long.java' startBytecode='0'></SourceLine><Message>Should call Long.valueOf(String) instead</Message></Method><SourceLine endBytecode='195' classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' start='73' end='73' sourcepath='org/apache/dubbo/common/utils/CompatibleTypeUtils.java' sourcefile='CompatibleTypeUtils.java' startBytecode='195' primary='true'><Message>At CompatibleTypeUtils.java:[line 73]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='7df55f92e1b2a4930c4b1347ff86a851' rank='18' abbrev='Bx' category='PERFORMANCE' priority='2' type='DM_NUMBER_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage><LongMessage>org.apache.dubbo.common.utils.CompatibleTypeUtils.compatibleTypeConvert(Object, Class) invokes inefficient new Short(String) constructor; use Short.valueOf(String) instead</LongMessage><Class classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' start='35' end='174' sourcepath='org/apache/dubbo/common/utils/CompatibleTypeUtils.java' sourcefile='CompatibleTypeUtils.java'><Message>At CompatibleTypeUtils.java:[lines 35-174]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.CompatibleTypeUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' signature='(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;' name='compatibleTypeConvert' primary='true'><SourceLine endBytecode='1837' classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' start='51' end='174' sourcepath='org/apache/dubbo/common/utils/CompatibleTypeUtils.java' sourcefile='CompatibleTypeUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.CompatibleTypeUtils.compatibleTypeConvert(Object, Class)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.Short' signature='(Ljava/lang/String;)V' name='&lt;init&gt;'><SourceLine endBytecode='46' classname='java.lang.Short' start='320' end='322' sourcepath='java/lang/Short.java' sourcefile='Short.java' startBytecode='0'></SourceLine><Message>Called method new Short(String)</Message></Method><Method isStatic='true' role='SHOULD_CALL' classname='java.lang.Short' signature='(Ljava/lang/String;)Ljava/lang/Short;' name='valueOf'><SourceLine endBytecode='30' classname='java.lang.Short' start='200' end='200' sourcepath='java/lang/Short.java' sourcefile='Short.java' startBytecode='0'></SourceLine><Message>Should call Short.valueOf(String) instead</Message></Method><SourceLine endBytecode='151' classname='org.apache.dubbo.common.utils.CompatibleTypeUtils' start='69' end='69' sourcepath='org/apache/dubbo/common/utils/CompatibleTypeUtils.java' sourcefile='CompatibleTypeUtils.java' startBytecode='151' primary='true'><Message>At CompatibleTypeUtils.java:[line 69]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='fd3258352b4f461bf3c08134ffbf5517' rank='20' abbrev='RI' category='STYLE' priority='3' type='RI_REDUNDANT_INTERFACES' instanceOccurrenceMax='0'><ShortMessage>Class implements same interface as superclass</ShortMessage><LongMessage>Class org.apache.dubbo.common.utils.ConcurrentHashSet implements same interface as superclass</LongMessage><Class classname='org.apache.dubbo.common.utils.ConcurrentHashSet' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.ConcurrentHashSet' start='30' end='128' sourcepath='org/apache/dubbo/common/utils/ConcurrentHashSet.java' sourcefile='ConcurrentHashSet.java'><Message>At ConcurrentHashSet.java:[lines 30-128]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.ConcurrentHashSet</Message></Class><Class role='INTERFACE_TYPE' classname='java.util.Set'><SourceLine classname='java.util.Set' start='411' end='411' sourcepath='java/util/Set.java' sourcefile='Set.java'><Message>At Set.java:[line 411]</Message></SourceLine><Message>Interface java.util.Set</Message></Class><SourceLine synthetic='true' classname='org.apache.dubbo.common.utils.ConcurrentHashSet' start='30' end='128' sourcepath='org/apache/dubbo/common/utils/ConcurrentHashSet.java' sourcefile='ConcurrentHashSet.java'><Message>At ConcurrentHashSet.java:[lines 30-128]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='dab958bd965f74d6a7a1e546636f2de6' cweid='218' rank='18' abbrev='MS' category='MALICIOUS_CODE' priority='2' type='MS_PKGPROTECT' instanceOccurrenceMax='0'><ShortMessage>Field should be package protected</ShortMessage><LongMessage>org.apache.dubbo.common.utils.DubboAppender.available should be package protected</LongMessage><Class classname='org.apache.dubbo.common.utils.DubboAppender' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.DubboAppender' start='30' end='65' sourcepath='org/apache/dubbo/common/utils/DubboAppender.java' sourcefile='DubboAppender.java'><Message>At DubboAppender.java:[lines 30-65]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.DubboAppender</Message></Class><Field isStatic='true' classname='org.apache.dubbo.common.utils.DubboAppender' signature='Z' name='available' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.DubboAppender' sourcepath='org/apache/dubbo/common/utils/DubboAppender.java' sourcefile='DubboAppender.java'><Message>In DubboAppender.java</Message></SourceLine><Message>Field org.apache.dubbo.common.utils.DubboAppender.available</Message></Field><SourceLine endBytecode='1' classname='org.apache.dubbo.common.utils.DubboAppender' start='34' end='34' sourcepath='org/apache/dubbo/common/utils/DubboAppender.java' sourcefile='DubboAppender.java' startBytecode='1' primary='true'><Message>At DubboAppender.java:[line 34]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='5c944ef80545aa34bdea7133d82fc063' cweid='218' rank='16' abbrev='MS' category='MALICIOUS_CODE' priority='1' type='MS_SHOULD_BE_FINAL' instanceOccurrenceMax='0'><ShortMessage>Field isn't final but should be</ShortMessage><LongMessage>org.apache.dubbo.common.utils.DubboAppender.logList isn't final but should be</LongMessage><Class classname='org.apache.dubbo.common.utils.DubboAppender' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.DubboAppender' start='30' end='65' sourcepath='org/apache/dubbo/common/utils/DubboAppender.java' sourcefile='DubboAppender.java'><Message>At DubboAppender.java:[lines 30-65]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.DubboAppender</Message></Class><Field isStatic='true' classname='org.apache.dubbo.common.utils.DubboAppender' signature='Ljava/util/List;' name='logList' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.DubboAppender' sourcepath='org/apache/dubbo/common/utils/DubboAppender.java' sourcefile='DubboAppender.java'><Message>In DubboAppender.java</Message></SourceLine><Message>Field org.apache.dubbo.common.utils.DubboAppender.logList</Message></Field><SourceLine endBytecode='11' classname='org.apache.dubbo.common.utils.DubboAppender' start='36' end='36' sourcepath='org/apache/dubbo/common/utils/DubboAppender.java' sourcefile='DubboAppender.java' startBytecode='11' primary='true'><Message>At DubboAppender.java:[line 36]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='4826c6ae2541fdd53ebf5608da7ae9be' rank='19' abbrev='Dm' category='I18N' priority='1' type='DM_DEFAULT_ENCODING' instanceOccurrenceMax='0'><ShortMessage>Reliance on default encoding</ShortMessage><LongMessage>Found reliance on default encoding in org.apache.dubbo.common.utils.IOUtils.readLines(InputStream): new java.io.InputStreamReader(InputStream)</LongMessage><Class classname='org.apache.dubbo.common.utils.IOUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.IOUtils' start='39' end='223' sourcepath='org/apache/dubbo/common/utils/IOUtils.java' sourcefile='IOUtils.java'><Message>At IOUtils.java:[lines 39-223]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.IOUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.IOUtils' signature='(Ljava/io/InputStream;)[Ljava/lang/String;' name='readLines' primary='true'><SourceLine endBytecode='254' classname='org.apache.dubbo.common.utils.IOUtils' start='165' end='175' sourcepath='org/apache/dubbo/common/utils/IOUtils.java' sourcefile='IOUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.IOUtils.readLines(InputStream)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.io.InputStreamReader' signature='(Ljava/io/InputStream;)V' name='&lt;init&gt;'><SourceLine endBytecode='108' classname='java.io.InputStreamReader' start='72' end='79' sourcepath='java/io/InputStreamReader.java' sourcefile='InputStreamReader.java' startBytecode='0'></SourceLine><Message>Called method new java.io.InputStreamReader(InputStream)</Message></Method><SourceLine endBytecode='17' classname='org.apache.dubbo.common.utils.IOUtils' start='166' end='166' sourcepath='org/apache/dubbo/common/utils/IOUtils.java' sourcefile='IOUtils.java' startBytecode='17' primary='true'><Message>At IOUtils.java:[line 166]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='328f3d80c0673775657548b9216de8fa' rank='19' abbrev='Dm' category='I18N' priority='1' type='DM_DEFAULT_ENCODING' instanceOccurrenceMax='0'><ShortMessage>Reliance on default encoding</ShortMessage><LongMessage>Found reliance on default encoding in org.apache.dubbo.common.utils.IOUtils.writeLines(OutputStream, String[]): new java.io.OutputStreamWriter(OutputStream)</LongMessage><Class classname='org.apache.dubbo.common.utils.IOUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.IOUtils' start='39' end='223' sourcepath='org/apache/dubbo/common/utils/IOUtils.java' sourcefile='IOUtils.java'><Message>At IOUtils.java:[lines 39-223]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.IOUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.IOUtils' signature='(Ljava/io/OutputStream;[Ljava/lang/String;)V' name='writeLines' primary='true'><SourceLine endBytecode='231' classname='org.apache.dubbo.common.utils.IOUtils' start='186' end='195' sourcepath='org/apache/dubbo/common/utils/IOUtils.java' sourcefile='IOUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.IOUtils.writeLines(OutputStream, String[])</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.io.OutputStreamWriter' signature='(Ljava/io/OutputStream;)V' name='&lt;init&gt;'><SourceLine endBytecode='108' classname='java.io.OutputStreamWriter' start='109' end='115' sourcepath='java/io/OutputStreamWriter.java' sourcefile='OutputStreamWriter.java' startBytecode='0'></SourceLine><Message>Called method new java.io.OutputStreamWriter(OutputStream)</Message></Method><SourceLine endBytecode='9' classname='org.apache.dubbo.common.utils.IOUtils' start='186' end='186' sourcepath='org/apache/dubbo/common/utils/IOUtils.java' sourcefile='IOUtils.java' startBytecode='9' primary='true'><Message>At IOUtils.java:[line 186]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='d0e9d8261e48d14c31a6b43cebacb7ac' rank='20' abbrev='DB' category='STYLE' priority='3' type='DB_DUPLICATE_SWITCH_CLAUSES' instanceOccurrenceMax='0'><ShortMessage>Method uses the same code for two switch clauses</ShortMessage><LongMessage>org.apache.dubbo.common.utils.JVMUtil.getThreadDumpString(ThreadInfo) uses the same code for two switch clauses</LongMessage><Class classname='org.apache.dubbo.common.utils.JVMUtil' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.JVMUtil' start='26' end='101' sourcepath='org/apache/dubbo/common/utils/JVMUtil.java' sourcefile='JVMUtil.java'><Message>At JVMUtil.java:[lines 26-101]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.JVMUtil</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.JVMUtil' signature='(Ljava/lang/management/ThreadInfo;)Ljava/lang/String;' name='getThreadDumpString' primary='true'><SourceLine endBytecode='1057' classname='org.apache.dubbo.common.utils.JVMUtil' start='35' end='101' sourcepath='org/apache/dubbo/common/utils/JVMUtil.java' sourcefile='JVMUtil.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.JVMUtil.getThreadDumpString(ThreadInfo)</Message></Method><SourceLine endBytecode='361' classname='org.apache.dubbo.common.utils.JVMUtil' start='68' end='70' sourcepath='org/apache/dubbo/common/utils/JVMUtil.java' sourcefile='JVMUtil.java' startBytecode='325' primary='true'><Message>At JVMUtil.java:[lines 68-70]</Message></SourceLine><SourceLine endBytecode='398' classname='org.apache.dubbo.common.utils.JVMUtil' start='72' end='74' sourcepath='org/apache/dubbo/common/utils/JVMUtil.java' sourcefile='JVMUtil.java' startBytecode='362'><Message>At JVMUtil.java:[lines 72-74]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b4f205f8244544ab89b8563d50eebf55' rank='19' abbrev='Dm' category='I18N' priority='1' type='DM_DEFAULT_ENCODING' instanceOccurrenceMax='0'><ShortMessage>Reliance on default encoding</ShortMessage><LongMessage>Found reliance on default encoding in org.apache.dubbo.common.utils.JVMUtil.jstack(OutputStream): String.getBytes()</LongMessage><Class classname='org.apache.dubbo.common.utils.JVMUtil' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.JVMUtil' start='26' end='101' sourcepath='org/apache/dubbo/common/utils/JVMUtil.java' sourcefile='JVMUtil.java'><Message>At JVMUtil.java:[lines 26-101]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.JVMUtil</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.JVMUtil' signature='(Ljava/io/OutputStream;)V' name='jstack' primary='true'><SourceLine endBytecode='156' classname='org.apache.dubbo.common.utils.JVMUtil' start='28' end='32' sourcepath='org/apache/dubbo/common/utils/JVMUtil.java' sourcefile='JVMUtil.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.JVMUtil.jstack(OutputStream)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.String' signature='()[B' name='getBytes'><SourceLine endBytecode='37' classname='java.lang.String' start='958' end='958' sourcepath='java/lang/String.java' sourcefile='String.java' startBytecode='0'></SourceLine><Message>Called method String.getBytes()</Message></Method><SourceLine endBytecode='37' classname='org.apache.dubbo.common.utils.JVMUtil' start='30' end='30' sourcepath='org/apache/dubbo/common/utils/JVMUtil.java' sourcefile='JVMUtil.java' startBytecode='37' primary='true'><Message>At JVMUtil.java:[line 30]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='240b0e589c04321ca28b640b855a29ce' rank='19' abbrev='Nm' category='BAD_PRACTICE' priority='3' type='NM_FIELD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Field names should start with a lower case letter</ShortMessage><LongMessage>The field name org.apache.dubbo.common.utils.LogUtil.Log doesn't start with a lower case letter</LongMessage><Class classname='org.apache.dubbo.common.utils.LogUtil' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.LogUtil' start='27' end='130' sourcepath='org/apache/dubbo/common/utils/LogUtil.java' sourcefile='LogUtil.java'><Message>At LogUtil.java:[lines 27-130]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.LogUtil</Message></Class><Field isStatic='true' classname='org.apache.dubbo.common.utils.LogUtil' signature='Lorg/apache/dubbo/common/logger/Logger;' name='Log' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.LogUtil' sourcepath='org/apache/dubbo/common/utils/LogUtil.java' sourcefile='LogUtil.java'><Message>In LogUtil.java</Message></SourceLine><Message>Field org.apache.dubbo.common.utils.LogUtil.Log</Message></Field><SourceLine synthetic='true' classname='org.apache.dubbo.common.utils.LogUtil' sourcepath='org/apache/dubbo/common/utils/LogUtil.java' sourcefile='LogUtil.java'><Message>In LogUtil.java</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='6066a28759729c102c541078956fa180' cweid='391' rank='19' abbrev='DE' category='BAD_PRACTICE' priority='3' type='DE_MIGHT_IGNORE' instanceOccurrenceMax='0'><ShortMessage>Method might ignore exception</ShortMessage><LongMessage>org.apache.dubbo.common.utils.PojoUtils.createMap(Map) might ignore java.lang.Exception</LongMessage><Class classname='org.apache.dubbo.common.utils.PojoUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.PojoUtils' start='62' end='624' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java'><Message>At PojoUtils.java:[lines 62-624]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.PojoUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.PojoUtils' signature='(Ljava/util/Map;)Ljava/util/Map;' name='createMap' primary='true'><SourceLine endBytecode='486' classname='org.apache.dubbo.common.utils.PojoUtils' start='257' end='294' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.PojoUtils.createMap(Map)</Message></Method><Class role='CLASS_EXCEPTION' classname='java.lang.Exception'><SourceLine classname='java.lang.Exception' start='54' end='123' sourcepath='java/lang/Exception.java' sourcefile='Exception.java'><Message>At Exception.java:[lines 54-123]</Message></SourceLine><Message>Exception class java.lang.Exception</Message></Class><SourceLine endBytecode='168' classname='org.apache.dubbo.common.utils.PojoUtils' start='280' end='280' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java' startBytecode='168' primary='true'><Message>At PojoUtils.java:[line 280]</Message></SourceLine><SourceLine endBytecode='168' classname='org.apache.dubbo.common.utils.PojoUtils' start='280' end='280' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java' startBytecode='168' primary='true'><Message>At PojoUtils.java:[line 280]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='7248b6603cb603ca28ba1b5999525d0f' rank='20' abbrev='Dm' category='I18N' priority='3' type='DM_CONVERT_CASE' instanceOccurrenceMax='0'><ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage><LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.dubbo.common.utils.PojoUtils.getSetterMethod(Class, String, Class)</LongMessage><Class classname='org.apache.dubbo.common.utils.PojoUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.PojoUtils' start='62' end='624' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java'><Message>At PojoUtils.java:[lines 62-624]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.PojoUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.PojoUtils' signature='(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/reflect/Method;' name='getSetterMethod' primary='true'><SourceLine endBytecode='509' classname='org.apache.dubbo.common.utils.PojoUtils' start='574' end='590' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.PojoUtils.getSetterMethod(Class, String, Class)</Message></Method><SourceLine endBytecode='18' classname='org.apache.dubbo.common.utils.PojoUtils' start='574' end='574' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java' startBytecode='18' primary='true'><Message>At PojoUtils.java:[line 574]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='5ab0578caea272098a2ee6798699285a' cweid='396' rank='17' abbrev='REC' category='STYLE' priority='2' type='REC_CATCH_EXCEPTION' instanceOccurrenceMax='1'><ShortMessage>Exception is caught when Exception is not thrown</ShortMessage><LongMessage>Exception is caught when Exception is not thrown in org.apache.dubbo.common.utils.PojoUtils.createMap(Map)</LongMessage><Class classname='org.apache.dubbo.common.utils.PojoUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.PojoUtils' start='62' end='624' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java'><Message>At PojoUtils.java:[lines 62-624]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.PojoUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.PojoUtils' signature='(Ljava/util/Map;)Ljava/util/Map;' name='createMap' primary='true'><SourceLine endBytecode='486' classname='org.apache.dubbo.common.utils.PojoUtils' start='257' end='294' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.PojoUtils.createMap(Map)</Message></Method><SourceLine endBytecode='208' classname='org.apache.dubbo.common.utils.PojoUtils' start='286' end='286' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java' startBytecode='208' primary='true'><Message>At PojoUtils.java:[line 286]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='7ef03a04f4e535b9eded52fc710e9a3c' cweid='396' rank='17' abbrev='REC' category='STYLE' priority='2' type='REC_CATCH_EXCEPTION' instanceOccurrenceMax='0'><ShortMessage>Exception is caught when Exception is not thrown</ShortMessage><LongMessage>Exception is caught when Exception is not thrown in org.apache.dubbo.common.utils.PojoUtils.realize0(Object, Class, Type, Map)</LongMessage><Class classname='org.apache.dubbo.common.utils.PojoUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.PojoUtils' start='62' end='624' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java'><Message>At PojoUtils.java:[lines 62-624]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.PojoUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.PojoUtils' signature='(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/reflect/Type;Ljava/util/Map;)Ljava/lang/Object;' name='realize0' primary='true'><SourceLine endBytecode='3623' classname='org.apache.dubbo.common.utils.PojoUtils' start='299' end='497' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.PojoUtils.realize0(Object, Class, Type, Map)</Message></Method><SourceLine endBytecode='683' classname='org.apache.dubbo.common.utils.PojoUtils' start='405' end='405' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java' startBytecode='683' primary='true'><Message>At PojoUtils.java:[line 405]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='1500' classname='org.apache.dubbo.common.utils.PojoUtils' start='490' end='490' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java' startBytecode='1500'><Message>Another occurrence at PojoUtils.java:[line 490]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='6d12bca4c91c3660b16838afbab666d4' cweid='396' rank='20' abbrev='REC' category='STYLE' priority='3' type='REC_CATCH_EXCEPTION' instanceOccurrenceMax='0'><ShortMessage>Exception is caught when Exception is not thrown</ShortMessage><LongMessage>Exception is caught when Exception is not thrown in org.apache.dubbo.common.utils.PojoUtils.createCollection(Class, int)</LongMessage><Class classname='org.apache.dubbo.common.utils.PojoUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.PojoUtils' start='62' end='624' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java'><Message>At PojoUtils.java:[lines 62-624]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.PojoUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.PojoUtils' signature='(Ljava/lang/Class;I)Ljava/util/Collection;' name='createCollection' primary='true'><SourceLine endBytecode='190' classname='org.apache.dubbo.common.utils.PojoUtils' start='240' end='253' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.PojoUtils.createCollection(Class, int)</Message></Method><SourceLine endBytecode='61' classname='org.apache.dubbo.common.utils.PojoUtils' start='249' end='249' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java' startBytecode='61' primary='true'><Message>At PojoUtils.java:[line 249]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='1' instanceHash='5ab0578caea272098a2ee6798699285a' cweid='396' rank='20' abbrev='REC' category='STYLE' priority='3' type='REC_CATCH_EXCEPTION' instanceOccurrenceMax='1'><ShortMessage>Exception is caught when Exception is not thrown</ShortMessage><LongMessage>Exception is caught when Exception is not thrown in org.apache.dubbo.common.utils.PojoUtils.createMap(Map)</LongMessage><Class classname='org.apache.dubbo.common.utils.PojoUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.PojoUtils' start='62' end='624' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java'><Message>At PojoUtils.java:[lines 62-624]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.PojoUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.PojoUtils' signature='(Ljava/util/Map;)Ljava/util/Map;' name='createMap' primary='true'><SourceLine endBytecode='486' classname='org.apache.dubbo.common.utils.PojoUtils' start='257' end='294' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.PojoUtils.createMap(Map)</Message></Method><SourceLine endBytecode='168' classname='org.apache.dubbo.common.utils.PojoUtils' start='280' end='280' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java' startBytecode='168' primary='true'><Message>At PojoUtils.java:[line 280]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='2ecdb3ec9b8aac730b0a3b9641dd9263' cweid='396' rank='20' abbrev='REC' category='STYLE' priority='3' type='REC_CATCH_EXCEPTION' instanceOccurrenceMax='0'><ShortMessage>Exception is caught when Exception is not thrown</ShortMessage><LongMessage>Exception is caught when Exception is not thrown in org.apache.dubbo.common.utils.PojoUtils.generalize(Object, Map)</LongMessage><Class classname='org.apache.dubbo.common.utils.PojoUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.PojoUtils' start='62' end='624' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java'><Message>At PojoUtils.java:[lines 62-624]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.PojoUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.PojoUtils' signature='(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Object;' name='generalize' primary='true'><SourceLine endBytecode='1512' classname='org.apache.dubbo.common.utils.PojoUtils' start='106' end='197' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.PojoUtils.generalize(Object, Map)</Message></Method><SourceLine endBytecode='658' classname='org.apache.dubbo.common.utils.PojoUtils' start='192' end='192' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java' startBytecode='658' primary='true'><Message>At PojoUtils.java:[line 192]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='4664a79d6061ec0489727c99013f424c' cweid='440' rank='8' abbrev='RV' category='MT_CORRECTNESS' priority='1' type='RV_RETURN_VALUE_OF_PUTIFABSENT_IGNORED' instanceOccurrenceMax='0'><ShortMessage>Return value of putIfAbsent ignored, value passed to putIfAbsent reused</ShortMessage><LongMessage>Return value of putIfAbsent is ignored, but result is reused in org.apache.dubbo.common.utils.PojoUtils.getField(Class, String)</LongMessage><Class classname='org.apache.dubbo.common.utils.PojoUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.PojoUtils' start='62' end='624' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java'><Message>At PojoUtils.java:[lines 62-624]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.PojoUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.PojoUtils' signature='(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;' name='getField' primary='true'><SourceLine endBytecode='87' classname='org.apache.dubbo.common.utils.PojoUtils' start='594' end='618' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.PojoUtils.getField(Class, String)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.util.concurrent.ConcurrentMap' signature='(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' name='putIfAbsent'><SourceLine classname='java.util.concurrent.ConcurrentMap' sourcepath='java/util/concurrent/ConcurrentMap.java' sourcefile='ConcurrentMap.java'></SourceLine><Message>Called method java.util.concurrent.ConcurrentMap.putIfAbsent(Object, Object)</Message></Method><Type descriptor='Ljava/lang/reflect/Field;'><SourceLine classname='java.lang.reflect.Field' start='91' end='1175' sourcepath='java/lang/reflect/Field.java' sourcefile='Field.java'><Message>At Field.java:[lines 91-1175]</Message></SourceLine><Message>Type reflect.Field</Message></Type><LocalVariable role='LOCAL_VARIABLE_VALUE_OF' pc='187' name='result' register='2'><Message>Value loaded from result</Message></LocalVariable><SourceLine endBytecode='188' classname='org.apache.dubbo.common.utils.PojoUtils' start='616' end='616' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java' startBytecode='188' primary='true'><Message>At PojoUtils.java:[line 616]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='5af77bc91ecbffefa405bc1459756e8a' rank='20' abbrev='Dm' category='I18N' priority='3' type='DM_CONVERT_CASE' instanceOccurrenceMax='0'><ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage><LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.dubbo.common.utils.PojoUtils$PojoInvocationHandler.invoke(Object, Method, Object[])</LongMessage><Class classname='org.apache.dubbo.common.utils.PojoUtils$PojoInvocationHandler' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.PojoUtils$PojoInvocationHandler' start='212' end='234' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java'><Message>At PojoUtils.java:[lines 212-234]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.PojoUtils$PojoInvocationHandler</Message></Class><Method isStatic='false' classname='org.apache.dubbo.common.utils.PojoUtils$PojoInvocationHandler' signature='(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;' name='invoke' primary='true'><SourceLine endBytecode='404' classname='org.apache.dubbo.common.utils.PojoUtils$PojoInvocationHandler' start='219' end='234' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.PojoUtils$PojoInvocationHandler.invoke(Object, Method, Object[])</Message></Method><SourceLine endBytecode='65' classname='org.apache.dubbo.common.utils.PojoUtils$PojoInvocationHandler' start='225' end='225' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java' startBytecode='65' primary='true'><Message>At PojoUtils.java:[line 225]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='130' classname='org.apache.dubbo.common.utils.PojoUtils$PojoInvocationHandler' start='227' end='227' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java' startBytecode='130'><Message>Another occurrence at PojoUtils.java:[line 227]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='176' classname='org.apache.dubbo.common.utils.PojoUtils$PojoInvocationHandler' start='229' end='229' sourcepath='org/apache/dubbo/common/utils/PojoUtils.java' sourcefile='PojoUtils.java' startBytecode='176'><Message>Another occurrence at PojoUtils.java:[line 229]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='1242469784eea6747ecd802aaee2a5a3' rank='20' abbrev='Dm' category='I18N' priority='3' type='DM_CONVERT_CASE' instanceOccurrenceMax='0'><ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage><LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.dubbo.common.utils.ReflectUtils.getPropertyNameFromBeanReadMethod(Method)</LongMessage><Class classname='org.apache.dubbo.common.utils.ReflectUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.ReflectUtils' start='97' end='1120' sourcepath='org/apache/dubbo/common/utils/ReflectUtils.java' sourcefile='ReflectUtils.java'><Message>At ReflectUtils.java:[lines 97-1120]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.ReflectUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.ReflectUtils' signature='(Ljava/lang/reflect/Method;)Ljava/lang/String;' name='getPropertyNameFromBeanReadMethod' primary='true'><SourceLine endBytecode='194' classname='org.apache.dubbo.common.utils.ReflectUtils' start='1029' end='1039' sourcepath='org/apache/dubbo/common/utils/ReflectUtils.java' sourcefile='ReflectUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.ReflectUtils.getPropertyNameFromBeanReadMethod(Method)</Message></Method><SourceLine endBytecode='35' classname='org.apache.dubbo.common.utils.ReflectUtils' start='1031' end='1031' sourcepath='org/apache/dubbo/common/utils/ReflectUtils.java' sourcefile='ReflectUtils.java' startBytecode='35' primary='true'><Message>At ReflectUtils.java:[line 1031]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='84' classname='org.apache.dubbo.common.utils.ReflectUtils' start='1035' end='1035' sourcepath='org/apache/dubbo/common/utils/ReflectUtils.java' sourcefile='ReflectUtils.java' startBytecode='84'><Message>Another occurrence at ReflectUtils.java:[line 1035]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='778c019a3a1b98efd0fa6c7203168c6d' rank='20' abbrev='Dm' category='I18N' priority='3' type='DM_CONVERT_CASE' instanceOccurrenceMax='0'><ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage><LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.dubbo.common.utils.ReflectUtils.getPropertyNameFromBeanWriteMethod(Method)</LongMessage><Class classname='org.apache.dubbo.common.utils.ReflectUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.ReflectUtils' start='97' end='1120' sourcepath='org/apache/dubbo/common/utils/ReflectUtils.java' sourcefile='ReflectUtils.java'><Message>At ReflectUtils.java:[lines 97-1120]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.ReflectUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.ReflectUtils' signature='(Ljava/lang/reflect/Method;)Ljava/lang/String;' name='getPropertyNameFromBeanWriteMethod' primary='true'><SourceLine endBytecode='112' classname='org.apache.dubbo.common.utils.ReflectUtils' start='1053' end='1057' sourcepath='org/apache/dubbo/common/utils/ReflectUtils.java' sourcefile='ReflectUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.ReflectUtils.getPropertyNameFromBeanWriteMethod(Method)</Message></Method><SourceLine endBytecode='23' classname='org.apache.dubbo.common.utils.ReflectUtils' start='1054' end='1054' sourcepath='org/apache/dubbo/common/utils/ReflectUtils.java' sourcefile='ReflectUtils.java' startBytecode='23' primary='true'><Message>At ReflectUtils.java:[line 1054]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c2ec93b44aa433e06be5d46ff4b60aa1' rank='20' abbrev='DP' category='MALICIOUS_CODE' priority='3' type='DP_DO_INSIDE_DO_PRIVILEGED' instanceOccurrenceMax='0'><ShortMessage>Method invoked that should be only be invoked inside a doPrivileged block</ShortMessage><LongMessage>Invocation of reflect.Field.setAccessible(boolean), which should be invoked from within a doPrivileged block, in org.apache.dubbo.common.utils.ReflectUtils.getBeanPropertyFields(Class)</LongMessage><Class classname='org.apache.dubbo.common.utils.ReflectUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.ReflectUtils' start='97' end='1120' sourcepath='org/apache/dubbo/common/utils/ReflectUtils.java' sourcefile='ReflectUtils.java'><Message>At ReflectUtils.java:[lines 97-1120]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.ReflectUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.ReflectUtils' signature='(Ljava/lang/Class;)Ljava/util/Map;' name='getBeanPropertyFields' primary='true'><SourceLine endBytecode='291' classname='org.apache.dubbo.common.utils.ReflectUtils' start='1068' end='1083' sourcepath='org/apache/dubbo/common/utils/ReflectUtils.java' sourcefile='ReflectUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.ReflectUtils.getBeanPropertyFields(Class)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.reflect.Field' signature='(Z)V' name='setAccessible'><SourceLine classname='java.lang.reflect.Field' sourcepath='java/lang/reflect/Field.java' sourcefile='Field.java'></SourceLine><Message>Called method reflect.Field.setAccessible(boolean)</Message></Method><SourceLine endBytecode='67' classname='org.apache.dubbo.common.utils.ReflectUtils' start='1077' end='1077' sourcepath='org/apache/dubbo/common/utils/ReflectUtils.java' sourcefile='ReflectUtils.java' startBytecode='67' primary='true'><Message>At ReflectUtils.java:[line 1077]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='5548739533776a2506098dab58508ea9' rank='20' abbrev='DP' category='MALICIOUS_CODE' priority='3' type='DP_DO_INSIDE_DO_PRIVILEGED' instanceOccurrenceMax='0'><ShortMessage>Method invoked that should be only be invoked inside a doPrivileged block</ShortMessage><LongMessage>Invocation of reflect.Method.setAccessible(boolean), which should be invoked from within a doPrivileged block, in org.apache.dubbo.common.utils.ReflectUtils.getBeanPropertyReadMethods(Class)</LongMessage><Class classname='org.apache.dubbo.common.utils.ReflectUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.ReflectUtils' start='97' end='1120' sourcepath='org/apache/dubbo/common/utils/ReflectUtils.java' sourcefile='ReflectUtils.java'><Message>At ReflectUtils.java:[lines 97-1120]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.ReflectUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.ReflectUtils' signature='(Ljava/lang/Class;)Ljava/util/Map;' name='getBeanPropertyReadMethods' primary='true'><SourceLine endBytecode='276' classname='org.apache.dubbo.common.utils.ReflectUtils' start='1087' end='1099' sourcepath='org/apache/dubbo/common/utils/ReflectUtils.java' sourcefile='ReflectUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.ReflectUtils.getBeanPropertyReadMethods(Class)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.reflect.Method' signature='(Z)V' name='setAccessible'><SourceLine classname='java.lang.reflect.Method' sourcepath='java/lang/reflect/Method.java' sourcefile='Method.java'></SourceLine><Message>Called method reflect.Method.setAccessible(boolean)</Message></Method><SourceLine endBytecode='50' classname='org.apache.dubbo.common.utils.ReflectUtils' start='1092' end='1092' sourcepath='org/apache/dubbo/common/utils/ReflectUtils.java' sourcefile='ReflectUtils.java' startBytecode='50' primary='true'><Message>At ReflectUtils.java:[line 1092]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='40d0ef74dba41f30456d3d28514ae07e' rank='20' abbrev='Dm' category='I18N' priority='3' type='DM_CONVERT_CASE' instanceOccurrenceMax='0'><ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage><LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.dubbo.common.utils.StringUtils.toOSStyleKey(String)</LongMessage><Class classname='org.apache.dubbo.common.utils.StringUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.StringUtils' start='53' end='830' sourcepath='org/apache/dubbo/common/utils/StringUtils.java' sourcefile='StringUtils.java'><Message>At StringUtils.java:[lines 53-830]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.StringUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.StringUtils' signature='(Ljava/lang/String;)Ljava/lang/String;' name='toOSStyleKey' primary='true'><SourceLine endBytecode='105' classname='org.apache.dubbo.common.utils.StringUtils' start='811' end='815' sourcepath='org/apache/dubbo/common/utils/StringUtils.java' sourcefile='StringUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.StringUtils.toOSStyleKey(String)</Message></Method><SourceLine endBytecode='1' classname='org.apache.dubbo.common.utils.StringUtils' start='811' end='811' sourcepath='org/apache/dubbo/common/utils/StringUtils.java' sourcefile='StringUtils.java' startBytecode='1' primary='true'><Message>At StringUtils.java:[line 811]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='a018c29f4f45f2a11b78b6bf656e21c' rank='20' abbrev='Dm' category='I18N' priority='3' type='DM_CONVERT_CASE' instanceOccurrenceMax='0'><ShortMessage>Consider using Locale parameterized version of invoked method</ShortMessage><LongMessage>Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.dubbo.common.utils.StringUtils.toURLKey(String)</LongMessage><Class classname='org.apache.dubbo.common.utils.StringUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.StringUtils' start='53' end='830' sourcepath='org/apache/dubbo/common/utils/StringUtils.java' sourcefile='StringUtils.java'><Message>At StringUtils.java:[lines 53-830]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.StringUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.StringUtils' signature='(Ljava/lang/String;)Ljava/lang/String;' name='toURLKey' primary='true'><SourceLine endBytecode='53' classname='org.apache.dubbo.common.utils.StringUtils' start='807' end='807' sourcepath='org/apache/dubbo/common/utils/StringUtils.java' sourcefile='StringUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.StringUtils.toURLKey(String)</Message></Method><SourceLine endBytecode='1' classname='org.apache.dubbo.common.utils.StringUtils' start='807' end='807' sourcepath='org/apache/dubbo/common/utils/StringUtils.java' sourcefile='StringUtils.java' startBytecode='1' primary='true'><Message>At StringUtils.java:[line 807]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='16f83245fba32b4f5a82e014a0900fdf' cweid='476' rank='20' abbrev='RCN' category='STYLE' priority='3' type='RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE' instanceOccurrenceMax='0'><ShortMessage>Redundant nullcheck of value known to be non-null</ShortMessage><LongMessage>Redundant nullcheck of defaultProtocol, which is known to be non-null in org.apache.dubbo.common.utils.UrlUtils.parseURL(String, Map)</LongMessage><Class classname='org.apache.dubbo.common.utils.UrlUtils' primary='true'><SourceLine classname='org.apache.dubbo.common.utils.UrlUtils' start='55' end='499' sourcepath='org/apache/dubbo/common/utils/UrlUtils.java' sourcefile='UrlUtils.java'><Message>At UrlUtils.java:[lines 55-499]</Message></SourceLine><Message>In class org.apache.dubbo.common.utils.UrlUtils</Message></Class><Method isStatic='true' classname='org.apache.dubbo.common.utils.UrlUtils' signature='(Ljava/lang/String;Ljava/util/Map;)Lorg/apache/dubbo/common/URL;' name='parseURL' primary='true'><SourceLine endBytecode='1511' classname='org.apache.dubbo.common.utils.UrlUtils' start='63' end='156' sourcepath='org/apache/dubbo/common/utils/UrlUtils.java' sourcefile='UrlUtils.java' startBytecode='0'></SourceLine><Message>In method org.apache.dubbo.common.utils.UrlUtils.parseURL(String, Map)</Message></Method><LocalVariable role='LOCAL_VARIABLE_VALUE_OF' pc='413' name='defaultProtocol' register='3'><Message>Value loaded from defaultProtocol</Message></LocalVariable><SourceLine role='SOURCE_REDUNDANT_NULL_CHECK' endBytecode='414' classname='org.apache.dubbo.common.utils.UrlUtils' start='109' end='109' sourcepath='org/apache/dubbo/common/utils/UrlUtils.java' sourcefile='UrlUtils.java' startBytecode='414' primary='true'><Message>Redundant null check at UrlUtils.java:[line 109]</Message></SourceLine></BugInstance><BugCategory category='BAD_PRACTICE'><Description>Bad practice</Description></BugCategory><BugCategory category='MALICIOUS_CODE'><Description>Malicious code vulnerability</Description></BugCategory><BugCategory category='PERFORMANCE'><Description>Performance</Description></BugCategory><BugCategory category='STYLE'><Description>Dodgy code</Description></BugCategory><BugCategory category='EXPERIMENTAL'><Description>Experimental</Description></BugCategory><BugCategory category='MT_CORRECTNESS'><Description>Multithreaded correctness</Description></BugCategory><BugCategory category='I18N'><Description>Internationalization</Description></BugCategory><BugPattern abbrev='UwF' category='STYLE' type='UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR'><ShortDescription>Field not initialized in constructor but dereferenced without null check</ShortDescription><Details>

  &lt;p&gt; This field is never initialized within any constructor, and is therefore could be null after
the object is constructed. Elsewhere, it is loaded and dereferenced without a null check.
This could be a either an error or a questionable design, since
it means a null pointer exception will be generated if that field is dereferenced
before being initialized.
&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='DLS' category='STYLE' type='DLS_DEAD_LOCAL_STORE'><ShortDescription>Dead store to local variable</ShortDescription><Details>

&lt;p&gt;
This instruction assigns a value to a local variable,
but the value is not read or used in any subsequent instruction.
Often, this indicates an error, because the value computed is never
used.
&lt;/p&gt;
&lt;p&gt;
Note that Sun's javac compiler often generates dead stores for
final local variables.  Because SpotBugs is a bytecode-based tool,
there is no easy way to eliminate these false positives.
&lt;/p&gt;

    </Details></BugPattern><BugPattern cweid='374' abbrev='EI2' category='MALICIOUS_CODE' type='EI_EXPOSE_REP2'><ShortDescription>May expose internal representation by incorporating reference to mutable object</ShortDescription><Details>

  &lt;p&gt; This code stores a reference to an externally mutable object into the
  internal representation of the object.&amp;nbsp;
   If instances
   are accessed by untrusted code, and unchecked changes to
   the mutable object would compromise security or other
   important properties, you will need to do something different.
  Storing a copy of the object is better approach in many situations.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='DB' category='STYLE' type='DB_DUPLICATE_SWITCH_CLAUSES'><ShortDescription>Method uses the same code for two switch clauses</ShortDescription><Details>
      
      &lt;p&gt;
      This method uses the same code to implement two clauses of a switch statement.
    This could be a case of duplicate code, but it might also indicate
    a coding mistake.
      &lt;/p&gt;
      
   </Details></BugPattern><BugPattern abbrev='SIC' category='PERFORMANCE' type='SIC_INNER_SHOULD_BE_STATIC'><ShortDescription>Should be a static inner class</ShortDescription><Details>

  &lt;p&gt; This class is an inner class, but does not use its embedded reference
  to the object which created it.&amp;nbsp; This reference makes the instances
  of the class larger, and may keep the reference to the creator object
  alive longer than necessary.&amp;nbsp; If possible, the class should be
   made static.
&lt;/p&gt;

    </Details></BugPattern><BugPattern cweid='484' abbrev='SF' category='STYLE' type='SF_SWITCH_FALLTHROUGH'><ShortDescription>Switch statement found where one case falls through to the next case</ShortDescription><Details>

  &lt;p&gt; This method contains a switch statement where one case branch will fall through to the next case.
  Usually you need to end this case with a break or return.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='MS' category='MALICIOUS_CODE' type='MS_SHOULD_BE_FINAL'><ShortDescription>Field isn't final but should be</ShortDescription><Details>

   &lt;p&gt;
This static field public but not final, and
could be changed by malicious code or
        by accident from another package.
        The field could be made final to avoid
        this vulnerability.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='UC' category='STYLE' type='UC_USELESS_OBJECT'><ShortDescription>Useless object created</ShortDescription><Details>

&lt;p&gt;Our analysis shows that this object is useless.
It's created and modified, but its value never go outside of the method or produce any side-effect.
Either there is a mistake and object was intended to be used or it can be removed.&lt;/p&gt;
&lt;p&gt;This analysis rarely produces false-positives. Common false-positive cases include:&lt;/p&gt;
&lt;p&gt;- This object used to implicitly throw some obscure exception.&lt;/p&gt;
&lt;p&gt;- This object used as a stub to generalize the code.&lt;/p&gt;
&lt;p&gt;- This object used to hold strong references to weak/soft-referenced objects.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='Bx' category='PERFORMANCE' type='BX_UNBOXING_IMMEDIATELY_REBOXED'><ShortDescription>Boxed value is unboxed and then immediately reboxed</ShortDescription><Details>

  &lt;p&gt;A boxed value is unboxed and then immediately reboxed.
&lt;/p&gt;

    </Details></BugPattern><BugPattern cweid='396' abbrev='REC' category='STYLE' type='REC_CATCH_EXCEPTION'><ShortDescription>Exception is caught when Exception is not thrown</ShortDescription><Details>
  
  &lt;p&gt;
  This method uses a try-catch block that catches Exception objects, but Exception is not
  thrown within the try block, and RuntimeException is not explicitly caught.  It is a common bug pattern to
  say try { ... } catch (Exception e) { something } as a shorthand for catching a number of types of exception
  each of whose catch blocks is identical, but this construct also accidentally catches RuntimeException as well,
  masking potential bugs.
  &lt;/p&gt;
  &lt;p&gt;A better approach is to either explicitly catch the specific exceptions that are thrown,
  or to explicitly catch RuntimeException exception, rethrow it, and then catch all non-Runtime Exceptions, as shown below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;try {
    ...
} catch (RuntimeException e) {
    throw e;
} catch (Exception e) {
    ... deal with all non-runtime exceptions ...
}
&lt;/code&gt;&lt;/pre&gt;
  
     </Details></BugPattern><BugPattern abbrev='RCN' category='STYLE' type='RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE'><ShortDescription>Redundant nullcheck of value known to be non-null</ShortDescription><Details>

&lt;p&gt; This method contains a redundant check of a known non-null value against
the constant null.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='RV' category='MT_CORRECTNESS' type='RV_RETURN_VALUE_OF_PUTIFABSENT_IGNORED'><ShortDescription>Return value of putIfAbsent ignored, value passed to putIfAbsent reused</ShortDescription><Details>
          
        The &lt;code&gt;putIfAbsent&lt;/code&gt; method is typically used to ensure that a
        single value is associated with a given key (the first value for which put
        if absent succeeds).
        If you ignore the return value and retain a reference to the value passed in,
        you run the risk of retaining a value that is not the one that is associated with the key in the map.
        If it matters which one you use and you use the one that isn't stored in the map,
        your program will behave incorrectly.
          
      </Details></BugPattern><BugPattern abbrev='MS' category='MALICIOUS_CODE' type='MS_PKGPROTECT'><ShortDescription>Field should be package protected</ShortDescription><Details>

  &lt;p&gt; A mutable static field could be changed by malicious code or
   by accident.
   The field could be made package protected to avoid
   this vulnerability.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='Dm' category='I18N' type='DM_DEFAULT_ENCODING'><ShortDescription>Reliance on default encoding</ShortDescription><Details>

&lt;p&gt; Found a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. This will cause the application behaviour to vary between platforms. Use an alternative API and specify a charset name or Charset object explicitly.  &lt;/p&gt;

      </Details></BugPattern><BugPattern abbrev='Bx' category='PERFORMANCE' type='DM_NUMBER_CTOR'><ShortDescription>Method invokes inefficient Number constructor; use static valueOf instead</ShortDescription><Details>
      
      &lt;p&gt;
      Using &lt;code&gt;new Integer(int)&lt;/code&gt; is guaranteed to always result in a new object whereas
      &lt;code&gt;Integer.valueOf(int)&lt;/code&gt; allows caching of values to be done by the compiler, class library, or JVM.
      Using of cached values avoids object allocation and the code will be faster.
      &lt;/p&gt;
      &lt;p&gt;
      Values between -128 and 127 are guaranteed to have corresponding cached instances
      and using &lt;code&gt;valueOf&lt;/code&gt; is approximately 3.5 times faster than using constructor.
      For values outside the constant range the performance of both styles is the same.
      &lt;/p&gt;
      &lt;p&gt;
      Unless the class must be compatible with JVMs predating Java 1.5,
      use either autoboxing or the &lt;code&gt;valueOf()&lt;/code&gt; method when creating instances of
      &lt;code&gt;Long&lt;/code&gt;, &lt;code&gt;Integer&lt;/code&gt;, &lt;code&gt;Short&lt;/code&gt;, &lt;code&gt;Character&lt;/code&gt;, and &lt;code&gt;Byte&lt;/code&gt;.
      &lt;/p&gt;
      
    </Details></BugPattern><BugPattern abbrev='Se' category='BAD_PRACTICE' type='SE_BAD_FIELD'><ShortDescription>Non-transient non-serializable instance field in serializable class</ShortDescription><Details>

&lt;p&gt; This Serializable class defines a non-primitive instance field which is neither transient,
Serializable, or &lt;code&gt;java.lang.Object&lt;/code&gt;, and does not appear to implement
the &lt;code&gt;Externalizable&lt;/code&gt; interface or the
&lt;code&gt;readObject()&lt;/code&gt; and &lt;code&gt;writeObject()&lt;/code&gt; methods.&amp;nbsp;
Objects of this class will not be deserialized correctly if a non-Serializable
object is stored in this field.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='Se' category='BAD_PRACTICE' type='SE_COMPARATOR_SHOULD_BE_SERIALIZABLE'><ShortDescription>Comparator doesn't implement Serializable</ShortDescription><Details>

  &lt;p&gt; This class implements the &lt;code&gt;Comparator&lt;/code&gt; interface. You
should consider whether or not it should also implement the &lt;code&gt;Serializable&lt;/code&gt;
interface. If a comparator is used to construct an ordered collection
such as a &lt;code&gt;TreeMap&lt;/code&gt;, then the &lt;code&gt;TreeMap&lt;/code&gt;
will be serializable only if the comparator is also serializable.
As most comparators have little or no state, making them serializable
is generally easy and good defensive programming.
&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='Nm' category='BAD_PRACTICE' type='NM_FIELD_NAMING_CONVENTION'><ShortDescription>Field names should start with a lower case letter</ShortDescription><Details>

  &lt;p&gt;
Names of fields that are not final should be in mixed case with a lowercase first letter and the first letters of subsequent words capitalized.
&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='DP' category='MALICIOUS_CODE' type='DP_DO_INSIDE_DO_PRIVILEGED'><ShortDescription>Method invoked that should be only be invoked inside a doPrivileged block</ShortDescription><Details>

  &lt;p&gt; This code invokes a method that requires a security permission check.
  If this code will be granted security permissions, but might be invoked by code that does not
  have security permissions, then the invocation needs to occur inside a doPrivileged block.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='RI' category='STYLE' type='RI_REDUNDANT_INTERFACES'><ShortDescription>Class implements same interface as superclass</ShortDescription><Details>
   
    &lt;p&gt;
    This class declares that it implements an interface that is also implemented by a superclass.
    This is redundant because once a superclass implements an interface, all subclasses by default also
    implement this interface. It may point out that the inheritance hierarchy has changed since
    this class was created, and consideration should be given to the ownership of
    the interface's implementation.
    &lt;/p&gt;
    
     </Details></BugPattern><BugPattern abbrev='RR' category='BAD_PRACTICE' type='SR_NOT_CHECKED'><ShortDescription>Method ignores results of InputStream.skip()</ShortDescription><Details>

  &lt;p&gt; This method ignores the return value of
  &lt;code&gt;java.io.InputStream.skip()&lt;/code&gt; which can skip multiple bytes.&amp;nbsp;
  If the return value is not checked, the caller will not be able to correctly
  handle the case where fewer bytes were skipped than the caller requested.&amp;nbsp;
  This is a particularly insidious kind of bug, because in many programs,
  skips from input streams usually do skip the full amount of data requested,
  causing the program to fail only sporadically. With Buffered streams, however,
  skip() will only skip data in the buffer, and will routinely fail to skip the
  requested number of bytes.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='RR' category='BAD_PRACTICE' type='RR_NOT_CHECKED'><ShortDescription>Method ignores results of InputStream.read()</ShortDescription><Details>

  &lt;p&gt; This method ignores the return value of one of the variants of
  &lt;code&gt;java.io.InputStream.read()&lt;/code&gt; which can return multiple bytes.&amp;nbsp;
  If the return value is not checked, the caller will not be able to correctly
  handle the case where fewer bytes were read than the caller requested.&amp;nbsp;
  This is a particularly insidious kind of bug, because in many programs,
  reads from input streams usually do read the full amount of data requested,
  causing the program to fail only sporadically.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='UPM' category='PERFORMANCE' type='UPM_UNCALLED_PRIVATE_METHOD'><ShortDescription>Private method is never called</ShortDescription><Details>

&lt;p&gt; This private method is never called. Although it is
possible that the method will be invoked through reflection,
it is more likely that the method is never used, and should be
removed.
&lt;/p&gt;

</Details></BugPattern><BugPattern abbrev='LG' category='EXPERIMENTAL' type='LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE'><ShortDescription>Potential lost logger changes due to weak reference in OpenJDK</ShortDescription><Details>
          
&lt;p&gt;OpenJDK introduces a potential incompatibility.
 In particular, the java.util.logging.Logger behavior has
  changed. Instead of using strong references, it now uses weak references
  internally. That's a reasonable change, but unfortunately some code relies on
  the old behavior - when changing logger configuration, it simply drops the
  logger reference. That means that the garbage collector is free to reclaim
  that memory, which means that the logger configuration is lost. For example,
consider:
&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public static void initLogging() throws Exception {
    Logger logger = Logger.getLogger("edu.umd.cs");
    logger.addHandler(new FileHandler()); // call to change logger configuration
    logger.setUseParentHandlers(false); // another call to change logger configuration
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The logger reference is lost at the end of the method (it doesn't
escape the method), so if you have a garbage collection cycle just
after the call to initLogging, the logger configuration is lost
(because Logger only keeps weak references).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public static void main(String[] args) throws Exception {
    initLogging(); // adds a file handler to the logger
    System.gc(); // logger configuration lost
    Logger.getLogger("edu.umd.cs").info("Some message"); // this isn't logged to the file as expected
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Ulf Ochsenfahrt and Eric Fellheimer&lt;/em&gt;&lt;/p&gt;
          
      </Details></BugPattern><BugPattern abbrev='FS' category='BAD_PRACTICE' type='VA_FORMAT_STRING_USES_NEWLINE'><ShortDescription>Format string should use %n rather than /n</ShortDescription><Details>

&lt;p&gt;
This format string includes a newline character (/n). In format strings, it is generally
 preferable to use %n, which will produce the platform-specific line separator.
&lt;/p&gt;

     </Details></BugPattern><BugPattern abbrev='Bx' category='PERFORMANCE' type='DM_FP_NUMBER_CTOR'><ShortDescription>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortDescription><Details>
      
      &lt;p&gt;
      Using &lt;code&gt;new Double(double)&lt;/code&gt; is guaranteed to always result in a new object whereas
      &lt;code&gt;Double.valueOf(double)&lt;/code&gt; allows caching of values to be done by the compiler, class library, or JVM.
      Using of cached values avoids object allocation and the code will be faster.
      &lt;/p&gt;
      &lt;p&gt;
      Unless the class must be compatible with JVMs predating Java 1.5,
      use either autoboxing or the &lt;code&gt;valueOf()&lt;/code&gt; method when creating instances of &lt;code&gt;Double&lt;/code&gt; and &lt;code&gt;Float&lt;/code&gt;.
      &lt;/p&gt;
      
    </Details></BugPattern><BugPattern abbrev='Dm' category='PERFORMANCE' type='DM_BOOLEAN_CTOR'><ShortDescription>Method invokes inefficient Boolean constructor; use Boolean.valueOf(...) instead</ShortDescription><Details>

  &lt;p&gt; Creating new instances of &lt;code&gt;java.lang.Boolean&lt;/code&gt; wastes
  memory, since &lt;code&gt;Boolean&lt;/code&gt; objects are immutable and there are
  only two useful values of this type.&amp;nbsp; Use the &lt;code&gt;Boolean.valueOf()&lt;/code&gt;
  method (or Java 1.5 autoboxing) to create &lt;code&gt;Boolean&lt;/code&gt; objects instead.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='DE' category='BAD_PRACTICE' type='DE_MIGHT_IGNORE'><ShortDescription>Method might ignore exception</ShortDescription><Details>

  &lt;p&gt; This method might ignore an exception.&amp;nbsp; In general, exceptions
  should be handled or reported in some way, or they should be thrown
  out of the method.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='Se' category='BAD_PRACTICE' type='SE_TRANSIENT_FIELD_NOT_RESTORED'><ShortDescription>Transient field that isn't set by deserialization. </ShortDescription><Details>

  &lt;p&gt; This class contains a field that is updated at multiple places in the class, thus it seems to be part of the state of the class. However, since the field is marked as transient and not set in readObject or readResolve, it will contain the default value in any
deserialized instance of the class.
&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='Dm' category='I18N' type='DM_CONVERT_CASE'><ShortDescription>Consider using Locale parameterized version of invoked method</ShortDescription><Details>

  &lt;p&gt; A String is being converted to upper or lowercase, using the platform's default encoding. This may
      result in improper conversions when used with international characters. Use the &lt;/p&gt;
      &lt;ul&gt;
    &lt;li&gt;String.toUpperCase( Locale l )&lt;/li&gt;
    &lt;li&gt;String.toLowerCase( Locale l )&lt;/li&gt;
    &lt;/ul&gt;
      &lt;p&gt;versions instead.&lt;/p&gt;

    </Details></BugPattern><BugCode abbrev='RR'><Description>Method ignores results of InputStream.read()</Description></BugCode><BugCode cweid='391' abbrev='DE'><Description>Dropped or ignored exception</Description></BugCode><BugCode cweid='440' abbrev='RV'><Description>Bad use of return value from method</Description></BugCode><BugCode abbrev='UwF'><Description>Unwritten field</Description></BugCode><BugCode cweid='218' abbrev='MS'><Description>Mutable static field</Description></BugCode><BugCode abbrev='Dm'><Description>Dubious method used</Description></BugCode><BugCode cweid='563' abbrev='DLS'><Description>Dead local store</Description></BugCode><BugCode abbrev='SIC'><Description>Inner class could be made static</Description></BugCode><BugCode abbrev='DP'><Description>Use doPrivileged</Description></BugCode><BugCode abbrev='FS'><Description>Format string problem</Description></BugCode><BugCode abbrev='UC'><Description>Useless code</Description></BugCode><BugCode abbrev='EI2'><Description>Storing reference to mutable object</Description></BugCode><BugCode abbrev='REC'><Description>RuntimeException capture</Description></BugCode><BugCode abbrev='Se'><Description>Incorrect definition of Serializable class</Description></BugCode><BugCode abbrev='SF'><Description>Switch case falls through</Description></BugCode><BugCode abbrev='UPM'><Description>Private method is never called</Description></BugCode><BugCode abbrev='Bx'><Description>Questionable Boxing of primitive value</Description></BugCode><BugCode abbrev='RI'><Description>Redundant Interfaces</Description></BugCode><BugCode abbrev='LG'><Description>Logger problem</Description></BugCode><BugCode cweid='476' abbrev='RCN'><Description>Redundant comparison to null</Description></BugCode><BugCode abbrev='DB'><Description>Duplicate Branches</Description></BugCode><BugCode abbrev='Nm'><Description>Confusing method name</Description></BugCode><Errors missingClasses='0' errors='0'></Errors><FindBugsSummary num_packages='33' total_classes='192' priority_1='9' priority_2='39' priority_3='46' total_size='11428' clock_seconds='8.62' referenced_classes='585' vm_version='25.222-b10' total_bugs='94' java_version='1.8.0_222' gc_seconds='0.27' alloc_mbytes='3641.00' cpu_seconds='38.65' peak_mbytes='639.45' timestamp='Thu, 12 Sep 2019 11:55:34 +0200'><FileStats path='com/alibaba/dubbo/common/extension/Activate.java' size='6' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/Extension.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/Node.java' size='4' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/Parameters.java' size='138' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/Resetable.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/URL.java' size='837' bugHash='736105e6ade2ff47c35c07c9cb54291d' bugCount='7'></FileStats><FileStats path='org/apache/dubbo/common/URLBuilder.java' size='201' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/Version.java' size='120' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/beanutil/JavaBeanAccessor.java' size='17' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/beanutil/JavaBeanDescriptor.java' size='108' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/beanutil/JavaBeanSerializeUtil.java' size='317' bugHash='524ce002e5f87a0298fee1423faf5a58' bugCount='4'></FileStats><FileStats path='org/apache/dubbo/common/bytecode/ClassGenerator.java' size='232' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/bytecode/Mixin.java' size='96' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/bytecode/NoSuchMethodException.java' size='8' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/bytecode/NoSuchPropertyException.java' size='8' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/bytecode/Proxy.java' size='147' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/bytecode/Wrapper.java' size='232' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/compiler/Compiler.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/compiler/support/AbstractCompiler.java' size='29' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/compiler/support/AdaptiveCompiler.java' size='14' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/compiler/support/ClassUtils.java' size='238' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/compiler/support/CtClassBuilder.java' size='82' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/compiler/support/JavassistCompiler.java' size='43' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/compiler/support/JdkCompiler.java' size='155' bugHash='65f6862563f4862e464c71010da35119' bugCount='2'></FileStats><FileStats path='org/apache/dubbo/common/config/AbstractPrefixConfiguration.java' size='19' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/config/CompositeConfiguration.java' size='41' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/config/Configuration.java' size='38' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/config/ConfigurationUtils.java' size='34' bugHash='537ee68936ef5790e4c187d0d01a91dc' bugCount='1'></FileStats><FileStats path='org/apache/dubbo/common/config/Environment.java' size='101' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/config/EnvironmentConfiguration.java' size='12' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/config/InmemoryConfiguration.java' size='22' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/config/PropertiesConfiguration.java' size='12' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/config/SystemConfiguration.java' size='9' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/constants/CommonConstants.java' size='89' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/constants/FilterConstants.java' size='3' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/constants/QosConstants.java' size='7' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/constants/RegistryConstants.java' size='18' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/constants/RemotingConstants.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/extension/Activate.java' size='6' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/extension/Adaptive.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/extension/AdaptiveClassCodeGenerator.java' size='162' bugHash='3c9bbe74f41a649044bc3cf4e16b58b3' bugCount='14'></FileStats><FileStats path='org/apache/dubbo/common/extension/DisableInject.java' size='1' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/extension/ExtensionFactory.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/extension/ExtensionLoader.java' size='453' bugHash='30633b99271c47ae943945a2fd30bab2' bugCount='5'></FileStats><FileStats path='org/apache/dubbo/common/extension/SPI.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/extension/factory/AdaptiveExtensionFactory.java' size='18' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/extension/factory/SpiExtensionFactory.java' size='9' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/extension/support/ActivateComparator.java' size='79' bugHash='abb846ca67a021319c04dde1c37cdbb3' bugCount='3'></FileStats><FileStats path='org/apache/dubbo/common/io/Bytes.java' size='365' bugHash='bf9e1ee324a51834970c1abb11d60284' bugCount='1'></FileStats><FileStats path='org/apache/dubbo/common/io/StreamUtils.java' size='133' bugHash='050e8f0ad902a68edbd6e510d4f7c1ac' bugCount='4'></FileStats><FileStats path='org/apache/dubbo/common/io/UnsafeByteArrayInputStream.java' size='60' bugHash='a1517fd08d9b5cbe66facb528d23ed6c' bugCount='1'></FileStats><FileStats path='org/apache/dubbo/common/io/UnsafeByteArrayOutputStream.java' size='48' bugHash='850f46afdfd9d6a11bdbcf9529337d07' bugCount='1'></FileStats><FileStats path='org/apache/dubbo/common/io/UnsafeStringReader.java' size='58' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/io/UnsafeStringWriter.java' size='52' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/json/GenericJSONConverter.java' size='404' bugHash='f9271811f3f30345d006a12282da3459' bugCount='3'></FileStats><FileStats path='org/apache/dubbo/common/json/J2oVisitor.java' size='237' bugHash='9107acad9585053bb352b1de0f3e261f' bugCount='2'></FileStats><FileStats path='org/apache/dubbo/common/json/JSON.java' size='334' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/json/JSONArray.java' size='52' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/json/JSONConverter.java' size='3' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/json/JSONNode.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/json/JSONObject.java' size='59' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/json/JSONReader.java' size='31' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/json/JSONToken.java' size='41' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/json/JSONVisitor.java' size='12' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/json/JSONWriter.java' size='130' bugHash='bc33b7821dc89f35ea09878cf8fb5c73' bugCount='1'></FileStats><FileStats path='org/apache/dubbo/common/json/ParseException.java' size='8' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/json/Yylex.java' size='269' bugHash='6952063e1da8267a3ecf800909afc6cf' bugCount='5'></FileStats><FileStats path='org/apache/dubbo/common/logger/Level.java' size='21' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/logger/Logger.java' size='21' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/logger/LoggerAdapter.java' size='7' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/logger/LoggerFactory.java' size='53' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/logger/jcl/JclLogger.java' size='62' bugHash='f84f540cd8116eac6adec204085f19da' bugCount='1'></FileStats><FileStats path='org/apache/dubbo/common/logger/jcl/JclLoggerAdapter.java' size='19' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/logger/jdk/JdkLogger.java' size='61' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/logger/jdk/JdkLoggerAdapter.java' size='64' bugHash='db20a84c7174fa72cf3eb90b167a179a' bugCount='1'></FileStats><FileStats path='org/apache/dubbo/common/logger/log4j/Log4jLogger.java' size='64' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/logger/log4j/Log4jLoggerAdapter.java' size='60' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/logger/log4j2/Log4j2Logger.java' size='61' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/logger/log4j2/Log4j2LoggerAdapter.java' size='46' bugHash='b9666eb29dc7f25ae57c2c83e29a0951' bugCount='2'></FileStats><FileStats path='org/apache/dubbo/common/logger/slf4j/Slf4jLogger.java' size='114' bugHash='eb4e7c40d6859c2c00e5fb7bc0f18036' bugCount='2'></FileStats><FileStats path='org/apache/dubbo/common/logger/slf4j/Slf4jLoggerAdapter.java' size='19' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/logger/support/FailsafeLogger.java' size='108' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/status/Status.java' size='37' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/status/StatusChecker.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/status/support/LoadStatusChecker.java' size='15' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/status/support/MemoryStatusChecker.java' size='11' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/status/support/StatusUtils.java' size='23' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/store/DataStore.java' size='5' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/store/support/SimpleDataStore.java' size='26' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/threadlocal/InternalThread.java' size='31' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/threadlocal/InternalThreadLocal.java' size='86' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/threadlocal/InternalThreadLocalMap.java' size='95' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/threadlocal/NamedInternalThreadFactory.java' size='15' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/threadpool/ThreadPool.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/threadpool/support/AbortPolicyWithReport.java' size='54' bugHash='cc179db25d3a9ccf3054da49ba8a7807' bugCount='1'></FileStats><FileStats path='org/apache/dubbo/common/threadpool/support/cached/CachedThreadPool.java' size='10' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/threadpool/support/eager/EagerThreadPool.java' size='13' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/threadpool/support/eager/EagerThreadPoolExecutor.java' size='30' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/threadpool/support/eager/TaskQueue.java' size='24' bugHash='a2b5345431c23c3b462c610b9d231b98' bugCount='2'></FileStats><FileStats path='org/apache/dubbo/common/threadpool/support/fixed/FixedThreadPool.java' size='8' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/threadpool/support/limited/LimitedThreadPool.java' size='9' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/timer/HashedWheelTimer.java' size='397' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/timer/Timeout.java' size='6' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/timer/Timer.java' size='4' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/timer/TimerTask.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/utils/ArrayUtils.java' size='8' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/utils/Assert.java' size='16' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/utils/AtomicPositiveInteger.java' size='76' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/utils/CIDRUtils.java' size='64' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/utils/ClassHelper.java' size='33' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/utils/ClassUtils.java' size='118' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/utils/CollectionUtils.java' size='131' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/utils/CompatibleTypeUtils.java' size='108' bugHash='7a4e57e154a77a16d770797360ff111a' bugCount='7'></FileStats><FileStats path='org/apache/dubbo/common/utils/ConcurrentHashSet.java' size='29' bugHash='ab021233777474602d06db1a5f8e8404' bugCount='1'></FileStats><FileStats path='org/apache/dubbo/common/utils/ConfigUtils.java' size='163' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/utils/DubboAppender.java' size='33' bugHash='1f2e5efae796869523eb13f20e01fde1' bugCount='2'></FileStats><FileStats path='org/apache/dubbo/common/utils/ExecutorUtil.java' size='79' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/utils/Holder.java' size='9' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/utils/IOUtils.java' size='66' bugHash='4f75182144db1ca1cf16037f439e1110' bugCount='2'></FileStats><FileStats path='org/apache/dubbo/common/utils/JVMUtil.java' size='61' bugHash='ad2cf74ce925aaa90db4a12134ae3dac' bugCount='2'></FileStats><FileStats path='org/apache/dubbo/common/utils/LRUCache.java' size='52' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/utils/Log.java' size='65' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/utils/LogHelper.java' size='94' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/utils/LogUtil.java' size='72' bugHash='92717d9c9dba6ff2f3a66fc2686b671a' bugCount='1'></FileStats><FileStats path='org/apache/dubbo/common/utils/MethodUtils.java' size='17' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/utils/NamedThreadFactory.java' size='29' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/utils/NetUtils.java' size='301' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/utils/PojoUtils.java' size='378' bugHash='b5ef3b59dd6200ac73c9a7c94a17fc3c' bugCount='9'></FileStats><FileStats path='org/apache/dubbo/common/utils/ReflectUtils.java' size='596' bugHash='b632cbfd4baf40626d6a13a15aa3477c' bugCount='4'></FileStats><FileStats path='org/apache/dubbo/common/utils/Stack.java' size='44' bugCount='0'></FileStats><FileStats path='org/apache/dubbo/common/utils/StringUtils.java' size='317' bugHash='d20c02e81106f0ea90a5c396384bb0a9' bugCount='2'></FileStats><FileStats path='org/apache/dubbo/common/utils/UrlUtils.java' size='307' bugHash='3f8cbeb6e145a68da73a9f57dcf9bb64' bugCount='1'></FileStats><PackageStats package='com.alibaba.dubbo.common.extension' total_bugs='0' total_size='6' total_types='1'><ClassStats bugs='0' size='6' interface='true' sourceFile='Activate.java' class='com.alibaba.dubbo.common.extension.Activate'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common' total_bugs='7' priority_3='7' total_size='1304' total_types='7'><ClassStats bugs='0' size='2' interface='true' sourceFile='Extension.java' class='org.apache.dubbo.common.Extension'></ClassStats><ClassStats bugs='0' size='4' interface='true' sourceFile='Node.java' class='org.apache.dubbo.common.Node'></ClassStats><ClassStats bugs='0' size='138' interface='false' sourceFile='Parameters.java' class='org.apache.dubbo.common.Parameters'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='Resetable.java' class='org.apache.dubbo.common.Resetable'></ClassStats><ClassStats bugs='7' size='837' priority_3='7' interface='false' sourceFile='URL.java' class='org.apache.dubbo.common.URL'></ClassStats><ClassStats bugs='0' size='201' interface='false' sourceFile='URLBuilder.java' class='org.apache.dubbo.common.URLBuilder'></ClassStats><ClassStats bugs='0' size='120' interface='false' sourceFile='Version.java' class='org.apache.dubbo.common.Version'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.beanutil' total_bugs='4' priority_2='1' priority_3='3' total_size='442' total_types='3'><ClassStats bugs='0' size='17' interface='false' sourceFile='JavaBeanAccessor.java' class='org.apache.dubbo.common.beanutil.JavaBeanAccessor'></ClassStats><ClassStats bugs='0' size='108' interface='false' sourceFile='JavaBeanDescriptor.java' class='org.apache.dubbo.common.beanutil.JavaBeanDescriptor'></ClassStats><ClassStats bugs='4' size='317' priority_2='1' priority_3='3' interface='false' sourceFile='JavaBeanSerializeUtil.java' class='org.apache.dubbo.common.beanutil.JavaBeanSerializeUtil'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.bytecode' total_bugs='0' total_size='723' total_types='10'><ClassStats bugs='0' size='231' interface='false' sourceFile='ClassGenerator.java' class='org.apache.dubbo.common.bytecode.ClassGenerator'></ClassStats><ClassStats bugs='0' size='1' interface='true' sourceFile='ClassGenerator.java' class='org.apache.dubbo.common.bytecode.ClassGenerator$DC'></ClassStats><ClassStats bugs='0' size='94' interface='false' sourceFile='Mixin.java' class='org.apache.dubbo.common.bytecode.Mixin'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='Mixin.java' class='org.apache.dubbo.common.bytecode.Mixin$MixinAware'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='NoSuchMethodException.java' class='org.apache.dubbo.common.bytecode.NoSuchMethodException'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='NoSuchPropertyException.java' class='org.apache.dubbo.common.bytecode.NoSuchPropertyException'></ClassStats><ClassStats bugs='0' size='142' interface='false' sourceFile='Proxy.java' class='org.apache.dubbo.common.bytecode.Proxy'></ClassStats><ClassStats bugs='0' size='5' interface='false' sourceFile='Proxy.java' class='org.apache.dubbo.common.bytecode.Proxy$1'></ClassStats><ClassStats bugs='0' size='203' interface='false' sourceFile='Wrapper.java' class='org.apache.dubbo.common.bytecode.Wrapper'></ClassStats><ClassStats bugs='0' size='29' interface='false' sourceFile='Wrapper.java' class='org.apache.dubbo.common.bytecode.Wrapper$1'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.compiler' total_bugs='0' total_size='2' total_types='1'><ClassStats bugs='0' size='2' interface='true' sourceFile='Compiler.java' class='org.apache.dubbo.common.compiler.Compiler'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.compiler.support' total_bugs='2' priority_2='2' total_size='561' total_types='10'><ClassStats bugs='0' size='29' interface='false' sourceFile='AbstractCompiler.java' class='org.apache.dubbo.common.compiler.support.AbstractCompiler'></ClassStats><ClassStats bugs='0' size='14' interface='false' sourceFile='AdaptiveCompiler.java' class='org.apache.dubbo.common.compiler.support.AdaptiveCompiler'></ClassStats><ClassStats bugs='0' size='238' interface='false' sourceFile='ClassUtils.java' class='org.apache.dubbo.common.compiler.support.ClassUtils'></ClassStats><ClassStats bugs='0' size='82' interface='false' sourceFile='CtClassBuilder.java' class='org.apache.dubbo.common.compiler.support.CtClassBuilder'></ClassStats><ClassStats bugs='0' size='43' interface='false' sourceFile='JavassistCompiler.java' class='org.apache.dubbo.common.compiler.support.JavassistCompiler'></ClassStats><ClassStats bugs='0' size='41' interface='false' sourceFile='JdkCompiler.java' class='org.apache.dubbo.common.compiler.support.JdkCompiler'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='JdkCompiler.java' class='org.apache.dubbo.common.compiler.support.JdkCompiler$1'></ClassStats><ClassStats bugs='1' size='30' priority_2='1' interface='false' sourceFile='JdkCompiler.java' class='org.apache.dubbo.common.compiler.support.JdkCompiler$ClassLoaderImpl'></ClassStats><ClassStats bugs='1' size='51' priority_2='1' interface='false' sourceFile='JdkCompiler.java' class='org.apache.dubbo.common.compiler.support.JdkCompiler$JavaFileManagerImpl'></ClassStats><ClassStats bugs='0' size='25' interface='false' sourceFile='JdkCompiler.java' class='org.apache.dubbo.common.compiler.support.JdkCompiler$JavaFileObjectImpl'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.config' total_bugs='1' priority_3='1' total_size='288' total_types='9'><ClassStats bugs='0' size='19' interface='false' sourceFile='AbstractPrefixConfiguration.java' class='org.apache.dubbo.common.config.AbstractPrefixConfiguration'></ClassStats><ClassStats bugs='0' size='41' interface='false' sourceFile='CompositeConfiguration.java' class='org.apache.dubbo.common.config.CompositeConfiguration'></ClassStats><ClassStats bugs='0' size='38' interface='true' sourceFile='Configuration.java' class='org.apache.dubbo.common.config.Configuration'></ClassStats><ClassStats bugs='1' size='34' priority_3='1' interface='false' sourceFile='ConfigurationUtils.java' class='org.apache.dubbo.common.config.ConfigurationUtils'></ClassStats><ClassStats bugs='0' size='101' interface='false' sourceFile='Environment.java' class='org.apache.dubbo.common.config.Environment'></ClassStats><ClassStats bugs='0' size='12' interface='false' sourceFile='EnvironmentConfiguration.java' class='org.apache.dubbo.common.config.EnvironmentConfiguration'></ClassStats><ClassStats bugs='0' size='22' interface='false' sourceFile='InmemoryConfiguration.java' class='org.apache.dubbo.common.config.InmemoryConfiguration'></ClassStats><ClassStats bugs='0' size='12' interface='false' sourceFile='PropertiesConfiguration.java' class='org.apache.dubbo.common.config.PropertiesConfiguration'></ClassStats><ClassStats bugs='0' size='9' interface='false' sourceFile='SystemConfiguration.java' class='org.apache.dubbo.common.config.SystemConfiguration'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.constants' total_bugs='0' total_size='119' total_types='5'><ClassStats bugs='0' size='89' interface='true' sourceFile='CommonConstants.java' class='org.apache.dubbo.common.constants.CommonConstants'></ClassStats><ClassStats bugs='0' size='3' interface='true' sourceFile='FilterConstants.java' class='org.apache.dubbo.common.constants.FilterConstants'></ClassStats><ClassStats bugs='0' size='7' interface='true' sourceFile='QosConstants.java' class='org.apache.dubbo.common.constants.QosConstants'></ClassStats><ClassStats bugs='0' size='18' interface='true' sourceFile='RegistryConstants.java' class='org.apache.dubbo.common.constants.RegistryConstants'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='RemotingConstants.java' class='org.apache.dubbo.common.constants.RemotingConstants'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.extension' total_bugs='19' priority_2='14' priority_3='5' total_size='628' total_types='7'><ClassStats bugs='0' size='6' interface='true' sourceFile='Activate.java' class='org.apache.dubbo.common.extension.Activate'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='Adaptive.java' class='org.apache.dubbo.common.extension.Adaptive'></ClassStats><ClassStats bugs='14' size='162' priority_2='14' interface='false' sourceFile='AdaptiveClassCodeGenerator.java' class='org.apache.dubbo.common.extension.AdaptiveClassCodeGenerator'></ClassStats><ClassStats bugs='0' size='1' interface='true' sourceFile='DisableInject.java' class='org.apache.dubbo.common.extension.DisableInject'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='ExtensionFactory.java' class='org.apache.dubbo.common.extension.ExtensionFactory'></ClassStats><ClassStats bugs='5' size='453' priority_3='5' interface='false' sourceFile='ExtensionLoader.java' class='org.apache.dubbo.common.extension.ExtensionLoader'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='SPI.java' class='org.apache.dubbo.common.extension.SPI'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.extension.factory' total_bugs='0' total_size='27' total_types='2'><ClassStats bugs='0' size='18' interface='false' sourceFile='AdaptiveExtensionFactory.java' class='org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory'></ClassStats><ClassStats bugs='0' size='9' interface='false' sourceFile='SpiExtensionFactory.java' class='org.apache.dubbo.common.extension.factory.SpiExtensionFactory'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.extension.support' total_bugs='3' priority_2='2' priority_3='1' total_size='79' total_types='3'><ClassStats bugs='3' size='58' priority_2='2' priority_3='1' interface='false' sourceFile='ActivateComparator.java' class='org.apache.dubbo.common.extension.support.ActivateComparator'></ClassStats><ClassStats bugs='0' size='1' interface='false' sourceFile='ActivateComparator.java' class='org.apache.dubbo.common.extension.support.ActivateComparator$1'></ClassStats><ClassStats bugs='0' size='20' interface='false' sourceFile='ActivateComparator.java' class='org.apache.dubbo.common.extension.support.ActivateComparator$ActivateInfo'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.io' priority_1='2' total_bugs='7' priority_2='3' priority_3='2' total_size='716' total_types='8'><ClassStats bugs='1' size='365' priority_1='1' interface='false' sourceFile='Bytes.java' class='org.apache.dubbo.common.io.Bytes'></ClassStats><ClassStats bugs='1' size='16' priority_3='1' interface='false' sourceFile='StreamUtils.java' class='org.apache.dubbo.common.io.StreamUtils'></ClassStats><ClassStats bugs='2' size='51' priority_2='2' interface='false' sourceFile='StreamUtils.java' class='org.apache.dubbo.common.io.StreamUtils$1'></ClassStats><ClassStats bugs='1' size='66' priority_3='1' interface='false' sourceFile='StreamUtils.java' class='org.apache.dubbo.common.io.StreamUtils$2'></ClassStats><ClassStats bugs='1' size='60' priority_2='1' interface='false' sourceFile='UnsafeByteArrayInputStream.java' class='org.apache.dubbo.common.io.UnsafeByteArrayInputStream'></ClassStats><ClassStats bugs='1' size='48' priority_1='1' interface='false' sourceFile='UnsafeByteArrayOutputStream.java' class='org.apache.dubbo.common.io.UnsafeByteArrayOutputStream'></ClassStats><ClassStats bugs='0' size='58' interface='false' sourceFile='UnsafeStringReader.java' class='org.apache.dubbo.common.io.UnsafeStringReader'></ClassStats><ClassStats bugs='0' size='52' interface='false' sourceFile='UnsafeStringWriter.java' class='org.apache.dubbo.common.io.UnsafeStringWriter'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.json' priority_1='1' total_bugs='11' priority_2='5' priority_3='5' total_size='1582' total_types='52'><ClassStats bugs='0' size='166' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter'></ClassStats><ClassStats bugs='0' size='6' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$1'></ClassStats><ClassStats bugs='1' size='7' priority_2='1' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$10'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$11'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$12'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$13'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$14'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$15'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$16'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$17'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$18'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$19'></ClassStats><ClassStats bugs='0' size='6' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$2'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$20'></ClassStats><ClassStats bugs='1' size='7' priority_3='1' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$21'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$22'></ClassStats><ClassStats bugs='1' size='7' priority_3='1' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$23'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$24'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$25'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$26'></ClassStats><ClassStats bugs='0' size='5' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$27'></ClassStats><ClassStats bugs='0' size='5' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$28'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$29'></ClassStats><ClassStats bugs='0' size='6' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$3'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$30'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$31'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$32'></ClassStats><ClassStats bugs='0' size='11' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$33'></ClassStats><ClassStats bugs='0' size='12' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$34'></ClassStats><ClassStats bugs='0' size='6' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$4'></ClassStats><ClassStats bugs='0' size='6' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$5'></ClassStats><ClassStats bugs='0' size='6' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$6'></ClassStats><ClassStats bugs='0' size='6' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$7'></ClassStats><ClassStats bugs='0' size='6' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$8'></ClassStats><ClassStats bugs='0' size='6' interface='false' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$9'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$Decoder'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='GenericJSONConverter.java' class='org.apache.dubbo.common.json.GenericJSONConverter$Encoder'></ClassStats><ClassStats bugs='2' size='237' priority_3='2' interface='false' sourceFile='J2oVisitor.java' class='org.apache.dubbo.common.json.J2oVisitor'></ClassStats><ClassStats bugs='0' size='326' interface='false' sourceFile='JSON.java' class='org.apache.dubbo.common.json.JSON'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='JSON.java' class='org.apache.dubbo.common.json.JSON$Entry'></ClassStats><ClassStats bugs='0' size='52' interface='false' sourceFile='JSONArray.java' class='org.apache.dubbo.common.json.JSONArray'></ClassStats><ClassStats bugs='0' size='3' interface='true' sourceFile='JSONConverter.java' class='org.apache.dubbo.common.json.JSONConverter'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='JSONNode.java' class='org.apache.dubbo.common.json.JSONNode'></ClassStats><ClassStats bugs='0' size='59' interface='false' sourceFile='JSONObject.java' class='org.apache.dubbo.common.json.JSONObject'></ClassStats><ClassStats bugs='0' size='28' interface='false' sourceFile='JSONReader.java' class='org.apache.dubbo.common.json.JSONReader'></ClassStats><ClassStats bugs='0' size='3' interface='false' sourceFile='JSONReader.java' class='org.apache.dubbo.common.json.JSONReader$1'></ClassStats><ClassStats bugs='0' size='41' interface='false' sourceFile='JSONToken.java' class='org.apache.dubbo.common.json.JSONToken'></ClassStats><ClassStats bugs='0' size='12' interface='true' sourceFile='JSONVisitor.java' class='org.apache.dubbo.common.json.JSONVisitor'></ClassStats><ClassStats bugs='1' size='118' priority_2='1' interface='false' sourceFile='JSONWriter.java' class='org.apache.dubbo.common.json.JSONWriter'></ClassStats><ClassStats bugs='0' size='12' interface='false' sourceFile='JSONWriter.java' class='org.apache.dubbo.common.json.JSONWriter$State'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='ParseException.java' class='org.apache.dubbo.common.json.ParseException'></ClassStats><ClassStats bugs='5' size='269' priority_1='1' priority_2='3' priority_3='1' interface='false' sourceFile='Yylex.java' class='org.apache.dubbo.common.json.Yylex'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.logger' total_bugs='0' total_size='102' total_types='4'><ClassStats bugs='0' size='21' interface='false' sourceFile='Level.java' class='org.apache.dubbo.common.logger.Level'></ClassStats><ClassStats bugs='0' size='21' interface='true' sourceFile='Logger.java' class='org.apache.dubbo.common.logger.Logger'></ClassStats><ClassStats bugs='0' size='7' interface='true' sourceFile='LoggerAdapter.java' class='org.apache.dubbo.common.logger.LoggerAdapter'></ClassStats><ClassStats bugs='0' size='53' interface='false' sourceFile='LoggerFactory.java' class='org.apache.dubbo.common.logger.LoggerFactory'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.logger.jcl' total_bugs='1' priority_2='1' total_size='81' total_types='2'><ClassStats bugs='1' size='62' priority_2='1' interface='false' sourceFile='JclLogger.java' class='org.apache.dubbo.common.logger.jcl.JclLogger'></ClassStats><ClassStats bugs='0' size='19' interface='false' sourceFile='JclLoggerAdapter.java' class='org.apache.dubbo.common.logger.jcl.JclLoggerAdapter'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.logger.jdk' priority_1='1' total_bugs='1' total_size='125' total_types='2'><ClassStats bugs='0' size='61' interface='false' sourceFile='JdkLogger.java' class='org.apache.dubbo.common.logger.jdk.JdkLogger'></ClassStats><ClassStats bugs='1' size='64' priority_1='1' interface='false' sourceFile='JdkLoggerAdapter.java' class='org.apache.dubbo.common.logger.jdk.JdkLoggerAdapter'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.logger.log4j' total_bugs='0' total_size='124' total_types='2'><ClassStats bugs='0' size='64' interface='false' sourceFile='Log4jLogger.java' class='org.apache.dubbo.common.logger.log4j.Log4jLogger'></ClassStats><ClassStats bugs='0' size='60' interface='false' sourceFile='Log4jLoggerAdapter.java' class='org.apache.dubbo.common.logger.log4j.Log4jLoggerAdapter'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.logger.log4j2' total_bugs='2' priority_3='2' total_size='107' total_types='2'><ClassStats bugs='0' size='61' interface='false' sourceFile='Log4j2Logger.java' class='org.apache.dubbo.common.logger.log4j2.Log4j2Logger'></ClassStats><ClassStats bugs='2' size='46' priority_3='2' interface='false' sourceFile='Log4j2LoggerAdapter.java' class='org.apache.dubbo.common.logger.log4j2.Log4j2LoggerAdapter'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.logger.slf4j' total_bugs='2' priority_2='2' total_size='133' total_types='2'><ClassStats bugs='2' size='114' priority_2='2' interface='false' sourceFile='Slf4jLogger.java' class='org.apache.dubbo.common.logger.slf4j.Slf4jLogger'></ClassStats><ClassStats bugs='0' size='19' interface='false' sourceFile='Slf4jLoggerAdapter.java' class='org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.logger.support' total_bugs='0' total_size='108' total_types='1'><ClassStats bugs='0' size='108' interface='false' sourceFile='FailsafeLogger.java' class='org.apache.dubbo.common.logger.support.FailsafeLogger'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.status' total_bugs='0' total_size='39' total_types='3'><ClassStats bugs='0' size='22' interface='false' sourceFile='Status.java' class='org.apache.dubbo.common.status.Status'></ClassStats><ClassStats bugs='0' size='15' interface='false' sourceFile='Status.java' class='org.apache.dubbo.common.status.Status$Level'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='StatusChecker.java' class='org.apache.dubbo.common.status.StatusChecker'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.status.support' total_bugs='0' total_size='49' total_types='3'><ClassStats bugs='0' size='15' interface='false' sourceFile='LoadStatusChecker.java' class='org.apache.dubbo.common.status.support.LoadStatusChecker'></ClassStats><ClassStats bugs='0' size='11' interface='false' sourceFile='MemoryStatusChecker.java' class='org.apache.dubbo.common.status.support.MemoryStatusChecker'></ClassStats><ClassStats bugs='0' size='23' interface='false' sourceFile='StatusUtils.java' class='org.apache.dubbo.common.status.support.StatusUtils'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.store' total_bugs='0' total_size='5' total_types='1'><ClassStats bugs='0' size='5' interface='true' sourceFile='DataStore.java' class='org.apache.dubbo.common.store.DataStore'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.store.support' total_bugs='0' total_size='26' total_types='1'><ClassStats bugs='0' size='26' interface='false' sourceFile='SimpleDataStore.java' class='org.apache.dubbo.common.store.support.SimpleDataStore'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.threadlocal' total_bugs='0' total_size='227' total_types='4'><ClassStats bugs='0' size='31' interface='false' sourceFile='InternalThread.java' class='org.apache.dubbo.common.threadlocal.InternalThread'></ClassStats><ClassStats bugs='0' size='86' interface='false' sourceFile='InternalThreadLocal.java' class='org.apache.dubbo.common.threadlocal.InternalThreadLocal'></ClassStats><ClassStats bugs='0' size='95' interface='false' sourceFile='InternalThreadLocalMap.java' class='org.apache.dubbo.common.threadlocal.InternalThreadLocalMap'></ClassStats><ClassStats bugs='0' size='15' interface='false' sourceFile='NamedInternalThreadFactory.java' class='org.apache.dubbo.common.threadlocal.NamedInternalThreadFactory'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.threadpool' total_bugs='0' total_size='2' total_types='1'><ClassStats bugs='0' size='2' interface='true' sourceFile='ThreadPool.java' class='org.apache.dubbo.common.threadpool.ThreadPool'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.threadpool.support' total_bugs='1' priority_3='1' total_size='54' total_types='1'><ClassStats bugs='1' size='54' priority_3='1' interface='false' sourceFile='AbortPolicyWithReport.java' class='org.apache.dubbo.common.threadpool.support.AbortPolicyWithReport'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.threadpool.support.cached' total_bugs='0' total_size='10' total_types='1'><ClassStats bugs='0' size='10' interface='false' sourceFile='CachedThreadPool.java' class='org.apache.dubbo.common.threadpool.support.cached.CachedThreadPool'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.threadpool.support.eager' total_bugs='2' priority_2='1' priority_3='1' total_size='67' total_types='3'><ClassStats bugs='0' size='13' interface='false' sourceFile='EagerThreadPool.java' class='org.apache.dubbo.common.threadpool.support.eager.EagerThreadPool'></ClassStats><ClassStats bugs='0' size='30' interface='false' sourceFile='EagerThreadPoolExecutor.java' class='org.apache.dubbo.common.threadpool.support.eager.EagerThreadPoolExecutor'></ClassStats><ClassStats bugs='2' size='24' priority_2='1' priority_3='1' interface='false' sourceFile='TaskQueue.java' class='org.apache.dubbo.common.threadpool.support.eager.TaskQueue'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.threadpool.support.fixed' total_bugs='0' total_size='8' total_types='1'><ClassStats bugs='0' size='8' interface='false' sourceFile='FixedThreadPool.java' class='org.apache.dubbo.common.threadpool.support.fixed.FixedThreadPool'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.threadpool.support.limited' total_bugs='0' total_size='9' total_types='1'><ClassStats bugs='0' size='9' interface='false' sourceFile='LimitedThreadPool.java' class='org.apache.dubbo.common.threadpool.support.limited.LimitedThreadPool'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.timer' total_bugs='0' total_size='409' total_types='8'><ClassStats bugs='0' size='169' interface='false' sourceFile='HashedWheelTimer.java' class='org.apache.dubbo.common.timer.HashedWheelTimer'></ClassStats><ClassStats bugs='0' size='1' interface='false' sourceFile='HashedWheelTimer.java' class='org.apache.dubbo.common.timer.HashedWheelTimer$1'></ClassStats><ClassStats bugs='0' size='72' interface='false' sourceFile='HashedWheelTimer.java' class='org.apache.dubbo.common.timer.HashedWheelTimer$HashedWheelBucket'></ClassStats><ClassStats bugs='0' size='79' interface='false' sourceFile='HashedWheelTimer.java' class='org.apache.dubbo.common.timer.HashedWheelTimer$HashedWheelTimeout'></ClassStats><ClassStats bugs='0' size='76' interface='false' sourceFile='HashedWheelTimer.java' class='org.apache.dubbo.common.timer.HashedWheelTimer$Worker'></ClassStats><ClassStats bugs='0' size='6' interface='true' sourceFile='Timeout.java' class='org.apache.dubbo.common.timer.Timeout'></ClassStats><ClassStats bugs='0' size='4' interface='true' sourceFile='Timer.java' class='org.apache.dubbo.common.timer.Timer'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='TimerTask.java' class='org.apache.dubbo.common.timer.TimerTask'></ClassStats></PackageStats><PackageStats package='org.apache.dubbo.common.utils' priority_1='5' total_bugs='31' priority_2='8' priority_3='18' total_size='3266' total_types='31'><ClassStats bugs='0' size='8' interface='false' sourceFile='ArrayUtils.java' class='org.apache.dubbo.common.utils.ArrayUtils'></ClassStats><ClassStats bugs='0' size='16' interface='false' sourceFile='Assert.java' class='org.apache.dubbo.common.utils.Assert'></ClassStats><ClassStats bugs='0' size='76' interface='false' sourceFile='AtomicPositiveInteger.java' class='org.apache.dubbo.common.utils.AtomicPositiveInteger'></ClassStats><ClassStats bugs='0' size='64' interface='false' sourceFile='CIDRUtils.java' class='org.apache.dubbo.common.utils.CIDRUtils'></ClassStats><ClassStats bugs='0' size='33' interface='false' sourceFile='ClassHelper.java' class='org.apache.dubbo.common.utils.ClassHelper'></ClassStats><ClassStats bugs='0' size='118' interface='false' sourceFile='ClassUtils.java' class='org.apache.dubbo.common.utils.ClassUtils'></ClassStats><ClassStats bugs='0' size='113' interface='false' sourceFile='CollectionUtils.java' class='org.apache.dubbo.common.utils.CollectionUtils'></ClassStats><ClassStats bugs='0' size='18' interface='false' sourceFile='CollectionUtils.java' class='org.apache.dubbo.common.utils.CollectionUtils$1'></ClassStats><ClassStats bugs='7' size='108' priority_2='5' priority_3='2' interface='false' sourceFile='CompatibleTypeUtils.java' class='org.apache.dubbo.common.utils.CompatibleTypeUtils'></ClassStats><ClassStats bugs='1' size='29' priority_3='1' interface='false' sourceFile='ConcurrentHashSet.java' class='org.apache.dubbo.common.utils.ConcurrentHashSet'></ClassStats><ClassStats bugs='0' size='163' interface='false' sourceFile='ConfigUtils.java' class='org.apache.dubbo.common.utils.ConfigUtils'></ClassStats><ClassStats bugs='2' size='33' priority_1='1' priority_2='1' interface='false' sourceFile='DubboAppender.java' class='org.apache.dubbo.common.utils.DubboAppender'></ClassStats><ClassStats bugs='0' size='64' interface='false' sourceFile='ExecutorUtil.java' class='org.apache.dubbo.common.utils.ExecutorUtil'></ClassStats><ClassStats bugs='0' size='15' interface='false' sourceFile='ExecutorUtil.java' class='org.apache.dubbo.common.utils.ExecutorUtil$1'></ClassStats><ClassStats bugs='0' size='9' interface='false' sourceFile='Holder.java' class='org.apache.dubbo.common.utils.Holder'></ClassStats><ClassStats bugs='2' size='66' priority_1='2' interface='false' sourceFile='IOUtils.java' class='org.apache.dubbo.common.utils.IOUtils'></ClassStats><ClassStats bugs='2' size='57' priority_1='1' priority_3='1' interface='false' sourceFile='JVMUtil.java' class='org.apache.dubbo.common.utils.JVMUtil'></ClassStats><ClassStats bugs='0' size='4' interface='false' sourceFile='JVMUtil.java' class='org.apache.dubbo.common.utils.JVMUtil$1'></ClassStats><ClassStats bugs='0' size='52' interface='false' sourceFile='LRUCache.java' class='org.apache.dubbo.common.utils.LRUCache'></ClassStats><ClassStats bugs='0' size='65' interface='false' sourceFile='Log.java' class='org.apache.dubbo.common.utils.Log'></ClassStats><ClassStats bugs='0' size='94' interface='false' sourceFile='LogHelper.java' class='org.apache.dubbo.common.utils.LogHelper'></ClassStats><ClassStats bugs='1' size='72' priority_3='1' interface='false' sourceFile='LogUtil.java' class='org.apache.dubbo.common.utils.LogUtil'></ClassStats><ClassStats bugs='0' size='17' interface='false' sourceFile='MethodUtils.java' class='org.apache.dubbo.common.utils.MethodUtils'></ClassStats><ClassStats bugs='0' size='29' interface='false' sourceFile='NamedThreadFactory.java' class='org.apache.dubbo.common.utils.NamedThreadFactory'></ClassStats><ClassStats bugs='0' size='301' interface='false' sourceFile='NetUtils.java' class='org.apache.dubbo.common.utils.NetUtils'></ClassStats><ClassStats bugs='8' size='359' priority_1='1' priority_2='2' priority_3='5' interface='false' sourceFile='PojoUtils.java' class='org.apache.dubbo.common.utils.PojoUtils'></ClassStats><ClassStats bugs='1' size='19' priority_3='1' interface='false' sourceFile='PojoUtils.java' class='org.apache.dubbo.common.utils.PojoUtils$PojoInvocationHandler'></ClassStats><ClassStats bugs='4' size='596' priority_3='4' interface='false' sourceFile='ReflectUtils.java' class='org.apache.dubbo.common.utils.ReflectUtils'></ClassStats><ClassStats bugs='0' size='44' interface='false' sourceFile='Stack.java' class='org.apache.dubbo.common.utils.Stack'></ClassStats><ClassStats bugs='2' size='317' priority_3='2' interface='false' sourceFile='StringUtils.java' class='org.apache.dubbo.common.utils.StringUtils'></ClassStats><ClassStats bugs='1' size='307' priority_3='1' interface='false' sourceFile='UrlUtils.java' class='org.apache.dubbo.common.utils.UrlUtils'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='269' totalMilliseconds='479' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' maxMicrosecondsPerInvocation='17918' standardDeviationMicrosecondsPerInvocation='514' invocations='1779'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='280' totalMilliseconds='467' name='edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory' maxMicrosecondsPerInvocation='13592' standardDeviationMicrosecondsPerInvocation='775' invocations='1665'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='273' totalMilliseconds='454' name='edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder' maxMicrosecondsPerInvocation='37523' standardDeviationMicrosecondsPerInvocation='1132' invocations='1659'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='262' totalMilliseconds='448' name='edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory' maxMicrosecondsPerInvocation='60096' standardDeviationMicrosecondsPerInvocation='1598' invocations='1704'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='252' totalMilliseconds='447' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' maxMicrosecondsPerInvocation='32440' standardDeviationMicrosecondsPerInvocation='1048' invocations='1774'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='238' totalMilliseconds='410' name='edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory' maxMicrosecondsPerInvocation='51544' standardDeviationMicrosecondsPerInvocation='1420' invocations='1719'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='220' totalMilliseconds='366' name='edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory' maxMicrosecondsPerInvocation='12562' standardDeviationMicrosecondsPerInvocation='695' invocations='1663'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='441' totalMilliseconds='258' name='edu.umd.cs.findbugs.detect.FieldItemSummary' maxMicrosecondsPerInvocation='10431' standardDeviationMicrosecondsPerInvocation='1047' invocations='585'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='90' totalMilliseconds='247' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' maxMicrosecondsPerInvocation='4653' standardDeviationMicrosecondsPerInvocation='222' invocations='2724'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='146' totalMilliseconds='244' name='edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory' maxMicrosecondsPerInvocation='10553' standardDeviationMicrosecondsPerInvocation='353' invocations='1665'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='415' totalMilliseconds='243' name='edu.umd.cs.findbugs.detect.FindNoSideEffectMethods' maxMicrosecondsPerInvocation='7307' standardDeviationMicrosecondsPerInvocation='753' invocations='585'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='157' totalMilliseconds='234' name='edu.umd.cs.findbugs.detect.FindRefComparison$SpecialTypeAnalysis' maxMicrosecondsPerInvocation='7016' standardDeviationMicrosecondsPerInvocation='404' invocations='1493'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='118' totalMilliseconds='207' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' maxMicrosecondsPerInvocation='131832' standardDeviationMicrosecondsPerInvocation='3147' invocations='1753'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='205' totalMilliseconds='120' name='edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures' maxMicrosecondsPerInvocation='53328' standardDeviationMicrosecondsPerInvocation='2220' invocations='585'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2' totalMilliseconds='107' name='edu.umd.cs.findbugs.ba.npe.TypeQualifierNullnessAnnotationDatabase' maxMicrosecondsPerInvocation='1912' standardDeviationMicrosecondsPerInvocation='10' invocations='46610'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='60' totalMilliseconds='101' name='edu.umd.cs.findbugs.classfile.engine.bcel.ConstantDataflowFactory' maxMicrosecondsPerInvocation='5120' standardDeviationMicrosecondsPerInvocation='205' invocations='1665'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='57' totalMilliseconds='97' name='edu.umd.cs.findbugs.util.TopologicalSort' maxMicrosecondsPerInvocation='33143' standardDeviationMicrosecondsPerInvocation='811' invocations='1704'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='151' totalMilliseconds='88' name='edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers' maxMicrosecondsPerInvocation='6529' standardDeviationMicrosecondsPerInvocation='401' invocations='585'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='128' totalMilliseconds='87' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' maxMicrosecondsPerInvocation='14042' standardDeviationMicrosecondsPerInvocation='572' invocations='682'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='137' totalMilliseconds='80' name='edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase' maxMicrosecondsPerInvocation='8206' standardDeviationMicrosecondsPerInvocation='393' invocations='585'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='396' totalMilliseconds='76' name='edu.umd.cs.findbugs.detect.DumbMethods' maxMicrosecondsPerInvocation='6674' standardDeviationMicrosecondsPerInvocation='804' invocations='192'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='376' totalMilliseconds='72' name='edu.umd.cs.findbugs.detect.LoadOfKnownNullValue' maxMicrosecondsPerInvocation='4351' standardDeviationMicrosecondsPerInvocation='683' invocations='192'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='372' totalMilliseconds='71' name='edu.umd.cs.findbugs.detect.FindOpenStream' maxMicrosecondsPerInvocation='6925' standardDeviationMicrosecondsPerInvocation='1106' invocations='192'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2' totalMilliseconds='67' name='edu.umd.cs.findbugs.DetectorToDetector2Adapter' maxMicrosecondsPerInvocation='68' standardDeviationMicrosecondsPerInvocation='1' invocations='24027'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='106' totalMilliseconds='62' name='edu.umd.cs.findbugs.detect.BuildStringPassthruGraph' maxMicrosecondsPerInvocation='2280' standardDeviationMicrosecondsPerInvocation='248' invocations='585'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='319' totalMilliseconds='61' name='edu.umd.cs.findbugs.detect.FindDeadLocalStores' maxMicrosecondsPerInvocation='4094' standardDeviationMicrosecondsPerInvocation='640' invocations='192'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='313' totalMilliseconds='60' name='edu.umd.cs.findbugs.detect.FindInconsistentSync2' maxMicrosecondsPerInvocation='3573' standardDeviationMicrosecondsPerInvocation='524' invocations='192'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='311' totalMilliseconds='59' name='edu.umd.cs.findbugs.detect.UnreadFields' maxMicrosecondsPerInvocation='3359' standardDeviationMicrosecondsPerInvocation='446' invocations='192'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='36' totalMilliseconds='59' name='edu.umd.cs.findbugs.classfile.engine.bcel.LiveLocalStoreDataflowFactory' maxMicrosecondsPerInvocation='3073' standardDeviationMicrosecondsPerInvocation='111' invocations='1607'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='33' totalMilliseconds='58' name='edu.umd.cs.findbugs.classfile.engine.bcel.ValueRangeAnalysisFactory' maxMicrosecondsPerInvocation='2560' standardDeviationMicrosecondsPerInvocation='132' invocations='1753'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='97' totalMilliseconds='57' name='edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical' maxMicrosecondsPerInvocation='6389' standardDeviationMicrosecondsPerInvocation='311' invocations='585'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='33' totalMilliseconds='56' name='edu.umd.cs.findbugs.detect.FindNullDeref$CheckCallSitesAndReturnInstructions' maxMicrosecondsPerInvocation='2557' standardDeviationMicrosecondsPerInvocation='91' invocations='1659'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='145' totalMilliseconds='56' name='edu.umd.cs.findbugs.ba.obl.ObligationAnalysis' maxMicrosecondsPerInvocation='4688' standardDeviationMicrosecondsPerInvocation='318' invocations='385'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>