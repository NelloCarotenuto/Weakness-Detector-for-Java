
<BugCollection sequence='0' release='' analysisTimestamp='1568288442110' version='3.1.12' timestamp='1568288235000'><Project projectName='rocketmq-filter 4.3.0'><Jar>./rocketmq/filter/target/classes</Jar><AuxClasspathEntry>.m2/repository/org/apache/rocketmq/rocketmq-common/4.3.0/rocketmq-common-4.3.0.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/org/apache/rocketmq/rocketmq-remoting/4.3.0/rocketmq-remoting-4.3.0.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/com/alibaba/fastjson/1.2.29/fastjson-1.2.29.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/io/netty/netty-all/4.0.42.Final/netty-all-4.0.42.Final.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/org/apache/rocketmq/rocketmq-logging/4.3.0/rocketmq-logging-4.3.0.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/io/netty/netty-tcnative-boringssl-static/1.1.33.Fork26/netty-tcnative-boringssl-static-1.1.33.Fork26.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/org/apache/rocketmq/rocketmq-srvutil/4.3.0/rocketmq-srvutil-4.3.0.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/commons-cli/commons-cli/1.2/commons-cli-1.2.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/com/google/guava/guava/19.0/guava-19.0.jar</AuxClasspathEntry><SrcDir>./rocketmq/filter/src/main/java</SrcDir><WrkDir>./rocketmq/filter/target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='f46025e3144fede845a4f18c7f6a0ac3' cweid='218' rank='18' abbrev='MS' category='MALICIOUS_CODE' priority='2' type='MS_MUTABLE_COLLECTION_PKGPROTECT' instanceOccurrenceMax='0'><ShortMessage>Field is a mutable collection which should be package protected</ShortMessage><LongMessage>org.apache.rocketmq.filter.FilterFactory.FILTER_SPI_HOLDER is a mutable collection which should be package protected</LongMessage><Class classname='org.apache.rocketmq.filter.FilterFactory' primary='true'><SourceLine classname='org.apache.rocketmq.filter.FilterFactory' start='26' end='61' sourcepath='org/apache/rocketmq/filter/FilterFactory.java' sourcefile='FilterFactory.java'><Message>At FilterFactory.java:[lines 26-61]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.FilterFactory</Message></Class><Field isStatic='true' classname='org.apache.rocketmq.filter.FilterFactory' signature='Ljava/util/Map;' name='FILTER_SPI_HOLDER' primary='true'><SourceLine classname='org.apache.rocketmq.filter.FilterFactory' sourcepath='org/apache/rocketmq/filter/FilterFactory.java' sourcefile='FilterFactory.java'><Message>In FilterFactory.java</Message></SourceLine><Message>Field org.apache.rocketmq.filter.FilterFactory.FILTER_SPI_HOLDER</Message></Field><SourceLine endBytecode='18' classname='org.apache.rocketmq.filter.FilterFactory' start='30' end='30' sourcepath='org/apache/rocketmq/filter/FilterFactory.java' sourcefile='FilterFactory.java' startBytecode='18' primary='true'><Message>At FilterFactory.java:[line 30]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='60017afae3b1a7e319f62b5d1c3bc5f7' rank='18' abbrev='Bx' category='PERFORMANCE' priority='2' type='BX_UNBOXING_IMMEDIATELY_REBOXED' instanceOccurrenceMax='0'><ShortMessage>Boxed value is unboxed and then immediately reboxed</ShortMessage><LongMessage>Boxed value is unboxed and then immediately reboxed in org.apache.rocketmq.filter.expression.ComparisonExpression.__compare(Comparable, Comparable, boolean)</LongMessage><Class classname='org.apache.rocketmq.filter.expression.ComparisonExpression' primary='true'><SourceLine classname='org.apache.rocketmq.filter.expression.ComparisonExpression' start='35' end='406' sourcepath='org/apache/rocketmq/filter/expression/ComparisonExpression.java' sourcefile='ComparisonExpression.java'><Message>At ComparisonExpression.java:[lines 35-406]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.expression.ComparisonExpression</Message></Class><Method isStatic='true' classname='org.apache.rocketmq.filter.expression.ComparisonExpression' signature='(Ljava/lang/Comparable;Ljava/lang/Comparable;Z)I' name='__compare' primary='true'><SourceLine endBytecode='1521' classname='org.apache.rocketmq.filter.expression.ComparisonExpression' start='279' end='394' sourcepath='org/apache/rocketmq/filter/expression/ComparisonExpression.java' sourcefile='ComparisonExpression.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.expression.ComparisonExpression.__compare(Comparable, Comparable, boolean)</Message></Method><Method isStatic='true' role='METHOD_CALLED' classname='java.lang.Boolean' signature='(Z)Ljava/lang/Boolean;' name='valueOf'><SourceLine endBytecode='50' classname='java.lang.Boolean' start='150' end='150' sourcepath='java/lang/Boolean.java' sourcefile='Boolean.java' startBytecode='0'></SourceLine><Message>Called method Boolean.valueOf(boolean)</Message></Method><SourceLine endBytecode='44' classname='org.apache.rocketmq.filter.expression.ComparisonExpression' start='287' end='287' sourcepath='org/apache/rocketmq/filter/expression/ComparisonExpression.java' sourcefile='ComparisonExpression.java' startBytecode='44' primary='true'><Message>At ComparisonExpression.java:[line 287]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='abff386eab000335e6697e098bf18628' rank='20' abbrev='Bx' category='PERFORMANCE' priority='3' type='DM_FP_NUMBER_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortMessage><LongMessage>org.apache.rocketmq.filter.expression.ComparisonExpression.__compare(Comparable, Comparable, boolean) invokes inefficient new Double(double) constructor; use Double.valueOf(double) instead</LongMessage><Class classname='org.apache.rocketmq.filter.expression.ComparisonExpression' primary='true'><SourceLine classname='org.apache.rocketmq.filter.expression.ComparisonExpression' start='35' end='406' sourcepath='org/apache/rocketmq/filter/expression/ComparisonExpression.java' sourcefile='ComparisonExpression.java'><Message>At ComparisonExpression.java:[lines 35-406]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.expression.ComparisonExpression</Message></Class><Method isStatic='true' classname='org.apache.rocketmq.filter.expression.ComparisonExpression' signature='(Ljava/lang/Comparable;Ljava/lang/Comparable;Z)I' name='__compare' primary='true'><SourceLine endBytecode='1521' classname='org.apache.rocketmq.filter.expression.ComparisonExpression' start='279' end='394' sourcepath='org/apache/rocketmq/filter/expression/ComparisonExpression.java' sourcefile='ComparisonExpression.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.expression.ComparisonExpression.__compare(Comparable, Comparable, boolean)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.Double' signature='(D)V' name='&lt;init&gt;'><SourceLine endBytecode='41' classname='java.lang.Double' start='592' end='594' sourcepath='java/lang/Double.java' sourcefile='Double.java' startBytecode='0'></SourceLine><Message>Called method new Double(double)</Message></Method><Method isStatic='true' role='SHOULD_CALL' classname='java.lang.Double' signature='(D)Ljava/lang/Double;' name='valueOf'><SourceLine endBytecode='32' classname='java.lang.Double' start='519' end='519' sourcepath='java/lang/Double.java' sourcefile='Double.java' startBytecode='0'></SourceLine><Message>Should call Double.valueOf(double) instead</Message></Method><SourceLine endBytecode='165' classname='org.apache.rocketmq.filter.expression.ComparisonExpression' start='301' end='301' sourcepath='org/apache/rocketmq/filter/expression/ComparisonExpression.java' sourcefile='ComparisonExpression.java' startBytecode='165' primary='true'><Message>At ComparisonExpression.java:[line 301]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='287' classname='org.apache.rocketmq.filter.expression.ComparisonExpression' start='315' end='315' sourcepath='org/apache/rocketmq/filter/expression/ComparisonExpression.java' sourcefile='ComparisonExpression.java' startBytecode='287'><Message>Another occurrence at ComparisonExpression.java:[line 315]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='388' classname='org.apache.rocketmq.filter.expression.ComparisonExpression' start='327' end='327' sourcepath='org/apache/rocketmq/filter/expression/ComparisonExpression.java' sourcefile='ComparisonExpression.java' startBytecode='388'><Message>Another occurrence at ComparisonExpression.java:[line 327]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='489' classname='org.apache.rocketmq.filter.expression.ComparisonExpression' start='339' end='339' sourcepath='org/apache/rocketmq/filter/expression/ComparisonExpression.java' sourcefile='ComparisonExpression.java' startBytecode='489'><Message>Another occurrence at ComparisonExpression.java:[line 339]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='594' classname='org.apache.rocketmq.filter.expression.ComparisonExpression' start='351' end='351' sourcepath='org/apache/rocketmq/filter/expression/ComparisonExpression.java' sourcefile='ComparisonExpression.java' startBytecode='594'><Message>Another occurrence at ComparisonExpression.java:[line 351]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='649' classname='org.apache.rocketmq.filter.expression.ComparisonExpression' start='359' end='359' sourcepath='org/apache/rocketmq/filter/expression/ComparisonExpression.java' sourcefile='ComparisonExpression.java' startBytecode='649'><Message>Another occurrence at ComparisonExpression.java:[line 359]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='674' classname='org.apache.rocketmq.filter.expression.ComparisonExpression' start='361' end='361' sourcepath='org/apache/rocketmq/filter/expression/ComparisonExpression.java' sourcefile='ComparisonExpression.java' startBytecode='674'><Message>Another occurrence at ComparisonExpression.java:[line 361]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='488290fb81b66639007f0f75881f46fb' rank='20' abbrev='Bx' category='PERFORMANCE' priority='3' type='DM_FP_NUMBER_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortMessage><LongMessage>org.apache.rocketmq.filter.expression.ComparisonExpression.__compare(Comparable, Comparable, boolean) invokes inefficient new Float(float) constructor; use Float.valueOf(float) instead</LongMessage><Class classname='org.apache.rocketmq.filter.expression.ComparisonExpression' primary='true'><SourceLine classname='org.apache.rocketmq.filter.expression.ComparisonExpression' start='35' end='406' sourcepath='org/apache/rocketmq/filter/expression/ComparisonExpression.java' sourcefile='ComparisonExpression.java'><Message>At ComparisonExpression.java:[lines 35-406]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.expression.ComparisonExpression</Message></Class><Method isStatic='true' classname='org.apache.rocketmq.filter.expression.ComparisonExpression' signature='(Ljava/lang/Comparable;Ljava/lang/Comparable;Z)I' name='__compare' primary='true'><SourceLine endBytecode='1521' classname='org.apache.rocketmq.filter.expression.ComparisonExpression' start='279' end='394' sourcepath='org/apache/rocketmq/filter/expression/ComparisonExpression.java' sourcefile='ComparisonExpression.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.expression.ComparisonExpression.__compare(Comparable, Comparable, boolean)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.Float' signature='(F)V' name='&lt;init&gt;'><SourceLine endBytecode='41' classname='java.lang.Float' start='506' end='508' sourcepath='java/lang/Float.java' sourcefile='Float.java' startBytecode='0'></SourceLine><Message>Called method new Float(float)</Message></Method><Method isStatic='true' role='SHOULD_CALL' classname='java.lang.Float' signature='(F)Ljava/lang/Float;' name='valueOf'><SourceLine endBytecode='32' classname='java.lang.Float' start='433' end='433' sourcepath='java/lang/Float.java' sourcefile='Float.java' startBytecode='0'></SourceLine><Message>Should call Float.valueOf(float) instead</Message></Method><SourceLine endBytecode='140' classname='org.apache.rocketmq.filter.expression.ComparisonExpression' start='299' end='299' sourcepath='org/apache/rocketmq/filter/expression/ComparisonExpression.java' sourcefile='ComparisonExpression.java' startBytecode='140' primary='true'><Message>At ComparisonExpression.java:[line 299]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='262' classname='org.apache.rocketmq.filter.expression.ComparisonExpression' start='313' end='313' sourcepath='org/apache/rocketmq/filter/expression/ComparisonExpression.java' sourcefile='ComparisonExpression.java' startBytecode='262'><Message>Another occurrence at ComparisonExpression.java:[line 313]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='363' classname='org.apache.rocketmq.filter.expression.ComparisonExpression' start='325' end='325' sourcepath='org/apache/rocketmq/filter/expression/ComparisonExpression.java' sourcefile='ComparisonExpression.java' startBytecode='363'><Message>Another occurrence at ComparisonExpression.java:[line 325]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='464' classname='org.apache.rocketmq.filter.expression.ComparisonExpression' start='337' end='337' sourcepath='org/apache/rocketmq/filter/expression/ComparisonExpression.java' sourcefile='ComparisonExpression.java' startBytecode='464'><Message>Another occurrence at ComparisonExpression.java:[line 337]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='544' classname='org.apache.rocketmq.filter.expression.ComparisonExpression' start='347' end='347' sourcepath='org/apache/rocketmq/filter/expression/ComparisonExpression.java' sourcefile='ComparisonExpression.java' startBytecode='544'><Message>Another occurrence at ComparisonExpression.java:[line 347]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='569' classname='org.apache.rocketmq.filter.expression.ComparisonExpression' start='349' end='349' sourcepath='org/apache/rocketmq/filter/expression/ComparisonExpression.java' sourcefile='ComparisonExpression.java' startBytecode='569'><Message>Another occurrence at ComparisonExpression.java:[line 349]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='afd32a863f49b1eebb62b823b27ba61' rank='16' abbrev='RC' category='BAD_PRACTICE' priority='2' type='RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN' instanceOccurrenceMax='0'><ShortMessage>Suspicious reference comparison of Boolean values</ShortMessage><LongMessage>Suspicious comparison of Boolean references in org.apache.rocketmq.filter.expression.ComparisonExpression.matches(EvaluationContext)</LongMessage><Class classname='org.apache.rocketmq.filter.expression.ComparisonExpression' primary='true'><SourceLine classname='org.apache.rocketmq.filter.expression.ComparisonExpression' start='35' end='406' sourcepath='org/apache/rocketmq/filter/expression/ComparisonExpression.java' sourcefile='ComparisonExpression.java'><Message>At ComparisonExpression.java:[lines 35-406]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.expression.ComparisonExpression</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.expression.ComparisonExpression' signature='(Lorg/apache/rocketmq/filter/expression/EvaluationContext;)Z' name='matches' primary='true'><SourceLine endBytecode='12' classname='org.apache.rocketmq.filter.expression.ComparisonExpression' start='405' end='406' sourcepath='org/apache/rocketmq/filter/expression/ComparisonExpression.java' sourcefile='ComparisonExpression.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.expression.ComparisonExpression.matches(EvaluationContext)</Message></Method><Type role='TYPE_FOUND' descriptor='Ljava/lang/Boolean;'><SourceLine classname='java.lang.Boolean' start='43' end='333' sourcepath='java/lang/Boolean.java' sourcefile='Boolean.java'><Message>At Boolean.java:[lines 43-333]</Message></SourceLine><Message>Actual type Boolean</Message></Type><Field isStatic='true' role='FIELD_VALUE_OF' classname='java.lang.Boolean' signature='Ljava/lang/Boolean;' name='TRUE' primary='true'><SourceLine classname='java.lang.Boolean' sourcepath='java/lang/Boolean.java' sourcefile='Boolean.java'><Message>In Boolean.java</Message></SourceLine><Message>Value loaded from field java.lang.Boolean.TRUE</Message></Field><SourceLine endBytecode='14' classname='org.apache.rocketmq.filter.expression.ComparisonExpression' start='406' end='406' sourcepath='org/apache/rocketmq/filter/expression/ComparisonExpression.java' sourcefile='ComparisonExpression.java' startBytecode='14' primary='true'><Message>At ComparisonExpression.java:[line 406]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='6caa7bace94bef6978b0592edc5e9617' rank='20' abbrev='Bx' category='PERFORMANCE' priority='3' type='DM_FP_NUMBER_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortMessage><LongMessage>org.apache.rocketmq.filter.expression.ConstantExpression.createFloat(String) invokes inefficient new Double(String) constructor; use Double.valueOf(String) instead</LongMessage><Class classname='org.apache.rocketmq.filter.expression.ConstantExpression' primary='true'><SourceLine classname='org.apache.rocketmq.filter.expression.ConstantExpression' start='44' end='151' sourcepath='org/apache/rocketmq/filter/expression/ConstantExpression.java' sourcefile='ConstantExpression.java'><Message>At ConstantExpression.java:[lines 44-151]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.expression.ConstantExpression</Message></Class><Method isStatic='true' classname='org.apache.rocketmq.filter.expression.ConstantExpression' signature='(Ljava/lang/String;)Lorg/apache/rocketmq/filter/expression/ConstantExpression;' name='createFloat' primary='true'><SourceLine endBytecode='192' classname='org.apache.rocketmq.filter.expression.ConstantExpression' start='78' end='85' sourcepath='org/apache/rocketmq/filter/expression/ConstantExpression.java' sourcefile='ConstantExpression.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.expression.ConstantExpression.createFloat(String)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.Double' signature='(Ljava/lang/String;)V' name='&lt;init&gt;'><SourceLine endBytecode='44' classname='java.lang.Double' start='607' end='609' sourcepath='java/lang/Double.java' sourcefile='Double.java' startBytecode='0'></SourceLine><Message>Called method new Double(String)</Message></Method><Method isStatic='true' role='SHOULD_CALL' classname='java.lang.Double' signature='(Ljava/lang/String;)Ljava/lang/Double;' name='valueOf'><SourceLine endBytecode='35' classname='java.lang.Double' start='502' end='502' sourcepath='java/lang/Double.java' sourcefile='Double.java' startBytecode='0'></SourceLine><Message>Should call Double.valueOf(String) instead</Message></Method><SourceLine endBytecode='5' classname='org.apache.rocketmq.filter.expression.ConstantExpression' start='78' end='78' sourcepath='org/apache/rocketmq/filter/expression/ConstantExpression.java' sourcefile='ConstantExpression.java' startBytecode='5' primary='true'><Message>At ConstantExpression.java:[line 78]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f9590b70e01fca3251581236c329792b' rank='18' abbrev='Bx' category='PERFORMANCE' priority='2' type='DM_NUMBER_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage><LongMessage>org.apache.rocketmq.filter.expression.ConstantExpression.createFromDecimal(String) invokes inefficient new Long(String) constructor; use Long.valueOf(String) instead</LongMessage><Class classname='org.apache.rocketmq.filter.expression.ConstantExpression' primary='true'><SourceLine classname='org.apache.rocketmq.filter.expression.ConstantExpression' start='44' end='151' sourcepath='org/apache/rocketmq/filter/expression/ConstantExpression.java' sourcefile='ConstantExpression.java'><Message>At ConstantExpression.java:[lines 44-151]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.expression.ConstantExpression</Message></Class><Method isStatic='true' classname='org.apache.rocketmq.filter.expression.ConstantExpression' signature='(Ljava/lang/String;)Lorg/apache/rocketmq/filter/expression/ConstantExpression;' name='createFromDecimal' primary='true'><SourceLine endBytecode='179' classname='org.apache.rocketmq.filter.expression.ConstantExpression' start='57' end='74' sourcepath='org/apache/rocketmq/filter/expression/ConstantExpression.java' sourcefile='ConstantExpression.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.expression.ConstantExpression.createFromDecimal(String)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.Long' signature='(Ljava/lang/String;)V' name='&lt;init&gt;'><SourceLine endBytecode='46' classname='java.lang.Long' start='964' end='966' sourcepath='java/lang/Long.java' sourcefile='Long.java' startBytecode='0'></SourceLine><Message>Called method new Long(String)</Message></Method><Method isStatic='true' role='SHOULD_CALL' classname='java.lang.Long' signature='(Ljava/lang/String;)Ljava/lang/Long;' name='valueOf'><SourceLine endBytecode='33' classname='java.lang.Long' start='803' end='803' sourcepath='java/lang/Long.java' sourcefile='Long.java' startBytecode='0'></SourceLine><Message>Should call Long.valueOf(String) instead</Message></Method><SourceLine endBytecode='35' classname='org.apache.rocketmq.filter.expression.ConstantExpression' start='62' end='62' sourcepath='org/apache/rocketmq/filter/expression/ConstantExpression.java' sourcefile='ConstantExpression.java' startBytecode='35' primary='true'><Message>At ConstantExpression.java:[line 62]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='2f6b5ba6c15112a26cbe98648a24bc1f' rank='16' abbrev='RC' category='BAD_PRACTICE' priority='2' type='RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN' instanceOccurrenceMax='0'><ShortMessage>Suspicious reference comparison of Boolean values</ShortMessage><LongMessage>Suspicious comparison of Boolean references in org.apache.rocketmq.filter.expression.ConstantExpression$BooleanConstantExpression.matches(EvaluationContext)</LongMessage><Class classname='org.apache.rocketmq.filter.expression.ConstantExpression$BooleanConstantExpression' primary='true'><SourceLine classname='org.apache.rocketmq.filter.expression.ConstantExpression$BooleanConstantExpression' start='35' end='40' sourcepath='org/apache/rocketmq/filter/expression/ConstantExpression.java' sourcefile='ConstantExpression.java'><Message>At ConstantExpression.java:[lines 35-40]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.expression.ConstantExpression$BooleanConstantExpression</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.expression.ConstantExpression$BooleanConstantExpression' signature='(Lorg/apache/rocketmq/filter/expression/EvaluationContext;)Z' name='matches' primary='true'><SourceLine endBytecode='12' classname='org.apache.rocketmq.filter.expression.ConstantExpression$BooleanConstantExpression' start='39' end='40' sourcepath='org/apache/rocketmq/filter/expression/ConstantExpression.java' sourcefile='ConstantExpression.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.expression.ConstantExpression$BooleanConstantExpression.matches(EvaluationContext)</Message></Method><Type role='TYPE_FOUND' descriptor='Ljava/lang/Boolean;'><SourceLine classname='java.lang.Boolean' start='43' end='333' sourcepath='java/lang/Boolean.java' sourcefile='Boolean.java'><Message>At Boolean.java:[lines 43-333]</Message></SourceLine><Message>Actual type Boolean</Message></Type><Field isStatic='true' role='FIELD_VALUE_OF' classname='java.lang.Boolean' signature='Ljava/lang/Boolean;' name='TRUE' primary='true'><SourceLine classname='java.lang.Boolean' sourcepath='java/lang/Boolean.java' sourcefile='Boolean.java'><Message>In Boolean.java</Message></SourceLine><Message>Value loaded from field java.lang.Boolean.TRUE</Message></Field><SourceLine endBytecode='14' classname='org.apache.rocketmq.filter.expression.ConstantExpression$BooleanConstantExpression' start='40' end='40' sourcepath='org/apache/rocketmq/filter/expression/ConstantExpression.java' sourcefile='ConstantExpression.java' startBytecode='14' primary='true'><Message>At ConstantExpression.java:[line 40]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='521f0899319f34c42412ded4c3a09297' rank='16' abbrev='RC' category='BAD_PRACTICE' priority='2' type='RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN' instanceOccurrenceMax='0'><ShortMessage>Suspicious reference comparison of Boolean values</ShortMessage><LongMessage>Suspicious comparison of Boolean references in org.apache.rocketmq.filter.expression.LogicExpression.matches(EvaluationContext)</LongMessage><Class classname='org.apache.rocketmq.filter.expression.LogicExpression' primary='true'><SourceLine classname='org.apache.rocketmq.filter.expression.LogicExpression' start='33' end='91' sourcepath='org/apache/rocketmq/filter/expression/LogicExpression.java' sourcefile='LogicExpression.java'><Message>At LogicExpression.java:[lines 33-91]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.expression.LogicExpression</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.expression.LogicExpression' signature='(Lorg/apache/rocketmq/filter/expression/EvaluationContext;)Z' name='matches' primary='true'><SourceLine endBytecode='12' classname='org.apache.rocketmq.filter.expression.LogicExpression' start='90' end='91' sourcepath='org/apache/rocketmq/filter/expression/LogicExpression.java' sourcefile='LogicExpression.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.expression.LogicExpression.matches(EvaluationContext)</Message></Method><Type role='TYPE_FOUND' descriptor='Ljava/lang/Boolean;'><SourceLine classname='java.lang.Boolean' start='43' end='333' sourcepath='java/lang/Boolean.java' sourcefile='Boolean.java'><Message>At Boolean.java:[lines 43-333]</Message></SourceLine><Message>Actual type Boolean</Message></Type><Field isStatic='true' role='FIELD_VALUE_OF' classname='java.lang.Boolean' signature='Ljava/lang/Boolean;' name='TRUE' primary='true'><SourceLine classname='java.lang.Boolean' sourcepath='java/lang/Boolean.java' sourcefile='Boolean.java'><Message>In Boolean.java</Message></SourceLine><Message>Value loaded from field java.lang.Boolean.TRUE</Message></Field><SourceLine endBytecode='14' classname='org.apache.rocketmq.filter.expression.LogicExpression' start='91' end='91' sourcepath='org/apache/rocketmq/filter/expression/LogicExpression.java' sourcefile='LogicExpression.java' startBytecode='14' primary='true'><Message>At LogicExpression.java:[line 91]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='119dec24aaeff820978e34369297afba' rank='18' abbrev='Bx' category='PERFORMANCE' priority='2' type='DM_NUMBER_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage><LongMessage>org.apache.rocketmq.filter.expression.NowExpression.evaluate(EvaluationContext) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead</LongMessage><Class classname='org.apache.rocketmq.filter.expression.NowExpression' primary='true'><SourceLine classname='org.apache.rocketmq.filter.expression.NowExpression' start='25' end='34' sourcepath='org/apache/rocketmq/filter/expression/NowExpression.java' sourcefile='NowExpression.java'><Message>At NowExpression.java:[lines 25-34]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.expression.NowExpression</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.expression.NowExpression' signature='(Lorg/apache/rocketmq/filter/expression/EvaluationContext;)Ljava/lang/Object;' name='evaluate' primary='true'><SourceLine endBytecode='62' classname='org.apache.rocketmq.filter.expression.NowExpression' start='30' end='30' sourcepath='org/apache/rocketmq/filter/expression/NowExpression.java' sourcefile='NowExpression.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.expression.NowExpression.evaluate(EvaluationContext)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.Long' signature='(J)V' name='&lt;init&gt;'><SourceLine endBytecode='41' classname='java.lang.Long' start='947' end='949' sourcepath='java/lang/Long.java' sourcefile='Long.java' startBytecode='0'></SourceLine><Message>Called method new Long(long)</Message></Method><Method isStatic='true' role='SHOULD_CALL' classname='java.lang.Long' signature='(J)Ljava/lang/Long;' name='valueOf'><SourceLine endBytecode='76' classname='java.lang.Long' start='837' end='840' sourcepath='java/lang/Long.java' sourcefile='Long.java' startBytecode='0'></SourceLine><Message>Should call Long.valueOf(long) instead</Message></Method><SourceLine endBytecode='7' classname='org.apache.rocketmq.filter.expression.NowExpression' start='30' end='30' sourcepath='org/apache/rocketmq/filter/expression/NowExpression.java' sourcefile='NowExpression.java' startBytecode='7' primary='true'><Message>At NowExpression.java:[line 30]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f416417345b9f464f6ea014f3966fe21' rank='18' abbrev='Bx' category='PERFORMANCE' priority='2' type='DM_NUMBER_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage><LongMessage>org.apache.rocketmq.filter.expression.NowExpression.getValue() invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead</LongMessage><Class classname='org.apache.rocketmq.filter.expression.NowExpression' primary='true'><SourceLine classname='org.apache.rocketmq.filter.expression.NowExpression' start='25' end='34' sourcepath='org/apache/rocketmq/filter/expression/NowExpression.java' sourcefile='NowExpression.java'><Message>At NowExpression.java:[lines 25-34]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.expression.NowExpression</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.expression.NowExpression' signature='()Ljava/lang/Object;' name='getValue' primary='true'><SourceLine endBytecode='52' classname='org.apache.rocketmq.filter.expression.NowExpression' start='34' end='34' sourcepath='org/apache/rocketmq/filter/expression/NowExpression.java' sourcefile='NowExpression.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.expression.NowExpression.getValue()</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.Long' signature='(J)V' name='&lt;init&gt;'><SourceLine endBytecode='41' classname='java.lang.Long' start='947' end='949' sourcepath='java/lang/Long.java' sourcefile='Long.java' startBytecode='0'></SourceLine><Message>Called method new Long(long)</Message></Method><Method isStatic='true' role='SHOULD_CALL' classname='java.lang.Long' signature='(J)Ljava/lang/Long;' name='valueOf'><SourceLine endBytecode='76' classname='java.lang.Long' start='837' end='840' sourcepath='java/lang/Long.java' sourcefile='Long.java' startBytecode='0'></SourceLine><Message>Should call Long.valueOf(long) instead</Message></Method><SourceLine endBytecode='7' classname='org.apache.rocketmq.filter.expression.NowExpression' start='34' end='34' sourcepath='org/apache/rocketmq/filter/expression/NowExpression.java' sourcefile='NowExpression.java' startBytecode='7' primary='true'><Message>At NowExpression.java:[line 34]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='5784b378b62dd1c7e70da8dd891d0610' rank='20' abbrev='Bx' category='PERFORMANCE' priority='3' type='DM_FP_NUMBER_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortMessage><LongMessage>org.apache.rocketmq.filter.expression.UnaryExpression.negate(Number) invokes inefficient new Double(double) constructor; use Double.valueOf(double) instead</LongMessage><Class classname='org.apache.rocketmq.filter.expression.UnaryExpression' primary='true'><SourceLine classname='org.apache.rocketmq.filter.expression.UnaryExpression' start='38' end='255' sourcepath='org/apache/rocketmq/filter/expression/UnaryExpression.java' sourcefile='UnaryExpression.java'><Message>At UnaryExpression.java:[lines 38-255]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.expression.UnaryExpression</Message></Class><Method isStatic='true' classname='org.apache.rocketmq.filter.expression.UnaryExpression' signature='(Ljava/lang/Number;)Ljava/lang/Number;' name='negate' primary='true'><SourceLine endBytecode='290' classname='org.apache.rocketmq.filter.expression.UnaryExpression' start='188' end='213' sourcepath='org/apache/rocketmq/filter/expression/UnaryExpression.java' sourcefile='UnaryExpression.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.expression.UnaryExpression.negate(Number)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.Double' signature='(D)V' name='&lt;init&gt;'><SourceLine endBytecode='41' classname='java.lang.Double' start='592' end='594' sourcepath='java/lang/Double.java' sourcefile='Double.java' startBytecode='0'></SourceLine><Message>Called method new Double(double)</Message></Method><Method isStatic='true' role='SHOULD_CALL' classname='java.lang.Double' signature='(D)Ljava/lang/Double;' name='valueOf'><SourceLine endBytecode='32' classname='java.lang.Double' start='519' end='519' sourcepath='java/lang/Double.java' sourcefile='Double.java' startBytecode='0'></SourceLine><Message>Should call Double.valueOf(double) instead</Message></Method><SourceLine endBytecode='77' classname='org.apache.rocketmq.filter.expression.UnaryExpression' start='196' end='196' sourcepath='org/apache/rocketmq/filter/expression/UnaryExpression.java' sourcefile='UnaryExpression.java' startBytecode='77' primary='true'><Message>At UnaryExpression.java:[line 196]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='37ba4a0db0a4c2b44b45407e3e79a6e9' rank='20' abbrev='Bx' category='PERFORMANCE' priority='3' type='DM_FP_NUMBER_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortMessage><LongMessage>org.apache.rocketmq.filter.expression.UnaryExpression.negate(Number) invokes inefficient new Float(float) constructor; use Float.valueOf(float) instead</LongMessage><Class classname='org.apache.rocketmq.filter.expression.UnaryExpression' primary='true'><SourceLine classname='org.apache.rocketmq.filter.expression.UnaryExpression' start='38' end='255' sourcepath='org/apache/rocketmq/filter/expression/UnaryExpression.java' sourcefile='UnaryExpression.java'><Message>At UnaryExpression.java:[lines 38-255]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.expression.UnaryExpression</Message></Class><Method isStatic='true' classname='org.apache.rocketmq.filter.expression.UnaryExpression' signature='(Ljava/lang/Number;)Ljava/lang/Number;' name='negate' primary='true'><SourceLine endBytecode='290' classname='org.apache.rocketmq.filter.expression.UnaryExpression' start='188' end='213' sourcepath='org/apache/rocketmq/filter/expression/UnaryExpression.java' sourcefile='UnaryExpression.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.expression.UnaryExpression.negate(Number)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.Float' signature='(F)V' name='&lt;init&gt;'><SourceLine endBytecode='41' classname='java.lang.Float' start='506' end='508' sourcepath='java/lang/Float.java' sourcefile='Float.java' startBytecode='0'></SourceLine><Message>Called method new Float(float)</Message></Method><Method isStatic='true' role='SHOULD_CALL' classname='java.lang.Float' signature='(F)Ljava/lang/Float;' name='valueOf'><SourceLine endBytecode='32' classname='java.lang.Float' start='433' end='433' sourcepath='java/lang/Float.java' sourcefile='Float.java' startBytecode='0'></SourceLine><Message>Should call Float.valueOf(float) instead</Message></Method><SourceLine endBytecode='58' classname='org.apache.rocketmq.filter.expression.UnaryExpression' start='194' end='194' sourcepath='org/apache/rocketmq/filter/expression/UnaryExpression.java' sourcefile='UnaryExpression.java' startBytecode='58' primary='true'><Message>At UnaryExpression.java:[line 194]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='ded555bc4d3d3996943e652511ae364b' rank='18' abbrev='Bx' category='PERFORMANCE' priority='2' type='DM_NUMBER_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage><LongMessage>org.apache.rocketmq.filter.expression.UnaryExpression.negate(Number) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage><Class classname='org.apache.rocketmq.filter.expression.UnaryExpression' primary='true'><SourceLine classname='org.apache.rocketmq.filter.expression.UnaryExpression' start='38' end='255' sourcepath='org/apache/rocketmq/filter/expression/UnaryExpression.java' sourcefile='UnaryExpression.java'><Message>At UnaryExpression.java:[lines 38-255]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.expression.UnaryExpression</Message></Class><Method isStatic='true' classname='org.apache.rocketmq.filter.expression.UnaryExpression' signature='(Ljava/lang/Number;)Ljava/lang/Number;' name='negate' primary='true'><SourceLine endBytecode='290' classname='org.apache.rocketmq.filter.expression.UnaryExpression' start='188' end='213' sourcepath='org/apache/rocketmq/filter/expression/UnaryExpression.java' sourcefile='UnaryExpression.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.expression.UnaryExpression.negate(Number)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.Integer' signature='(I)V' name='&lt;init&gt;'><SourceLine endBytecode='41' classname='java.lang.Integer' start='849' end='851' sourcepath='java/lang/Integer.java' sourcefile='Integer.java' startBytecode='0'></SourceLine><Message>Called method new Integer(int)</Message></Method><Method isStatic='true' role='SHOULD_CALL' classname='java.lang.Integer' signature='(I)Ljava/lang/Integer;' name='valueOf'><SourceLine endBytecode='72' classname='java.lang.Integer' start='830' end='832' sourcepath='java/lang/Integer.java' sourcefile='Integer.java' startBytecode='0'></SourceLine><Message>Should call Integer.valueOf(int) instead</Message></Method><SourceLine endBytecode='20' classname='org.apache.rocketmq.filter.expression.UnaryExpression' start='190' end='190' sourcepath='org/apache/rocketmq/filter/expression/UnaryExpression.java' sourcefile='UnaryExpression.java' startBytecode='20' primary='true'><Message>At UnaryExpression.java:[line 190]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='e7e13c4a4a81721e35d07df1f1bfcc55' rank='18' abbrev='Bx' category='PERFORMANCE' priority='2' type='DM_NUMBER_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage><LongMessage>org.apache.rocketmq.filter.expression.UnaryExpression.negate(Number) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead</LongMessage><Class classname='org.apache.rocketmq.filter.expression.UnaryExpression' primary='true'><SourceLine classname='org.apache.rocketmq.filter.expression.UnaryExpression' start='38' end='255' sourcepath='org/apache/rocketmq/filter/expression/UnaryExpression.java' sourcefile='UnaryExpression.java'><Message>At UnaryExpression.java:[lines 38-255]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.expression.UnaryExpression</Message></Class><Method isStatic='true' classname='org.apache.rocketmq.filter.expression.UnaryExpression' signature='(Ljava/lang/Number;)Ljava/lang/Number;' name='negate' primary='true'><SourceLine endBytecode='290' classname='org.apache.rocketmq.filter.expression.UnaryExpression' start='188' end='213' sourcepath='org/apache/rocketmq/filter/expression/UnaryExpression.java' sourcefile='UnaryExpression.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.expression.UnaryExpression.negate(Number)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.Long' signature='(J)V' name='&lt;init&gt;'><SourceLine endBytecode='41' classname='java.lang.Long' start='947' end='949' sourcepath='java/lang/Long.java' sourcefile='Long.java' startBytecode='0'></SourceLine><Message>Called method new Long(long)</Message></Method><Method isStatic='true' role='SHOULD_CALL' classname='java.lang.Long' signature='(J)Ljava/lang/Long;' name='valueOf'><SourceLine endBytecode='76' classname='java.lang.Long' start='837' end='840' sourcepath='java/lang/Long.java' sourcefile='Long.java' startBytecode='0'></SourceLine><Message>Should call Long.valueOf(long) instead</Message></Method><SourceLine endBytecode='39' classname='org.apache.rocketmq.filter.expression.UnaryExpression' start='192' end='192' sourcepath='org/apache/rocketmq/filter/expression/UnaryExpression.java' sourcefile='UnaryExpression.java' startBytecode='39' primary='true'><Message>At UnaryExpression.java:[line 192]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c59b0e7127cec9a218293f49ac0062c3' rank='16' abbrev='RC' category='BAD_PRACTICE' priority='2' type='RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN' instanceOccurrenceMax='0'><ShortMessage>Suspicious reference comparison of Boolean values</ShortMessage><LongMessage>Suspicious comparison of Boolean references in org.apache.rocketmq.filter.expression.UnaryExpression$BooleanUnaryExpression.matches(EvaluationContext)</LongMessage><Class classname='org.apache.rocketmq.filter.expression.UnaryExpression$BooleanUnaryExpression' primary='true'><SourceLine classname='org.apache.rocketmq.filter.expression.UnaryExpression$BooleanUnaryExpression' start='139' end='144' sourcepath='org/apache/rocketmq/filter/expression/UnaryExpression.java' sourcefile='UnaryExpression.java'><Message>At UnaryExpression.java:[lines 139-144]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.expression.UnaryExpression$BooleanUnaryExpression</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.expression.UnaryExpression$BooleanUnaryExpression' signature='(Lorg/apache/rocketmq/filter/expression/EvaluationContext;)Z' name='matches' primary='true'><SourceLine endBytecode='12' classname='org.apache.rocketmq.filter.expression.UnaryExpression$BooleanUnaryExpression' start='143' end='144' sourcepath='org/apache/rocketmq/filter/expression/UnaryExpression.java' sourcefile='UnaryExpression.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.expression.UnaryExpression$BooleanUnaryExpression.matches(EvaluationContext)</Message></Method><Type role='TYPE_FOUND' descriptor='Ljava/lang/Boolean;'><SourceLine classname='java.lang.Boolean' start='43' end='333' sourcepath='java/lang/Boolean.java' sourcefile='Boolean.java'><Message>At Boolean.java:[lines 43-333]</Message></SourceLine><Message>Actual type Boolean</Message></Type><Field isStatic='true' role='FIELD_VALUE_OF' classname='java.lang.Boolean' signature='Ljava/lang/Boolean;' name='TRUE' primary='true'><SourceLine classname='java.lang.Boolean' sourcepath='java/lang/Boolean.java' sourcefile='Boolean.java'><Message>In Boolean.java</Message></SourceLine><Message>Value loaded from field java.lang.Boolean.TRUE</Message></Field><SourceLine endBytecode='14' classname='org.apache.rocketmq.filter.expression.UnaryExpression$BooleanUnaryExpression' start='144' end='144' sourcepath='org/apache/rocketmq/filter/expression/UnaryExpression.java' sourcefile='UnaryExpression.java' startBytecode='14' primary='true'><Message>At UnaryExpression.java:[line 144]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='be623aabdc352da93c19059acffcd604' rank='16' abbrev='RC' category='BAD_PRACTICE' priority='2' type='RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN' instanceOccurrenceMax='0'><ShortMessage>Suspicious reference comparison of Boolean values</ShortMessage><LongMessage>Suspicious comparison of Boolean references in org.apache.rocketmq.filter.expression.UnaryInExpression.matches(EvaluationContext)</LongMessage><Class classname='org.apache.rocketmq.filter.expression.UnaryInExpression' primary='true'><SourceLine classname='org.apache.rocketmq.filter.expression.UnaryInExpression' start='35' end='60' sourcepath='org/apache/rocketmq/filter/expression/UnaryInExpression.java' sourcefile='UnaryInExpression.java'><Message>At UnaryInExpression.java:[lines 35-60]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.expression.UnaryInExpression</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.expression.UnaryInExpression' signature='(Lorg/apache/rocketmq/filter/expression/EvaluationContext;)Z' name='matches' primary='true'><SourceLine endBytecode='12' classname='org.apache.rocketmq.filter.expression.UnaryInExpression' start='42' end='43' sourcepath='org/apache/rocketmq/filter/expression/UnaryInExpression.java' sourcefile='UnaryInExpression.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.expression.UnaryInExpression.matches(EvaluationContext)</Message></Method><Type role='TYPE_FOUND' descriptor='Ljava/lang/Boolean;'><SourceLine classname='java.lang.Boolean' start='43' end='333' sourcepath='java/lang/Boolean.java' sourcefile='Boolean.java'><Message>At Boolean.java:[lines 43-333]</Message></SourceLine><Message>Actual type Boolean</Message></Type><Field isStatic='true' role='FIELD_VALUE_OF' classname='java.lang.Boolean' signature='Ljava/lang/Boolean;' name='TRUE' primary='true'><SourceLine classname='java.lang.Boolean' sourcepath='java/lang/Boolean.java' sourcefile='Boolean.java'><Message>In Boolean.java</Message></SourceLine><Message>Value loaded from field java.lang.Boolean.TRUE</Message></Field><SourceLine endBytecode='14' classname='org.apache.rocketmq.filter.expression.UnaryInExpression' start='43' end='43' sourcepath='org/apache/rocketmq/filter/expression/UnaryInExpression.java' sourcefile='UnaryInExpression.java' startBytecode='14' primary='true'><Message>At UnaryInExpression.java:[line 43]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='42fc015d89469f83e862008c87fe67ae' rank='18' abbrev='SBSC' category='PERFORMANCE' priority='2' type='SBSC_USE_STRINGBUFFER_CONCATENATION' instanceOccurrenceMax='0'><ShortMessage>Method concatenates strings using + in a loop</ShortMessage><LongMessage>org.apache.rocketmq.filter.parser.ParseException.initialise(Token, int[][], String[]) concatenates strings using + in a loop</LongMessage><Class classname='org.apache.rocketmq.filter.parser.ParseException' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.ParseException' start='50' end='200' sourcepath='org/apache/rocketmq/filter/parser/ParseException.java' sourcefile='ParseException.java'><Message>At ParseException.java:[lines 50-200]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.ParseException</Message></Class><Method isStatic='true' classname='org.apache.rocketmq.filter.parser.ParseException' signature='(Lorg/apache/rocketmq/filter/parser/Token;[[I[Ljava/lang/String;)Ljava/lang/String;' name='initialise' primary='true'><SourceLine endBytecode='833' classname='org.apache.rocketmq.filter.parser.ParseException' start='108' end='146' sourcepath='org/apache/rocketmq/filter/parser/ParseException.java' sourcefile='ParseException.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.ParseException.initialise(Token, int[][], String[])</Message></Method><SourceLine endBytecode='290' classname='org.apache.rocketmq.filter.parser.ParseException' start='135' end='135' sourcepath='org/apache/rocketmq/filter/parser/ParseException.java' sourcefile='ParseException.java' startBytecode='290' primary='true'><Message>At ParseException.java:[line 135]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='7ed0779d7db58e253902b62579ed5264' rank='16' abbrev='Nm' category='BAD_PRACTICE' priority='2' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SelectorParser.JmsSelector() doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SelectorParser' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SelectorParser' start='42' end='1346' sourcepath='org/apache/rocketmq/filter/parser/SelectorParser.java' sourcefile='SelectorParser.java'><Message>At SelectorParser.java:[lines 42-1346]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SelectorParser</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SelectorParser' signature='()Lorg/apache/rocketmq/filter/expression/BooleanExpression;' name='JmsSelector' primary='true'><SourceLine endBytecode='72' classname='org.apache.rocketmq.filter.parser.SelectorParser' start='113' end='117' sourcepath='org/apache/rocketmq/filter/parser/SelectorParser.java' sourcefile='SelectorParser.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SelectorParser.JmsSelector()</Message></Method><SourceLine synthetic='true' endBytecode='72' classname='org.apache.rocketmq.filter.parser.SelectorParser' start='113' end='117' sourcepath='org/apache/rocketmq/filter/parser/SelectorParser.java' sourcefile='SelectorParser.java' startBytecode='0'><Message>At SelectorParser.java:[lines 113-117]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f247b0030d1cbcfee9b5f17819940dd0' rank='16' abbrev='Nm' category='BAD_PRACTICE' priority='2' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SelectorParser.ReInit(InputStream) doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SelectorParser' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SelectorParser' start='42' end='1346' sourcepath='org/apache/rocketmq/filter/parser/SelectorParser.java' sourcefile='SelectorParser.java'><Message>At SelectorParser.java:[lines 42-1346]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SelectorParser</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SelectorParser' signature='(Ljava/io/InputStream;)V' name='ReInit' primary='true'><SourceLine endBytecode='62' classname='org.apache.rocketmq.filter.parser.SelectorParser' start='1042' end='1043' sourcepath='org/apache/rocketmq/filter/parser/SelectorParser.java' sourcefile='SelectorParser.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SelectorParser.ReInit(InputStream)</Message></Method><SourceLine synthetic='true' endBytecode='62' classname='org.apache.rocketmq.filter.parser.SelectorParser' start='1042' end='1043' sourcepath='org/apache/rocketmq/filter/parser/SelectorParser.java' sourcefile='SelectorParser.java' startBytecode='0'><Message>At SelectorParser.java:[lines 1042-1043]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='7ce7f519ca44beda8249f09d1b604d7e' rank='16' abbrev='Nm' category='BAD_PRACTICE' priority='2' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SelectorParser.ReInit(InputStream, String) doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SelectorParser' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SelectorParser' start='42' end='1346' sourcepath='org/apache/rocketmq/filter/parser/SelectorParser.java' sourcefile='SelectorParser.java'><Message>At SelectorParser.java:[lines 42-1346]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SelectorParser</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SelectorParser' signature='(Ljava/io/InputStream;Ljava/lang/String;)V' name='ReInit' primary='true'><SourceLine endBytecode='290' classname='org.apache.rocketmq.filter.parser.SelectorParser' start='1050' end='1062' sourcepath='org/apache/rocketmq/filter/parser/SelectorParser.java' sourcefile='SelectorParser.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SelectorParser.ReInit(InputStream, String)</Message></Method><SourceLine synthetic='true' endBytecode='290' classname='org.apache.rocketmq.filter.parser.SelectorParser' start='1050' end='1062' sourcepath='org/apache/rocketmq/filter/parser/SelectorParser.java' sourcefile='SelectorParser.java' startBytecode='0'><Message>At SelectorParser.java:[lines 1050-1062]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='e2b3db62e8559fecf0e43b68c7fe46a0' rank='16' abbrev='Nm' category='BAD_PRACTICE' priority='2' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SelectorParser.ReInit(Reader) doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SelectorParser' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SelectorParser' start='42' end='1346' sourcepath='org/apache/rocketmq/filter/parser/SelectorParser.java' sourcefile='SelectorParser.java'><Message>At SelectorParser.java:[lines 42-1346]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SelectorParser</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SelectorParser' signature='(Ljava/io/Reader;)V' name='ReInit' primary='true'><SourceLine endBytecode='231' classname='org.apache.rocketmq.filter.parser.SelectorParser' start='1083' end='1092' sourcepath='org/apache/rocketmq/filter/parser/SelectorParser.java' sourcefile='SelectorParser.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SelectorParser.ReInit(Reader)</Message></Method><SourceLine synthetic='true' endBytecode='231' classname='org.apache.rocketmq.filter.parser.SelectorParser' start='1083' end='1092' sourcepath='org/apache/rocketmq/filter/parser/SelectorParser.java' sourcefile='SelectorParser.java' startBytecode='0'><Message>At SelectorParser.java:[lines 1083-1092]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='2db3ad90a486f82452a6cf539403e0db' rank='16' abbrev='Nm' category='BAD_PRACTICE' priority='2' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SelectorParser.ReInit(SelectorParserTokenManager) doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SelectorParser' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SelectorParser' start='42' end='1346' sourcepath='org/apache/rocketmq/filter/parser/SelectorParser.java' sourcefile='SelectorParser.java'><Message>At SelectorParser.java:[lines 42-1346]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SelectorParser</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SelectorParser' signature='(Lorg/apache/rocketmq/filter/parser/SelectorParserTokenManager;)V' name='ReInit' primary='true'><SourceLine endBytecode='211' classname='org.apache.rocketmq.filter.parser.SelectorParser' start='1112' end='1120' sourcepath='org/apache/rocketmq/filter/parser/SelectorParser.java' sourcefile='SelectorParser.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SelectorParser.ReInit(SelectorParserTokenManager)</Message></Method><SourceLine synthetic='true' endBytecode='211' classname='org.apache.rocketmq.filter.parser.SelectorParser' start='1112' end='1120' sourcepath='org/apache/rocketmq/filter/parser/SelectorParser.java' sourcefile='SelectorParser.java' startBytecode='0'><Message>At SelectorParser.java:[lines 1112-1120]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='5b7fae0fd151b74dcfc63def88d5049f' rank='19' abbrev='SF' category='STYLE' priority='2' type='SF_SWITCH_NO_DEFAULT' instanceOccurrenceMax='0'><ShortMessage>Switch statement found where default case is missing</ShortMessage><LongMessage>Switch statement found in org.apache.rocketmq.filter.parser.SelectorParser.jj_rescan_token() where default case is missing</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SelectorParser' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SelectorParser' start='42' end='1346' sourcepath='org/apache/rocketmq/filter/parser/SelectorParser.java' sourcefile='SelectorParser.java'><Message>At SelectorParser.java:[lines 42-1346]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SelectorParser</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SelectorParser' signature='()V' name='jj_rescan_token' primary='true'><SourceLine endBytecode='330' classname='org.apache.rocketmq.filter.parser.SelectorParser' start='1302' end='1332' sourcepath='org/apache/rocketmq/filter/parser/SelectorParser.java' sourcefile='SelectorParser.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SelectorParser.jj_rescan_token()</Message></Method><SourceLine endBytecode='112' classname='org.apache.rocketmq.filter.parser.SelectorParser' start='1310' end='1321' sourcepath='org/apache/rocketmq/filter/parser/SelectorParser.java' sourcefile='SelectorParser.java' startBytecode='52' primary='true'><Message>At SelectorParser.java:[lines 1310-1321]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='58ccdaedee4dda9dcdd2c8bbab798adc' rank='18' abbrev='UrF' category='PERFORMANCE' priority='2' type='URF_UNREAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Unread field</ShortMessage><LongMessage>Unread field: org.apache.rocketmq.filter.parser.SelectorParser.sql</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SelectorParser' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SelectorParser' start='42' end='1346' sourcepath='org/apache/rocketmq/filter/parser/SelectorParser.java' sourcefile='SelectorParser.java'><Message>At SelectorParser.java:[lines 42-1346]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SelectorParser</Message></Class><Field isStatic='false' classname='org.apache.rocketmq.filter.parser.SelectorParser' signature='Ljava/lang/String;' name='sql' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SelectorParser' sourcepath='org/apache/rocketmq/filter/parser/SelectorParser.java' sourcefile='SelectorParser.java'><Message>In SelectorParser.java</Message></SourceLine><Message>Field org.apache.rocketmq.filter.parser.SelectorParser.sql</Message></Field><SourceLine endBytecode='14' classname='org.apache.rocketmq.filter.parser.SelectorParser' start='88' end='88' sourcepath='org/apache/rocketmq/filter/parser/SelectorParser.java' sourcefile='SelectorParser.java' startBytecode='14' primary='true'><Message>At SelectorParser.java:[line 88]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='7f66ac3eb0bfa3032a9fb7c6f4d6f735' cweid='218' rank='18' abbrev='MS' category='MALICIOUS_CODE' priority='2' type='MS_OOI_PKGPROTECT' instanceOccurrenceMax='0'><ShortMessage>Field should be moved out of an interface and made package protected</ShortMessage><LongMessage>org.apache.rocketmq.filter.parser.SelectorParserConstants.TOKEN_IMAGE should be moved out of an interface and made package protected</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SelectorParserConstants' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SelectorParserConstants' start='104' end='104' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserConstants.java' sourcefile='SelectorParserConstants.java'><Message>At SelectorParserConstants.java:[line 104]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SelectorParserConstants</Message></Class><Field isStatic='true' classname='org.apache.rocketmq.filter.parser.SelectorParserConstants' signature='[Ljava/lang/String;' name='TOKEN_IMAGE' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SelectorParserConstants' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserConstants.java' sourcefile='SelectorParserConstants.java'><Message>In SelectorParserConstants.java</Message></SourceLine><Message>Field org.apache.rocketmq.filter.parser.SelectorParserConstants.TOKEN_IMAGE</Message></Field><SourceLine endBytecode='197' classname='org.apache.rocketmq.filter.parser.SelectorParserConstants' start='104' end='104' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserConstants.java' sourcefile='SelectorParserConstants.java' startBytecode='197' primary='true'><Message>At SelectorParserConstants.java:[line 104]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='3e15b9f13b2958543a9587287d9714ba' rank='20' abbrev='DB' category='STYLE' priority='3' type='DB_DUPLICATE_SWITCH_CLAUSES' instanceOccurrenceMax='0'><ShortMessage>Method uses the same code for two switch clauses</ShortMessage><LongMessage>org.apache.rocketmq.filter.parser.SelectorParserTokenManager.jjMoveStringLiteralDfa4_0(long, long) uses the same code for two switch clauses</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='29' end='922' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java'><Message>At SelectorParserTokenManager.java:[lines 29-922]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SelectorParserTokenManager</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' signature='(JJ)I' name='jjMoveStringLiteralDfa4_0' primary='true'><SourceLine endBytecode='297' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='293' end='316' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SelectorParserTokenManager.jjMoveStringLiteralDfa4_0(long, long)</Message></Method><SourceLine endBytecode='101' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='302' end='306' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java' startBytecode='72' primary='true'><Message>At SelectorParserTokenManager.java:[lines 302-306]</Message></SourceLine><SourceLine endBytecode='131' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='308' end='312' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java' startBytecode='102'><Message>At SelectorParserTokenManager.java:[lines 308-312]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='8f1b78edd1068b515feaf54c6c647f49' rank='20' abbrev='DB' category='STYLE' priority='3' type='DB_DUPLICATE_SWITCH_CLAUSES' instanceOccurrenceMax='0'><ShortMessage>Method uses the same code for two switch clauses</ShortMessage><LongMessage>org.apache.rocketmq.filter.parser.SelectorParserTokenManager.jjMoveStringLiteralDfa5_0(long, long) uses the same code for two switch clauses</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='29' end='922' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java'><Message>At SelectorParserTokenManager.java:[lines 29-922]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SelectorParserTokenManager</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' signature='(JJ)I' name='jjMoveStringLiteralDfa5_0' primary='true'><SourceLine endBytecode='229' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='320' end='335' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SelectorParserTokenManager.jjMoveStringLiteralDfa5_0(long, long)</Message></Method><SourceLine endBytecode='80' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='329' end='329' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java' startBytecode='72' primary='true'><Message>At SelectorParserTokenManager.java:[line 329]</Message></SourceLine><SourceLine endBytecode='89' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='331' end='331' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java' startBytecode='81'><Message>At SelectorParserTokenManager.java:[line 331]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='ab77a12d87eaa53fea692f2cc8ae1f83' rank='20' abbrev='DB' category='STYLE' priority='3' type='DB_DUPLICATE_SWITCH_CLAUSES' instanceOccurrenceMax='0'><ShortMessage>Method uses the same code for two switch clauses</ShortMessage><LongMessage>org.apache.rocketmq.filter.parser.SelectorParserTokenManager.jjMoveStringLiteralDfa6_0(long, long) uses the same code for two switch clauses</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='29' end='922' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java'><Message>At SelectorParserTokenManager.java:[lines 29-922]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SelectorParserTokenManager</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' signature='(JJ)I' name='jjMoveStringLiteralDfa6_0' primary='true'><SourceLine endBytecode='278' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='339' end='362' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SelectorParserTokenManager.jjMoveStringLiteralDfa6_0(long, long)</Message></Method><SourceLine endBytecode='96' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='348' end='350' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java' startBytecode='72' primary='true'><Message>At SelectorParserTokenManager.java:[lines 348-350]</Message></SourceLine><SourceLine endBytecode='121' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='354' end='356' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java' startBytecode='97'><Message>At SelectorParserTokenManager.java:[lines 354-356]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='9192abc8a505266a28fda1acbb7276ba' cweid='218' rank='18' abbrev='MS' category='MALICIOUS_CODE' priority='2' type='MS_PKGPROTECT' instanceOccurrenceMax='0'><ShortMessage>Field should be package protected</ShortMessage><LongMessage>org.apache.rocketmq.filter.parser.SelectorParserTokenManager.JJ_STR_LITERAL_IMAGES should be package protected</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='29' end='922' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java'><Message>At SelectorParserTokenManager.java:[lines 29-922]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SelectorParserTokenManager</Message></Class><Field isStatic='true' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' signature='[Ljava/lang/String;' name='JJ_STR_LITERAL_IMAGES' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java'><Message>In SelectorParserTokenManager.java</Message></SourceLine><Message>Field org.apache.rocketmq.filter.parser.SelectorParserTokenManager.JJ_STR_LITERAL_IMAGES</Message></Field><SourceLine endBytecode='344' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='723' end='723' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java' startBytecode='344' primary='true'><Message>At SelectorParserTokenManager.java:[line 723]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='aa26356bd19695113550b6db3568c97d' cweid='218' rank='20' abbrev='MS' category='MALICIOUS_CODE' priority='3' type='MS_PKGPROTECT' instanceOccurrenceMax='0'><ShortMessage>Field should be package protected</ShortMessage><LongMessage>org.apache.rocketmq.filter.parser.SelectorParserTokenManager.LEX_STATE_NAMES should be package protected</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='29' end='922' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java'><Message>At SelectorParserTokenManager.java:[lines 29-922]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SelectorParserTokenManager</Message></Class><Field isStatic='true' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' signature='[Ljava/lang/String;' name='LEX_STATE_NAMES' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java'><Message>In SelectorParserTokenManager.java</Message></SourceLine><Message>Field org.apache.rocketmq.filter.parser.SelectorParserTokenManager.LEX_STATE_NAMES</Message></Field><SourceLine endBytecode='356' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='731' end='731' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java' startBytecode='356' primary='true'><Message>At SelectorParserTokenManager.java:[line 731]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='3bdfb0abab1073933eac7d7539a0e28b' rank='16' abbrev='Nm' category='BAD_PRACTICE' priority='2' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SelectorParserTokenManager.ReInit(SimpleCharStream) doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='29' end='922' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java'><Message>At SelectorParserTokenManager.java:[lines 29-922]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SelectorParserTokenManager</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' signature='(Lorg/apache/rocketmq/filter/parser/SimpleCharStream;)V' name='ReInit' primary='true'><SourceLine endBytecode='95' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='769' end='773' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SelectorParserTokenManager.ReInit(SimpleCharStream)</Message></Method><SourceLine synthetic='true' endBytecode='95' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='769' end='773' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java' startBytecode='0'><Message>At SelectorParserTokenManager.java:[lines 769-773]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f3bf2bf472a7df2ee6c966d60d9bcf3e' rank='16' abbrev='Nm' category='BAD_PRACTICE' priority='2' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SelectorParserTokenManager.ReInit(SimpleCharStream, int) doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='29' end='922' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java'><Message>At SelectorParserTokenManager.java:[lines 29-922]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SelectorParserTokenManager</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' signature='(Lorg/apache/rocketmq/filter/parser/SimpleCharStream;I)V' name='ReInit' primary='true'><SourceLine endBytecode='80' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='786' end='788' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SelectorParserTokenManager.ReInit(SimpleCharStream, int)</Message></Method><SourceLine synthetic='true' endBytecode='80' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='786' end='788' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java' startBytecode='0'><Message>At SelectorParserTokenManager.java:[lines 786-788]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='ba7c326bbd799fb9258f42e25210bf7e' rank='16' abbrev='Nm' category='BAD_PRACTICE' priority='2' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SelectorParserTokenManager.SwitchTo(int) doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='29' end='922' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java'><Message>At SelectorParserTokenManager.java:[lines 29-922]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SelectorParserTokenManager</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' signature='(I)V' name='SwitchTo' primary='true'><SourceLine endBytecode='121' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='794' end='799' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SelectorParserTokenManager.SwitchTo(int)</Message></Method><SourceLine synthetic='true' endBytecode='121' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='794' end='799' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java' startBytecode='0'><Message>At SelectorParserTokenManager.java:[lines 794-799]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='5a51e743a8b1b977f356e9601c04d8fd' rank='19' abbrev='Nm' category='BAD_PRACTICE' priority='3' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SelectorParserTokenManager.ReInitRounds() doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='29' end='922' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java'><Message>At SelectorParserTokenManager.java:[lines 29-922]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SelectorParserTokenManager</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' signature='()V' name='ReInitRounds' primary='true'><SourceLine endBytecode='104' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='777' end='780' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SelectorParserTokenManager.ReInitRounds()</Message></Method><SourceLine synthetic='true' endBytecode='104' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='777' end='780' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java' startBytecode='0'><Message>At SelectorParserTokenManager.java:[lines 777-780]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='705e23ed0eb50bb2ce204a9137ba435e' rank='20' abbrev='UPM' category='PERFORMANCE' priority='3' type='UPM_UNCALLED_PRIVATE_METHOD' instanceOccurrenceMax='0'><ShortMessage>Private method is never called</ShortMessage><LongMessage>Private method org.apache.rocketmq.filter.parser.SelectorParserTokenManager.jjStopAtPos(int, int) is never called</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='29' end='922' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java'><Message>At SelectorParserTokenManager.java:[lines 29-922]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SelectorParserTokenManager</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' signature='(II)I' name='jjStopAtPos' primary='true'><SourceLine endBytecode='83' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='39' end='41' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SelectorParserTokenManager.jjStopAtPos(int, int)</Message></Method><SourceLine synthetic='true' endBytecode='83' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='39' end='41' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java' startBytecode='0'><Message>At SelectorParserTokenManager.java:[lines 39-41]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='eb8e9b303fc1cf492bb1b449c09de095' rank='18' abbrev='UrF' category='STYLE' priority='2' type='URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD' instanceOccurrenceMax='0'><ShortMessage>Unread public/protected field</ShortMessage><LongMessage>Unread public/protected field: org.apache.rocketmq.filter.parser.SelectorParserTokenManager.debugStream</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='29' end='922' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java'><Message>At SelectorParserTokenManager.java:[lines 29-922]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SelectorParserTokenManager</Message></Class><Field isStatic='false' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' signature='Ljava/io/PrintStream;' name='debugStream' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java'><Message>In SelectorParserTokenManager.java</Message></SourceLine><Message>Field org.apache.rocketmq.filter.parser.SelectorParserTokenManager.debugStream</Message></Field><SourceLine endBytecode='2' classname='org.apache.rocketmq.filter.parser.SelectorParserTokenManager' start='35' end='35' sourcepath='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' sourcefile='SelectorParserTokenManager.java' startBytecode='2' primary='true'><Message>At SelectorParserTokenManager.java:[line 35]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='fa7b0e4d9832659aaad0a9d840d60129' rank='19' abbrev='Dm' category='I18N' priority='1' type='DM_DEFAULT_ENCODING' instanceOccurrenceMax='0'><ShortMessage>Reliance on default encoding</ShortMessage><LongMessage>Found reliance on default encoding in new org.apache.rocketmq.filter.parser.SimpleCharStream(InputStream, int, int, int): new java.io.InputStreamReader(InputStream)</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SimpleCharStream' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='38' end='499' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java'><Message>At SimpleCharStream.java:[lines 38-499]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SimpleCharStream</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' signature='(Ljava/io/InputStream;III)V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='102' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='343' end='344' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'></SourceLine><Message>In method new org.apache.rocketmq.filter.parser.SimpleCharStream(InputStream, int, int, int)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.io.InputStreamReader' signature='(Ljava/io/InputStream;)V' name='&lt;init&gt;'><SourceLine endBytecode='108' classname='java.io.InputStreamReader' start='72' end='79' sourcepath='java/io/InputStreamReader.java' sourcefile='InputStreamReader.java' startBytecode='0'></SourceLine><Message>Called method new java.io.InputStreamReader(InputStream)</Message></Method><SourceLine endBytecode='6' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='343' end='343' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='6' primary='true'><Message>At SimpleCharStream.java:[line 343]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='fcaf9c2e93287caf60631edaacb570ad' rank='19' abbrev='Dm' category='I18N' priority='1' type='DM_DEFAULT_ENCODING' instanceOccurrenceMax='0'><ShortMessage>Reliance on default encoding</ShortMessage><LongMessage>Found reliance on default encoding in new org.apache.rocketmq.filter.parser.SimpleCharStream(InputStream, String, int, int, int): new java.io.InputStreamReader(InputStream)</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SimpleCharStream' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='38' end='499' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java'><Message>At SimpleCharStream.java:[lines 38-499]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SimpleCharStream</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' signature='(Ljava/io/InputStream;Ljava/lang/String;III)V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='160' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='333' end='336' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'></SourceLine><Message>In method new org.apache.rocketmq.filter.parser.SimpleCharStream(InputStream, String, int, int, int)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.io.InputStreamReader' signature='(Ljava/io/InputStream;)V' name='&lt;init&gt;'><SourceLine endBytecode='108' classname='java.io.InputStreamReader' start='72' end='79' sourcepath='java/io/InputStreamReader.java' sourcefile='InputStreamReader.java' startBytecode='0'></SourceLine><Message>Called method new java.io.InputStreamReader(InputStream)</Message></Method><SourceLine endBytecode='10' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='333' end='333' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='10' primary='true'><Message>At SimpleCharStream.java:[line 333]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='5a96bc5a67d5c76527bf4cf678d5e399' rank='19' abbrev='Dm' category='I18N' priority='1' type='DM_DEFAULT_ENCODING' instanceOccurrenceMax='0'><ShortMessage>Reliance on default encoding</ShortMessage><LongMessage>Found reliance on default encoding in org.apache.rocketmq.filter.parser.SimpleCharStream.ReInit(InputStream, int, int, int): new java.io.InputStreamReader(InputStream)</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SimpleCharStream' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='38' end='499' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java'><Message>At SimpleCharStream.java:[lines 38-499]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SimpleCharStream</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' signature='(Ljava/io/InputStream;III)V' name='ReInit' primary='true'><SourceLine endBytecode='102' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='391' end='392' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SimpleCharStream.ReInit(InputStream, int, int, int)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.io.InputStreamReader' signature='(Ljava/io/InputStream;)V' name='&lt;init&gt;'><SourceLine endBytecode='108' classname='java.io.InputStreamReader' start='72' end='79' sourcepath='java/io/InputStreamReader.java' sourcefile='InputStreamReader.java' startBytecode='0'></SourceLine><Message>Called method new java.io.InputStreamReader(InputStream)</Message></Method><SourceLine endBytecode='6' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='391' end='391' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='6' primary='true'><Message>At SimpleCharStream.java:[line 391]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='84ca9d09b92ac86674e9b5b7d3b2e0f6' rank='19' abbrev='Dm' category='I18N' priority='1' type='DM_DEFAULT_ENCODING' instanceOccurrenceMax='0'><ShortMessage>Reliance on default encoding</ShortMessage><LongMessage>Found reliance on default encoding in org.apache.rocketmq.filter.parser.SimpleCharStream.ReInit(InputStream, String, int, int, int): new java.io.InputStreamReader(InputStream)</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SimpleCharStream' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='38' end='499' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java'><Message>At SimpleCharStream.java:[lines 38-499]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SimpleCharStream</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' signature='(Ljava/io/InputStream;Ljava/lang/String;III)V' name='ReInit' primary='true'><SourceLine endBytecode='166' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='381' end='384' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SimpleCharStream.ReInit(InputStream, String, int, int, int)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.io.InputStreamReader' signature='(Ljava/io/InputStream;)V' name='&lt;init&gt;'><SourceLine endBytecode='108' classname='java.io.InputStreamReader' start='72' end='79' sourcepath='java/io/InputStreamReader.java' sourcefile='InputStreamReader.java' startBytecode='0'></SourceLine><Message>Called method new java.io.InputStreamReader(InputStream)</Message></Method><SourceLine endBytecode='10' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='381' end='381' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='10' primary='true'><Message>At SimpleCharStream.java:[line 381]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='88d41ac2fabae13997d8e0538b66c020' rank='19' abbrev='Nm' category='BAD_PRACTICE' priority='3' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SimpleCharStream.BeginToken() doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SimpleCharStream' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='38' end='499' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java'><Message>At SimpleCharStream.java:[lines 38-499]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SimpleCharStream</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' signature='()C' name='BeginToken' primary='true'><SourceLine endBytecode='83' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='143' end='147' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SimpleCharStream.BeginToken()</Message></Method><SourceLine synthetic='true' endBytecode='83' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='143' end='147' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'><Message>At SimpleCharStream.java:[lines 143-147]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='6af89972d1367b463d03ebd2ce7bfa84' rank='19' abbrev='Nm' category='BAD_PRACTICE' priority='3' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SimpleCharStream.Done() doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SimpleCharStream' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='38' end='499' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java'><Message>At SimpleCharStream.java:[lines 38-499]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SimpleCharStream</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' signature='()V' name='Done' primary='true'><SourceLine endBytecode='69' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='456' end='459' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SimpleCharStream.Done()</Message></Method><SourceLine synthetic='true' endBytecode='69' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='456' end='459' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'><Message>At SimpleCharStream.java:[lines 456-459]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='56afbdabc1fdea520cc7b082fe063119' rank='19' abbrev='Nm' category='BAD_PRACTICE' priority='3' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SimpleCharStream.ExpandBuff(boolean) doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SimpleCharStream' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='38' end='499' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java'><Message>At SimpleCharStream.java:[lines 38-499]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SimpleCharStream</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' signature='(Z)V' name='ExpandBuff' primary='true'><SourceLine endBytecode='594' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='64' end='102' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SimpleCharStream.ExpandBuff(boolean)</Message></Method><SourceLine synthetic='true' endBytecode='594' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='64' end='102' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'><Message>At SimpleCharStream.java:[lines 64-102]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b823565082e9c3963ac5877e9ff9238a' rank='19' abbrev='Nm' category='BAD_PRACTICE' priority='3' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SimpleCharStream.FillBuff() doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SimpleCharStream' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='38' end='499' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java'><Message>At SimpleCharStream.java:[lines 38-499]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SimpleCharStream</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' signature='()V' name='FillBuff' primary='true'><SourceLine endBytecode='423' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='105' end='135' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SimpleCharStream.FillBuff()</Message></Method><SourceLine synthetic='true' endBytecode='423' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='105' end='135' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'><Message>At SimpleCharStream.java:[lines 105-135]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='633328d8fcbbd6b1e93417cd367ada2' rank='19' abbrev='Nm' category='BAD_PRACTICE' priority='3' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SimpleCharStream.GetImage() doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SimpleCharStream' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='38' end='499' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java'><Message>At SimpleCharStream.java:[lines 38-499]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SimpleCharStream</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' signature='()Ljava/lang/String;' name='GetImage' primary='true'><SourceLine endBytecode='155' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='428' end='431' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SimpleCharStream.GetImage()</Message></Method><SourceLine synthetic='true' endBytecode='155' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='428' end='431' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'><Message>At SimpleCharStream.java:[lines 428-431]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='9c92cd1461075486a49e8a0f285e3f96' rank='19' abbrev='Nm' category='BAD_PRACTICE' priority='3' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SimpleCharStream.GetSuffix(int) doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SimpleCharStream' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='38' end='499' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java'><Message>At SimpleCharStream.java:[lines 38-499]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SimpleCharStream</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' signature='(I)[C' name='GetSuffix' primary='true'><SourceLine endBytecode='186' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='439' end='449' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SimpleCharStream.GetSuffix(int)</Message></Method><SourceLine synthetic='true' endBytecode='186' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='439' end='449' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'><Message>At SimpleCharStream.java:[lines 439-449]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='8a15c68869dbc9230111af4cbe0341' rank='19' abbrev='Nm' category='BAD_PRACTICE' priority='3' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SimpleCharStream.ReInit(InputStream) doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SimpleCharStream' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='38' end='499' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java'><Message>At SimpleCharStream.java:[lines 38-499]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SimpleCharStream</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' signature='(Ljava/io/InputStream;)V' name='ReInit' primary='true'><SourceLine endBytecode='66' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='405' end='406' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SimpleCharStream.ReInit(InputStream)</Message></Method><SourceLine synthetic='true' endBytecode='66' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='405' end='406' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'><Message>At SimpleCharStream.java:[lines 405-406]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='dc3c0c96885f2c6ca7bf605b3ba6865b' rank='19' abbrev='Nm' category='BAD_PRACTICE' priority='3' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SimpleCharStream.ReInit(InputStream, int, int) doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SimpleCharStream' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='38' end='499' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java'><Message>At SimpleCharStream.java:[lines 38-499]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SimpleCharStream</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' signature='(Ljava/io/InputStream;II)V' name='ReInit' primary='true'><SourceLine endBytecode='86' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='421' end='422' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SimpleCharStream.ReInit(InputStream, int, int)</Message></Method><SourceLine synthetic='true' endBytecode='86' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='421' end='422' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'><Message>At SimpleCharStream.java:[lines 421-422]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='8c5d857c046ec1c087628db1982b0b60' rank='19' abbrev='Nm' category='BAD_PRACTICE' priority='3' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SimpleCharStream.ReInit(InputStream, int, int, int) doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SimpleCharStream' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='38' end='499' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java'><Message>At SimpleCharStream.java:[lines 38-499]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SimpleCharStream</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' signature='(Ljava/io/InputStream;III)V' name='ReInit' primary='true'><SourceLine endBytecode='102' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='391' end='392' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SimpleCharStream.ReInit(InputStream, int, int, int)</Message></Method><SourceLine synthetic='true' endBytecode='102' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='391' end='392' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'><Message>At SimpleCharStream.java:[lines 391-392]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='5b409a1af81a8e1e86fe031cf8a28e6e' rank='19' abbrev='Nm' category='BAD_PRACTICE' priority='3' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SimpleCharStream.ReInit(InputStream, String) doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SimpleCharStream' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='38' end='499' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java'><Message>At SimpleCharStream.java:[lines 38-499]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SimpleCharStream</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' signature='(Ljava/io/InputStream;Ljava/lang/String;)V' name='ReInit' primary='true'><SourceLine endBytecode='77' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='398' end='399' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SimpleCharStream.ReInit(InputStream, String)</Message></Method><SourceLine synthetic='true' endBytecode='77' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='398' end='399' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'><Message>At SimpleCharStream.java:[lines 398-399]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='23b054fa82f0247d6afbfba50f7a5733' rank='19' abbrev='Nm' category='BAD_PRACTICE' priority='3' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SimpleCharStream.ReInit(InputStream, String, int, int) doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SimpleCharStream' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='38' end='499' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java'><Message>At SimpleCharStream.java:[lines 38-499]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SimpleCharStream</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' signature='(Ljava/io/InputStream;Ljava/lang/String;II)V' name='ReInit' primary='true'><SourceLine endBytecode='98' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='413' end='414' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SimpleCharStream.ReInit(InputStream, String, int, int)</Message></Method><SourceLine synthetic='true' endBytecode='98' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='413' end='414' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'><Message>At SimpleCharStream.java:[lines 413-414]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='a674c2447ae2b4eeecdbb0d8cd39601b' rank='19' abbrev='Nm' category='BAD_PRACTICE' priority='3' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SimpleCharStream.ReInit(InputStream, String, int, int, int) doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SimpleCharStream' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='38' end='499' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java'><Message>At SimpleCharStream.java:[lines 38-499]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SimpleCharStream</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' signature='(Ljava/io/InputStream;Ljava/lang/String;III)V' name='ReInit' primary='true'><SourceLine endBytecode='166' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='381' end='384' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SimpleCharStream.ReInit(InputStream, String, int, int, int)</Message></Method><SourceLine synthetic='true' endBytecode='166' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='381' end='384' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'><Message>At SimpleCharStream.java:[lines 381-384]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='4d65f9205bcbc63b63f0ef8743d6a878' rank='19' abbrev='Nm' category='BAD_PRACTICE' priority='3' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SimpleCharStream.ReInit(Reader) doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SimpleCharStream' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='38' end='499' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java'><Message>At SimpleCharStream.java:[lines 38-499]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SimpleCharStream</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' signature='(Ljava/io/Reader;)V' name='ReInit' primary='true'><SourceLine endBytecode='66' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='325' end='326' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SimpleCharStream.ReInit(Reader)</Message></Method><SourceLine synthetic='true' endBytecode='66' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='325' end='326' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'><Message>At SimpleCharStream.java:[lines 325-326]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='ed63e2f8f0aaec7a5f5fdf29c7bc8ca2' rank='19' abbrev='Nm' category='BAD_PRACTICE' priority='3' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SimpleCharStream.ReInit(Reader, int, int) doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SimpleCharStream' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='38' end='499' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java'><Message>At SimpleCharStream.java:[lines 38-499]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SimpleCharStream</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' signature='(Ljava/io/Reader;II)V' name='ReInit' primary='true'><SourceLine endBytecode='86' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='318' end='319' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SimpleCharStream.ReInit(Reader, int, int)</Message></Method><SourceLine synthetic='true' endBytecode='86' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='318' end='319' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'><Message>At SimpleCharStream.java:[lines 318-319]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b4ec44b082d93a290753c272f9caa03d' rank='19' abbrev='Nm' category='BAD_PRACTICE' priority='3' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SimpleCharStream.ReInit(Reader, int, int, int) doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SimpleCharStream' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='38' end='499' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java'><Message>At SimpleCharStream.java:[lines 38-499]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SimpleCharStream</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' signature='(Ljava/io/Reader;III)V' name='ReInit' primary='true'><SourceLine endBytecode='235' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='298' end='311' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SimpleCharStream.ReInit(Reader, int, int, int)</Message></Method><SourceLine synthetic='true' endBytecode='235' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='298' end='311' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'><Message>At SimpleCharStream.java:[lines 298-311]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='6ad15cf192af12fd8658b090de0be26' rank='19' abbrev='Nm' category='BAD_PRACTICE' priority='3' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.SimpleCharStream.UpdateLineColumn(char) doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.SimpleCharStream' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='38' end='499' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java'><Message>At SimpleCharStream.java:[lines 38-499]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.SimpleCharStream</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' signature='(C)V' name='UpdateLineColumn' primary='true'><SourceLine endBytecode='337' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='151' end='181' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.SimpleCharStream.UpdateLineColumn(char)</Message></Method><SourceLine synthetic='true' endBytecode='337' classname='org.apache.rocketmq.filter.parser.SimpleCharStream' start='151' end='181' sourcepath='org/apache/rocketmq/filter/parser/SimpleCharStream.java' sourcefile='SimpleCharStream.java' startBytecode='0'><Message>At SimpleCharStream.java:[lines 151-181]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c8111f44b584bb2922a9324cc57ca4dd' rank='16' abbrev='Nm' category='BAD_PRACTICE' priority='2' type='NM_METHOD_NAMING_CONVENTION' instanceOccurrenceMax='0'><ShortMessage>Method names should start with a lower case letter</ShortMessage><LongMessage>The method name org.apache.rocketmq.filter.parser.TokenMgrError.LexicalError(boolean, int, int, int, String, char) doesn't start with a lower case letter</LongMessage><Class classname='org.apache.rocketmq.filter.parser.TokenMgrError' primary='true'><SourceLine classname='org.apache.rocketmq.filter.parser.TokenMgrError' start='69' end='172' sourcepath='org/apache/rocketmq/filter/parser/TokenMgrError.java' sourcefile='TokenMgrError.java'><Message>At TokenMgrError.java:[lines 69-172]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.parser.TokenMgrError</Message></Class><Method isStatic='true' classname='org.apache.rocketmq.filter.parser.TokenMgrError' signature='(ZIIILjava/lang/String;C)Ljava/lang/String;' name='LexicalError' primary='true'><SourceLine endBytecode='246' classname='org.apache.rocketmq.filter.parser.TokenMgrError' start='126' end='126' sourcepath='org/apache/rocketmq/filter/parser/TokenMgrError.java' sourcefile='TokenMgrError.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.parser.TokenMgrError.LexicalError(boolean, int, int, int, String, char)</Message></Method><SourceLine synthetic='true' endBytecode='246' classname='org.apache.rocketmq.filter.parser.TokenMgrError' start='126' end='126' sourcepath='org/apache/rocketmq/filter/parser/TokenMgrError.java' sourcefile='TokenMgrError.java' startBytecode='0'><Message>At TokenMgrError.java:[line 126]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='a0fe8efc7e13603ff507b36c431d2d1b' cweid='580' rank='16' abbrev='CN' category='BAD_PRACTICE' priority='2' type='CN_IDIOM_NO_SUPER_CALL' instanceOccurrenceMax='0'><ShortMessage>clone method does not call super.clone()</ShortMessage><LongMessage>org.apache.rocketmq.filter.util.BitsArray.clone() does not call super.clone()</LongMessage><Class classname='org.apache.rocketmq.filter.util.BitsArray' primary='true'><SourceLine classname='org.apache.rocketmq.filter.util.BitsArray' start='23' end='258' sourcepath='org/apache/rocketmq/filter/util/BitsArray.java' sourcefile='BitsArray.java'><Message>At BitsArray.java:[lines 23-258]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.util.BitsArray</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.util.BitsArray' signature='()Lorg/apache/rocketmq/filter/util/BitsArray;' name='clone' primary='true'><SourceLine endBytecode='89' classname='org.apache.rocketmq.filter.util.BitsArray' start='223' end='227' sourcepath='org/apache/rocketmq/filter/util/BitsArray.java' sourcefile='BitsArray.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.util.BitsArray.clone()</Message></Method><SourceLine synthetic='true' endBytecode='89' classname='org.apache.rocketmq.filter.util.BitsArray' start='223' end='227' sourcepath='org/apache/rocketmq/filter/util/BitsArray.java' sourcefile='BitsArray.java' startBytecode='0'><Message>At BitsArray.java:[lines 223-227]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='32bdd1fa3a0d2fc6efc26a5992376cf5' cweid='374' rank='18' abbrev='EI' category='MALICIOUS_CODE' priority='2' type='EI_EXPOSE_REP' instanceOccurrenceMax='0'><ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage><LongMessage>org.apache.rocketmq.filter.util.BitsArray.bytes() may expose internal representation by returning BitsArray.bytes</LongMessage><Class classname='org.apache.rocketmq.filter.util.BitsArray' primary='true'><SourceLine classname='org.apache.rocketmq.filter.util.BitsArray' start='23' end='258' sourcepath='org/apache/rocketmq/filter/util/BitsArray.java' sourcefile='BitsArray.java'><Message>At BitsArray.java:[lines 23-258]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.util.BitsArray</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.util.BitsArray' signature='()[B' name='bytes' primary='true'><SourceLine endBytecode='46' classname='org.apache.rocketmq.filter.util.BitsArray' start='90' end='90' sourcepath='org/apache/rocketmq/filter/util/BitsArray.java' sourcefile='BitsArray.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.util.BitsArray.bytes()</Message></Method><Field isStatic='false' classname='org.apache.rocketmq.filter.util.BitsArray' signature='[B' name='bytes' primary='true'><SourceLine classname='org.apache.rocketmq.filter.util.BitsArray' sourcepath='org/apache/rocketmq/filter/util/BitsArray.java' sourcefile='BitsArray.java'><Message>In BitsArray.java</Message></SourceLine><Message>Field org.apache.rocketmq.filter.util.BitsArray.bytes</Message></Field><SourceLine endBytecode='4' classname='org.apache.rocketmq.filter.util.BitsArray' start='90' end='90' sourcepath='org/apache/rocketmq/filter/util/BitsArray.java' sourcefile='BitsArray.java' startBytecode='4' primary='true'><Message>At BitsArray.java:[line 90]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='6f700385ed6f9ffc6b4407923fddd5d2' cweid='374' rank='18' abbrev='EI' category='MALICIOUS_CODE' priority='2' type='EI_EXPOSE_REP' instanceOccurrenceMax='0'><ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage><LongMessage>org.apache.rocketmq.filter.util.BloomFilterData.getBitPos() may expose internal representation by returning BloomFilterData.bitPos</LongMessage><Class classname='org.apache.rocketmq.filter.util.BloomFilterData' primary='true'><SourceLine classname='org.apache.rocketmq.filter.util.BloomFilterData' start='32' end='83' sourcepath='org/apache/rocketmq/filter/util/BloomFilterData.java' sourcefile='BloomFilterData.java'><Message>At BloomFilterData.java:[lines 32-83]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.util.BloomFilterData</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.util.BloomFilterData' signature='()[I' name='getBitPos' primary='true'><SourceLine endBytecode='46' classname='org.apache.rocketmq.filter.util.BloomFilterData' start='41' end='41' sourcepath='org/apache/rocketmq/filter/util/BloomFilterData.java' sourcefile='BloomFilterData.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.util.BloomFilterData.getBitPos()</Message></Method><Field isStatic='false' classname='org.apache.rocketmq.filter.util.BloomFilterData' signature='[I' name='bitPos' primary='true'><SourceLine classname='org.apache.rocketmq.filter.util.BloomFilterData' sourcepath='org/apache/rocketmq/filter/util/BloomFilterData.java' sourcefile='BloomFilterData.java'><Message>In BloomFilterData.java</Message></SourceLine><Message>Field org.apache.rocketmq.filter.util.BloomFilterData.bitPos</Message></Field><SourceLine endBytecode='4' classname='org.apache.rocketmq.filter.util.BloomFilterData' start='41' end='41' sourcepath='org/apache/rocketmq/filter/util/BloomFilterData.java' sourcefile='BloomFilterData.java' startBytecode='4' primary='true'><Message>At BloomFilterData.java:[line 41]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b9a2d695643ee6e5bb3b83e138e9fe6a' cweid='374' rank='18' abbrev='EI2' category='MALICIOUS_CODE' priority='2' type='EI_EXPOSE_REP2' instanceOccurrenceMax='0'><ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage><LongMessage>new org.apache.rocketmq.filter.util.BloomFilterData(int[], int) may expose internal representation by storing an externally mutable object into BloomFilterData.bitPos</LongMessage><Class classname='org.apache.rocketmq.filter.util.BloomFilterData' primary='true'><SourceLine classname='org.apache.rocketmq.filter.util.BloomFilterData' start='32' end='83' sourcepath='org/apache/rocketmq/filter/util/BloomFilterData.java' sourcefile='BloomFilterData.java'><Message>At BloomFilterData.java:[lines 32-83]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.util.BloomFilterData</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.util.BloomFilterData' signature='([II)V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='88' classname='org.apache.rocketmq.filter.util.BloomFilterData' start='35' end='38' sourcepath='org/apache/rocketmq/filter/util/BloomFilterData.java' sourcefile='BloomFilterData.java' startBytecode='0'></SourceLine><Message>In method new org.apache.rocketmq.filter.util.BloomFilterData(int[], int)</Message></Method><Field isStatic='false' classname='org.apache.rocketmq.filter.util.BloomFilterData' signature='[I' name='bitPos' primary='true'><SourceLine classname='org.apache.rocketmq.filter.util.BloomFilterData' sourcepath='org/apache/rocketmq/filter/util/BloomFilterData.java' sourcefile='BloomFilterData.java'><Message>In BloomFilterData.java</Message></SourceLine><Message>Field org.apache.rocketmq.filter.util.BloomFilterData.bitPos</Message></Field><LocalVariable role='LOCAL_VARIABLE_NAMED' pc='6' name='bitPos' register='1'><Message>Local variable named bitPos</Message></LocalVariable><SourceLine endBytecode='6' classname='org.apache.rocketmq.filter.util.BloomFilterData' start='36' end='36' sourcepath='org/apache/rocketmq/filter/util/BloomFilterData.java' sourcefile='BloomFilterData.java' startBytecode='6' primary='true'><Message>At BloomFilterData.java:[line 36]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='6e688d229d971d957a21160ef17b3e75' cweid='374' rank='18' abbrev='EI2' category='MALICIOUS_CODE' priority='2' type='EI_EXPOSE_REP2' instanceOccurrenceMax='0'><ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage><LongMessage>org.apache.rocketmq.filter.util.BloomFilterData.setBitPos(int[]) may expose internal representation by storing an externally mutable object into BloomFilterData.bitPos</LongMessage><Class classname='org.apache.rocketmq.filter.util.BloomFilterData' primary='true'><SourceLine classname='org.apache.rocketmq.filter.util.BloomFilterData' start='32' end='83' sourcepath='org/apache/rocketmq/filter/util/BloomFilterData.java' sourcefile='BloomFilterData.java'><Message>At BloomFilterData.java:[lines 32-83]</Message></SourceLine><Message>In class org.apache.rocketmq.filter.util.BloomFilterData</Message></Class><Method isStatic='false' classname='org.apache.rocketmq.filter.util.BloomFilterData' signature='([I)V' name='setBitPos' primary='true'><SourceLine endBytecode='61' classname='org.apache.rocketmq.filter.util.BloomFilterData' start='49' end='50' sourcepath='org/apache/rocketmq/filter/util/BloomFilterData.java' sourcefile='BloomFilterData.java' startBytecode='0'></SourceLine><Message>In method org.apache.rocketmq.filter.util.BloomFilterData.setBitPos(int[])</Message></Method><Field isStatic='false' classname='org.apache.rocketmq.filter.util.BloomFilterData' signature='[I' name='bitPos' primary='true'><SourceLine classname='org.apache.rocketmq.filter.util.BloomFilterData' sourcepath='org/apache/rocketmq/filter/util/BloomFilterData.java' sourcefile='BloomFilterData.java'><Message>In BloomFilterData.java</Message></SourceLine><Message>Field org.apache.rocketmq.filter.util.BloomFilterData.bitPos</Message></Field><LocalVariable role='LOCAL_VARIABLE_NAMED' pc='2' name='bitPos' register='1'><Message>Local variable named bitPos</Message></LocalVariable><SourceLine endBytecode='2' classname='org.apache.rocketmq.filter.util.BloomFilterData' start='49' end='49' sourcepath='org/apache/rocketmq/filter/util/BloomFilterData.java' sourcefile='BloomFilterData.java' startBytecode='2' primary='true'><Message>At BloomFilterData.java:[line 49]</Message></SourceLine></BugInstance><BugCategory category='BAD_PRACTICE'><Description>Bad practice</Description></BugCategory><BugCategory category='MALICIOUS_CODE'><Description>Malicious code vulnerability</Description></BugCategory><BugCategory category='PERFORMANCE'><Description>Performance</Description></BugCategory><BugCategory category='STYLE'><Description>Dodgy code</Description></BugCategory><BugCategory category='I18N'><Description>Internationalization</Description></BugCategory><BugPattern abbrev='UrF' category='STYLE' type='URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD'><ShortDescription>Unread public/protected field</ShortDescription><Details>

  &lt;p&gt; This field is never read.&amp;nbsp;
The field is public or protected, so perhaps
    it is intended to be used with classes not seen as part of the analysis. If not,
consider removing it from the class.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='CN' category='BAD_PRACTICE' type='CN_IDIOM_NO_SUPER_CALL'><ShortDescription>clone method does not call super.clone()</ShortDescription><Details>

&lt;p&gt; This non-final class defines a clone() method that does not call super.clone().
If this class ("&lt;i&gt;A&lt;/i&gt;") is extended by a subclass ("&lt;i&gt;B&lt;/i&gt;"),
and the subclass &lt;i&gt;B&lt;/i&gt; calls super.clone(), then it is likely that
&lt;i&gt;B&lt;/i&gt;'s clone() method will return an object of type &lt;i&gt;A&lt;/i&gt;,
which violates the standard contract for clone().&lt;/p&gt;

&lt;p&gt; If all clone() methods call super.clone(), then they are guaranteed
to use Object.clone(), which always returns an object of the correct type.&lt;/p&gt;

    </Details></BugPattern><BugPattern cweid='374' abbrev='EI2' category='MALICIOUS_CODE' type='EI_EXPOSE_REP2'><ShortDescription>May expose internal representation by incorporating reference to mutable object</ShortDescription><Details>

  &lt;p&gt; This code stores a reference to an externally mutable object into the
  internal representation of the object.&amp;nbsp;
   If instances
   are accessed by untrusted code, and unchecked changes to
   the mutable object would compromise security or other
   important properties, you will need to do something different.
  Storing a copy of the object is better approach in many situations.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='DB' category='STYLE' type='DB_DUPLICATE_SWITCH_CLAUSES'><ShortDescription>Method uses the same code for two switch clauses</ShortDescription><Details>
      
      &lt;p&gt;
      This method uses the same code to implement two clauses of a switch statement.
    This could be a case of duplicate code, but it might also indicate
    a coding mistake.
      &lt;/p&gt;
      
   </Details></BugPattern><BugPattern abbrev='SBSC' category='PERFORMANCE' type='SBSC_USE_STRINGBUFFER_CONCATENATION'><ShortDescription>Method concatenates strings using + in a loop</ShortDescription><Details>

&lt;p&gt; The method seems to be building a String using concatenation in a loop.
In each iteration, the String is converted to a StringBuffer/StringBuilder,
   appended to, and converted back to a String.
   This can lead to a cost quadratic in the number of iterations,
   as the growing string is recopied in each iteration. &lt;/p&gt;

&lt;p&gt;Better performance can be obtained by using
a StringBuffer (or StringBuilder in Java 1.5) explicitly.&lt;/p&gt;

&lt;p&gt; For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// This is bad
String s = "";
for (int i = 0; i &amp;lt; field.length; ++i) {
    s = s + field[i];
}

// This is better
StringBuffer buf = new StringBuffer();
for (int i = 0; i &amp;lt; field.length; ++i) {
    buf.append(field[i]);
}
String s = buf.toString();
&lt;/code&gt;&lt;/pre&gt;

    </Details></BugPattern><BugPattern abbrev='RC' category='BAD_PRACTICE' type='RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN'><ShortDescription>Suspicious reference comparison of Boolean values</ShortDescription><Details>

&lt;p&gt; This method compares two Boolean values using the == or != operator.
Normally, there are only two Boolean values (Boolean.TRUE and Boolean.FALSE),
but it is possible to create other Boolean objects using the &lt;code&gt;new Boolean(b)&lt;/code&gt;
constructor. It is best to avoid such objects, but if they do exist,
then checking Boolean objects for equality using == or != will give results
than are different than you would get using &lt;code&gt;.equals(...)&lt;/code&gt;.
&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='Nm' category='BAD_PRACTICE' type='NM_METHOD_NAMING_CONVENTION'><ShortDescription>Method names should start with a lower case letter</ShortDescription><Details>

  &lt;p&gt;
Methods should be verbs, in mixed case with the first letter lowercase, with the first letter of each internal word capitalized.
&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='UrF' category='PERFORMANCE' type='URF_UNREAD_FIELD'><ShortDescription>Unread field</ShortDescription><Details>

  &lt;p&gt; This field is never read.&amp;nbsp; Consider removing it from the class.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='Bx' category='PERFORMANCE' type='BX_UNBOXING_IMMEDIATELY_REBOXED'><ShortDescription>Boxed value is unboxed and then immediately reboxed</ShortDescription><Details>

  &lt;p&gt;A boxed value is unboxed and then immediately reboxed.
&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='UPM' category='PERFORMANCE' type='UPM_UNCALLED_PRIVATE_METHOD'><ShortDescription>Private method is never called</ShortDescription><Details>

&lt;p&gt; This private method is never called. Although it is
possible that the method will be invoked through reflection,
it is more likely that the method is never used, and should be
removed.
&lt;/p&gt;

</Details></BugPattern><BugPattern abbrev='MS' category='MALICIOUS_CODE' type='MS_PKGPROTECT'><ShortDescription>Field should be package protected</ShortDescription><Details>

  &lt;p&gt; A mutable static field could be changed by malicious code or
   by accident.
   The field could be made package protected to avoid
   this vulnerability.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='MS' category='MALICIOUS_CODE' type='MS_MUTABLE_COLLECTION_PKGPROTECT'><ShortDescription>Field is a mutable collection which should be package protected</ShortDescription><Details>

 &lt;p&gt;A mutable collection instance is assigned to a final static field,
   thus can be changed by malicious code or by accident from another package.
   The field could be made package protected to avoid this vulnerability.
   Alternatively you may wrap this field into Collections.unmodifiableSet/List/Map/etc.
   to avoid this vulnerability.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='Bx' category='PERFORMANCE' type='DM_FP_NUMBER_CTOR'><ShortDescription>Method invokes inefficient floating-point Number constructor; use static valueOf instead</ShortDescription><Details>
      
      &lt;p&gt;
      Using &lt;code&gt;new Double(double)&lt;/code&gt; is guaranteed to always result in a new object whereas
      &lt;code&gt;Double.valueOf(double)&lt;/code&gt; allows caching of values to be done by the compiler, class library, or JVM.
      Using of cached values avoids object allocation and the code will be faster.
      &lt;/p&gt;
      &lt;p&gt;
      Unless the class must be compatible with JVMs predating Java 1.5,
      use either autoboxing or the &lt;code&gt;valueOf()&lt;/code&gt; method when creating instances of &lt;code&gt;Double&lt;/code&gt; and &lt;code&gt;Float&lt;/code&gt;.
      &lt;/p&gt;
      
    </Details></BugPattern><BugPattern cweid='374' abbrev='EI' category='MALICIOUS_CODE' type='EI_EXPOSE_REP'><ShortDescription>May expose internal representation by returning reference to mutable object</ShortDescription><Details>

  &lt;p&gt; Returning a reference to a mutable object value stored in one of the object's fields
  exposes the internal representation of the object.&amp;nbsp;
   If instances
   are accessed by untrusted code, and unchecked changes to
   the mutable object would compromise security or other
   important properties, you will need to do something different.
  Returning a new copy of the object is better approach in many situations.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='Dm' category='I18N' type='DM_DEFAULT_ENCODING'><ShortDescription>Reliance on default encoding</ShortDescription><Details>

&lt;p&gt; Found a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. This will cause the application behaviour to vary between platforms. Use an alternative API and specify a charset name or Charset object explicitly.  &lt;/p&gt;

      </Details></BugPattern><BugPattern abbrev='MS' category='MALICIOUS_CODE' type='MS_OOI_PKGPROTECT'><ShortDescription>Field should be moved out of an interface and made package protected</ShortDescription><Details>

&lt;p&gt;
 A final static field that is
defined in an interface references a mutable
   object such as an array or hashtable.
   This mutable object could
   be changed by malicious code or
        by accident from another package.
   To solve this, the field needs to be moved to a class
   and made package protected
   to avoid
        this vulnerability.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='Bx' category='PERFORMANCE' type='DM_NUMBER_CTOR'><ShortDescription>Method invokes inefficient Number constructor; use static valueOf instead</ShortDescription><Details>
      
      &lt;p&gt;
      Using &lt;code&gt;new Integer(int)&lt;/code&gt; is guaranteed to always result in a new object whereas
      &lt;code&gt;Integer.valueOf(int)&lt;/code&gt; allows caching of values to be done by the compiler, class library, or JVM.
      Using of cached values avoids object allocation and the code will be faster.
      &lt;/p&gt;
      &lt;p&gt;
      Values between -128 and 127 are guaranteed to have corresponding cached instances
      and using &lt;code&gt;valueOf&lt;/code&gt; is approximately 3.5 times faster than using constructor.
      For values outside the constant range the performance of both styles is the same.
      &lt;/p&gt;
      &lt;p&gt;
      Unless the class must be compatible with JVMs predating Java 1.5,
      use either autoboxing or the &lt;code&gt;valueOf()&lt;/code&gt; method when creating instances of
      &lt;code&gt;Long&lt;/code&gt;, &lt;code&gt;Integer&lt;/code&gt;, &lt;code&gt;Short&lt;/code&gt;, &lt;code&gt;Character&lt;/code&gt;, and &lt;code&gt;Byte&lt;/code&gt;.
      &lt;/p&gt;
      
    </Details></BugPattern><BugPattern abbrev='SF' category='STYLE' type='SF_SWITCH_NO_DEFAULT'><ShortDescription>Switch statement found where default case is missing</ShortDescription><Details>

  &lt;p&gt; This method contains a switch statement where default case is missing.
  Usually you need to provide a default case.&lt;/p&gt;
  &lt;p&gt;Because the analysis only looks at the generated bytecode, this warning can be incorrect triggered if
the default case is at the end of the switch statement and the switch statement doesn't contain break statements for other
cases.

    </Details></BugPattern><BugCode abbrev='EI'><Description>Method returning array may expose internal representation</Description></BugCode><BugCode cweid='218' abbrev='MS'><Description>Mutable static field</Description></BugCode><BugCode abbrev='UrF'><Description>Unread field</Description></BugCode><BugCode abbrev='Dm'><Description>Dubious method used</Description></BugCode><BugCode cweid='580' abbrev='CN'><Description>Bad implementation of cloneable idiom</Description></BugCode><BugCode abbrev='EI2'><Description>Storing reference to mutable object</Description></BugCode><BugCode abbrev='RC'><Description>Questionable use of reference equality rather than calling equals</Description></BugCode><BugCode abbrev='SF'><Description>Switch case falls through</Description></BugCode><BugCode abbrev='UPM'><Description>Private method is never called</Description></BugCode><BugCode abbrev='Bx'><Description>Questionable Boxing of primitive value</Description></BugCode><BugCode abbrev='SBSC'><Description>String concatenation in loop using + operator</Description></BugCode><BugCode abbrev='DB'><Description>Duplicate Branches</Description></BugCode><BugCode abbrev='Nm'><Description>Confusing method name</Description></BugCode><Errors missingClasses='0' errors='0'></Errors><FindBugsSummary num_packages='5' total_classes='43' priority_1='4' priority_2='32' priority_3='27' total_size='2778' clock_seconds='4.70' referenced_classes='117' vm_version='25.222-b10' total_bugs='63' java_version='1.8.0_222' gc_seconds='0.08' alloc_mbytes='3641.00' cpu_seconds='20.83' peak_mbytes='313.18' timestamp='Thu, 12 Sep 2019 13:37:15 +0200'><FileStats path='org/apache/rocketmq/filter/FilterFactory.java' size='19' bugHash='9dd6b5f0e2c72e68a82d167249658f71' bugCount='1'></FileStats><FileStats path='org/apache/rocketmq/filter/FilterSpi.java' size='3' bugCount='0'></FileStats><FileStats path='org/apache/rocketmq/filter/SqlFilter.java' size='7' bugCount='0'></FileStats><FileStats path='org/apache/rocketmq/filter/constant/UnaryType.java' size='17' bugCount='0'></FileStats><FileStats path='org/apache/rocketmq/filter/expression/BinaryExpression.java' size='27' bugCount='0'></FileStats><FileStats path='org/apache/rocketmq/filter/expression/BooleanExpression.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/rocketmq/filter/expression/ComparisonExpression.java' size='247' bugHash='d1a685646dab9a865846a90ee9e2be0f' bugCount='4'></FileStats><FileStats path='org/apache/rocketmq/filter/expression/ConstantExpression.java' size='66' bugHash='46f17ac1ba0093a4bf1e978e0c19f451' bugCount='3'></FileStats><FileStats path='org/apache/rocketmq/filter/expression/EmptyEvaluationContext.java' size='7' bugCount='0'></FileStats><FileStats path='org/apache/rocketmq/filter/expression/EvaluationContext.java' size='3' bugCount='0'></FileStats><FileStats path='org/apache/rocketmq/filter/expression/Expression.java' size='2' bugCount='0'></FileStats><FileStats path='org/apache/rocketmq/filter/expression/LogicExpression.java' size='42' bugHash='6573f86bf7e521e117ece7169e807227' bugCount='1'></FileStats><FileStats path='org/apache/rocketmq/filter/expression/MQFilterException.java' size='18' bugCount='0'></FileStats><FileStats path='org/apache/rocketmq/filter/expression/NowExpression.java' size='8' bugHash='2cd0b7a5ef411253fa82d2adcd1dedfe' bugCount='2'></FileStats><FileStats path='org/apache/rocketmq/filter/expression/PropertyExpression.java' size='18' bugCount='0'></FileStats><FileStats path='org/apache/rocketmq/filter/expression/UnaryExpression.java' size='144' bugHash='810bf79b82407d6427bee80eb78189c1' bugCount='5'></FileStats><FileStats path='org/apache/rocketmq/filter/expression/UnaryInExpression.java' size='21' bugHash='bb75ff0ef250edf822401d4d7d7811d0' bugCount='1'></FileStats><FileStats path='org/apache/rocketmq/filter/parser/ParseException.java' size='78' bugHash='4ff045f16e7fa0466d2fa19f58816db6' bugCount='1'></FileStats><FileStats path='org/apache/rocketmq/filter/parser/SelectorParser.java' size='840' bugHash='ca5f2c7d4c282af1836b978708ee2a07' bugCount='7'></FileStats><FileStats path='org/apache/rocketmq/filter/parser/SelectorParserConstants.java' size='22' bugHash='1e921fc513c9d215785f9e6233fed3da' bugCount='1'></FileStats><FileStats path='org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java' size='550' bugHash='0dd9f433c54759ced20b2688fb7bd3a6' bugCount='11'></FileStats><FileStats path='org/apache/rocketmq/filter/parser/SimpleCharStream.java' size='248' bugHash='9b9212ab35daf245ca3c754139421fde' bugCount='20'></FileStats><FileStats path='org/apache/rocketmq/filter/parser/Token.java' size='30' bugCount='0'></FileStats><FileStats path='org/apache/rocketmq/filter/parser/TokenMgrError.java' size='50' bugHash='d470672a93edfed6a5b9b804de7f81c3' bugCount='1'></FileStats><FileStats path='org/apache/rocketmq/filter/util/BitsArray.java' size='149' bugHash='1dca471d105691ff24b4a6e4d5f694fe' bugCount='2'></FileStats><FileStats path='org/apache/rocketmq/filter/util/BloomFilter.java' size='121' bugCount='0'></FileStats><FileStats path='org/apache/rocketmq/filter/util/BloomFilterData.java' size='39' bugHash='0a52df51d903f12f262771fb71585e1a' bugCount='3'></FileStats><PackageStats package='org.apache.rocketmq.filter' total_bugs='1' priority_2='1' total_size='29' total_types='3'><ClassStats bugs='1' size='19' priority_2='1' interface='false' sourceFile='FilterFactory.java' class='org.apache.rocketmq.filter.FilterFactory'></ClassStats><ClassStats bugs='0' size='3' interface='true' sourceFile='FilterSpi.java' class='org.apache.rocketmq.filter.FilterSpi'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='SqlFilter.java' class='org.apache.rocketmq.filter.SqlFilter'></ClassStats></PackageStats><PackageStats package='org.apache.rocketmq.filter.constant' total_bugs='0' total_size='17' total_types='1'><ClassStats bugs='0' size='17' interface='false' sourceFile='UnaryType.java' class='org.apache.rocketmq.filter.constant.UnaryType'></ClassStats></PackageStats><PackageStats package='org.apache.rocketmq.filter.expression' total_bugs='16' priority_2='11' priority_3='5' total_size='605' total_types='26'><ClassStats bugs='0' size='27' interface='false' sourceFile='BinaryExpression.java' class='org.apache.rocketmq.filter.expression.BinaryExpression'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='BooleanExpression.java' class='org.apache.rocketmq.filter.expression.BooleanExpression'></ClassStats><ClassStats bugs='4' size='200' priority_2='2' priority_3='2' interface='false' sourceFile='ComparisonExpression.java' class='org.apache.rocketmq.filter.expression.ComparisonExpression'></ClassStats><ClassStats bugs='0' size='19' interface='false' sourceFile='ComparisonExpression.java' class='org.apache.rocketmq.filter.expression.ComparisonExpression$1'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='ComparisonExpression.java' class='org.apache.rocketmq.filter.expression.ComparisonExpression$2'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='ComparisonExpression.java' class='org.apache.rocketmq.filter.expression.ComparisonExpression$3'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='ComparisonExpression.java' class='org.apache.rocketmq.filter.expression.ComparisonExpression$4'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='ComparisonExpression.java' class='org.apache.rocketmq.filter.expression.ComparisonExpression$5'></ClassStats><ClassStats bugs='2' size='59' priority_2='1' priority_3='1' interface='false' sourceFile='ConstantExpression.java' class='org.apache.rocketmq.filter.expression.ConstantExpression'></ClassStats><ClassStats bugs='1' size='7' priority_2='1' interface='false' sourceFile='ConstantExpression.java' class='org.apache.rocketmq.filter.expression.ConstantExpression$BooleanConstantExpression'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='EmptyEvaluationContext.java' class='org.apache.rocketmq.filter.expression.EmptyEvaluationContext'></ClassStats><ClassStats bugs='0' size='3' interface='true' sourceFile='EvaluationContext.java' class='org.apache.rocketmq.filter.expression.EvaluationContext'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='Expression.java' class='org.apache.rocketmq.filter.expression.Expression'></ClassStats><ClassStats bugs='1' size='12' priority_2='1' interface='false' sourceFile='LogicExpression.java' class='org.apache.rocketmq.filter.expression.LogicExpression'></ClassStats><ClassStats bugs='0' size='15' interface='false' sourceFile='LogicExpression.java' class='org.apache.rocketmq.filter.expression.LogicExpression$1'></ClassStats><ClassStats bugs='0' size='15' interface='false' sourceFile='LogicExpression.java' class='org.apache.rocketmq.filter.expression.LogicExpression$2'></ClassStats><ClassStats bugs='0' size='18' interface='false' sourceFile='MQFilterException.java' class='org.apache.rocketmq.filter.expression.MQFilterException'></ClassStats><ClassStats bugs='2' size='8' priority_2='2' interface='false' sourceFile='NowExpression.java' class='org.apache.rocketmq.filter.expression.NowExpression'></ClassStats><ClassStats bugs='0' size='18' interface='false' sourceFile='PropertyExpression.java' class='org.apache.rocketmq.filter.expression.PropertyExpression'></ClassStats><ClassStats bugs='4' size='67' priority_2='2' priority_3='2' interface='false' sourceFile='UnaryExpression.java' class='org.apache.rocketmq.filter.expression.UnaryExpression'></ClassStats><ClassStats bugs='0' size='12' interface='false' sourceFile='UnaryExpression.java' class='org.apache.rocketmq.filter.expression.UnaryExpression$1'></ClassStats><ClassStats bugs='0' size='34' interface='false' sourceFile='UnaryExpression.java' class='org.apache.rocketmq.filter.expression.UnaryExpression$2'></ClassStats><ClassStats bugs='0' size='10' interface='false' sourceFile='UnaryExpression.java' class='org.apache.rocketmq.filter.expression.UnaryExpression$3'></ClassStats><ClassStats bugs='0' size='14' interface='false' sourceFile='UnaryExpression.java' class='org.apache.rocketmq.filter.expression.UnaryExpression$4'></ClassStats><ClassStats bugs='1' size='7' priority_2='1' interface='false' sourceFile='UnaryExpression.java' class='org.apache.rocketmq.filter.expression.UnaryExpression$BooleanUnaryExpression'></ClassStats><ClassStats bugs='1' size='21' priority_2='1' interface='false' sourceFile='UnaryInExpression.java' class='org.apache.rocketmq.filter.expression.UnaryInExpression'></ClassStats></PackageStats><PackageStats package='org.apache.rocketmq.filter.parser' priority_1='4' total_bugs='41' priority_2='15' priority_3='22' total_size='1818' total_types='10'><ClassStats bugs='1' size='78' priority_2='1' interface='false' sourceFile='ParseException.java' class='org.apache.rocketmq.filter.parser.ParseException'></ClassStats><ClassStats bugs='7' size='828' priority_2='7' interface='false' sourceFile='SelectorParser.java' class='org.apache.rocketmq.filter.parser.SelectorParser'></ClassStats><ClassStats bugs='0' size='1' interface='false' sourceFile='SelectorParser.java' class='org.apache.rocketmq.filter.parser.SelectorParser$1'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='SelectorParser.java' class='org.apache.rocketmq.filter.parser.SelectorParser$JJCalls'></ClassStats><ClassStats bugs='0' size='4' interface='false' sourceFile='SelectorParser.java' class='org.apache.rocketmq.filter.parser.SelectorParser$LookaheadSuccess'></ClassStats><ClassStats bugs='1' size='22' priority_2='1' interface='true' sourceFile='SelectorParserConstants.java' class='org.apache.rocketmq.filter.parser.SelectorParserConstants'></ClassStats><ClassStats bugs='11' size='550' priority_2='5' priority_3='6' interface='false' sourceFile='SelectorParserTokenManager.java' class='org.apache.rocketmq.filter.parser.SelectorParserTokenManager'></ClassStats><ClassStats bugs='20' size='248' priority_1='4' priority_3='16' interface='false' sourceFile='SimpleCharStream.java' class='org.apache.rocketmq.filter.parser.SimpleCharStream'></ClassStats><ClassStats bugs='0' size='30' interface='false' sourceFile='Token.java' class='org.apache.rocketmq.filter.parser.Token'></ClassStats><ClassStats bugs='1' size='50' priority_2='1' interface='false' sourceFile='TokenMgrError.java' class='org.apache.rocketmq.filter.parser.TokenMgrError'></ClassStats></PackageStats><PackageStats package='org.apache.rocketmq.filter.util' total_bugs='5' priority_2='5' total_size='309' total_types='3'><ClassStats bugs='2' size='149' priority_2='2' interface='false' sourceFile='BitsArray.java' class='org.apache.rocketmq.filter.util.BitsArray'></ClassStats><ClassStats bugs='0' size='121' interface='false' sourceFile='BloomFilter.java' class='org.apache.rocketmq.filter.util.BloomFilter'></ClassStats><ClassStats bugs='3' size='39' priority_2='3' interface='false' sourceFile='BloomFilterData.java' class='org.apache.rocketmq.filter.util.BloomFilterData'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='408' totalMilliseconds='276' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' maxMicrosecondsPerInvocation='18140' standardDeviationMicrosecondsPerInvocation='1128' invocations='676'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='364' totalMilliseconds='247' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' maxMicrosecondsPerInvocation='2192' standardDeviationMicrosecondsPerInvocation='205' invocations='679'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='641' totalMilliseconds='236' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' maxMicrosecondsPerInvocation='190714' standardDeviationMicrosecondsPerInvocation='9924' invocations='368'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='648' totalMilliseconds='235' name='edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory' maxMicrosecondsPerInvocation='44668' standardDeviationMicrosecondsPerInvocation='3134' invocations='363'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='493' totalMilliseconds='176' name='edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory' maxMicrosecondsPerInvocation='49356' standardDeviationMicrosecondsPerInvocation='2731' invocations='357'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='488' totalMilliseconds='174' name='edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory' maxMicrosecondsPerInvocation='19084' standardDeviationMicrosecondsPerInvocation='1381' invocations='358'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='449' totalMilliseconds='160' name='edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder' maxMicrosecondsPerInvocation='11084' standardDeviationMicrosecondsPerInvocation='982' invocations='357'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='423' totalMilliseconds='153' name='edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory' maxMicrosecondsPerInvocation='13795' standardDeviationMicrosecondsPerInvocation='1109' invocations='362'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1156' totalMilliseconds='135' name='edu.umd.cs.findbugs.detect.FieldItemSummary' maxMicrosecondsPerInvocation='14588' standardDeviationMicrosecondsPerInvocation='2348' invocations='117'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='195' totalMilliseconds='127' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' maxMicrosecondsPerInvocation='8725' standardDeviationMicrosecondsPerInvocation='494' invocations='652'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='335' totalMilliseconds='120' name='edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory' maxMicrosecondsPerInvocation='13293' standardDeviationMicrosecondsPerInvocation='860' invocations='358'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='917' totalMilliseconds='107' name='edu.umd.cs.findbugs.detect.FindNoSideEffectMethods' maxMicrosecondsPerInvocation='13710' standardDeviationMicrosecondsPerInvocation='1914' invocations='117'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='608' totalMilliseconds='91' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' maxMicrosecondsPerInvocation='32296' standardDeviationMicrosecondsPerInvocation='3008' invocations='150'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='282' totalMilliseconds='79' name='edu.umd.cs.findbugs.detect.FindRefComparison$SpecialTypeAnalysis' maxMicrosecondsPerInvocation='8910' standardDeviationMicrosecondsPerInvocation='696' invocations='280'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2962' totalMilliseconds='74' name='edu.umd.cs.findbugs.classfile.impl.ZipCodeBaseFactory' maxMicrosecondsPerInvocation='68822' standardDeviationMicrosecondsPerInvocation='13447' invocations='25'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='466' totalMilliseconds='55' name='edu.umd.cs.findbugs.ba.obl.ObligationAnalysis' maxMicrosecondsPerInvocation='5730' standardDeviationMicrosecondsPerInvocation='676' invocations='118'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='461' totalMilliseconds='53' name='edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers' maxMicrosecondsPerInvocation='5934' standardDeviationMicrosecondsPerInvocation='1031' invocations='117'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='141' totalMilliseconds='50' name='edu.umd.cs.findbugs.classfile.engine.bcel.ConstantDataflowFactory' maxMicrosecondsPerInvocation='5072' standardDeviationMicrosecondsPerInvocation='391' invocations='358'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='79' totalMilliseconds='50' name='edu.umd.cs.findbugs.util.TopologicalSort' maxMicrosecondsPerInvocation='4169' standardDeviationMicrosecondsPerInvocation='228' invocations='636'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1071' totalMilliseconds='46' name='edu.umd.cs.findbugs.detect.CheckRelaxingNullnessAnnotation' maxMicrosecondsPerInvocation='29203' standardDeviationMicrosecondsPerInvocation='4409' invocations='43'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1064' totalMilliseconds='45' name='edu.umd.cs.findbugs.detect.FindInconsistentSync2' maxMicrosecondsPerInvocation='15933' standardDeviationMicrosecondsPerInvocation='2705' invocations='43'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='121' totalMilliseconds='44' name='edu.umd.cs.findbugs.classfile.engine.bcel.ValueRangeAnalysisFactory' maxMicrosecondsPerInvocation='13826' standardDeviationMicrosecondsPerInvocation='782' invocations='368'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='352' totalMilliseconds='41' name='edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures' maxMicrosecondsPerInvocation='5742' standardDeviationMicrosecondsPerInvocation='913' invocations='117'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='321' totalMilliseconds='37' name='edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical' maxMicrosecondsPerInvocation='9404' standardDeviationMicrosecondsPerInvocation='1004' invocations='117'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='838' totalMilliseconds='36' name='edu.umd.cs.findbugs.detect.FindRefComparison' maxMicrosecondsPerInvocation='13341' standardDeviationMicrosecondsPerInvocation='2111' invocations='43'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='793' totalMilliseconds='34' name='edu.umd.cs.findbugs.detect.UnreadFields' maxMicrosecondsPerInvocation='7258' standardDeviationMicrosecondsPerInvocation='1531' invocations='43'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='288' totalMilliseconds='33' name='edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase' maxMicrosecondsPerInvocation='4383' standardDeviationMicrosecondsPerInvocation='580' invocations='117'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='767' totalMilliseconds='33' name='edu.umd.cs.findbugs.detect.FindBadCast2' maxMicrosecondsPerInvocation='25770' standardDeviationMicrosecondsPerInvocation='3888' invocations='43'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='91' totalMilliseconds='32' name='edu.umd.cs.findbugs.classfile.engine.bcel.LiveLocalStoreDataflowFactory' maxMicrosecondsPerInvocation='3780' standardDeviationMicrosecondsPerInvocation='249' invocations='355'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='742' totalMilliseconds='31' name='edu.umd.cs.findbugs.detect.FindDeadLocalStores' maxMicrosecondsPerInvocation='10104' standardDeviationMicrosecondsPerInvocation='1801' invocations='43'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='727' totalMilliseconds='31' name='edu.umd.cs.findbugs.detect.DumbMethods' maxMicrosecondsPerInvocation='5708' standardDeviationMicrosecondsPerInvocation='1213' invocations='43'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='5' totalMilliseconds='31' name='edu.umd.cs.findbugs.ba.npe.TypeQualifierNullnessAnnotationDatabase' maxMicrosecondsPerInvocation='559' standardDeviationMicrosecondsPerInvocation='14' invocations='6166'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>