/*
 * Camel ApiMethod Enumeration generated by camel-api-component-maven-plugin
 * Generated on: Wed Sep 11 15:20:08 CEST 2019
 */
package org.apache.camel.component.linkedin.internal;

import java.lang.reflect.Method;
import java.util.List;

import org.apache.camel.component.linkedin.api.PostsResource;

import org.apache.camel.util.component.ApiMethod;
import org.apache.camel.util.component.ApiMethodArg;
import org.apache.camel.util.component.ApiMethodImpl;

import static org.apache.camel.util.component.ApiMethodArg.arg;

/**
 * Camel {@link ApiMethod} Enumeration for org.apache.camel.component.linkedin.api.PostsResource
 */
public enum PostsResourceApiMethod implements ApiMethod {

    ADDCOMMENT(
        void.class,
        "addComment",
        arg("post_id", String.class),
        arg("comment", org.apache.camel.component.linkedin.api.model.Comment.class)),
    FLAGCATEGORY(
        void.class,
        "flagCategory",
        arg("post_id", String.class),
        arg("postcategorycode", org.apache.camel.component.linkedin.api.model.PostCategoryCode.class)),
    FOLLOWPOST(
        void.class,
        "followPost",
        arg("post_id", String.class),
        arg("isfollowing", org.apache.camel.component.linkedin.api.model.IsFollowing.class)),
    GETPOST(
        org.apache.camel.component.linkedin.api.model.Post.class,
        "getPost",
        arg("post_id", String.class),
        arg("count", Long.class),
        arg("start", Long.class),
        arg("fields", String.class)),
    GETPOSTCOMMENTS(
        org.apache.camel.component.linkedin.api.model.Comments.class,
        "getPostComments",
        arg("post_id", String.class),
        arg("count", Long.class),
        arg("start", Long.class),
        arg("fields", String.class)),
    LIKEPOST(
        void.class,
        "likePost",
        arg("post_id", String.class),
        arg("isliked", org.apache.camel.component.linkedin.api.model.IsLiked.class)),
    REMOVEPOST(
        void.class,
        "removePost",
        arg("post_id", String.class));
    

    private final ApiMethod apiMethod;

    private PostsResourceApiMethod(Class<?> resultType, String name, ApiMethodArg... args) {
        this.apiMethod = new ApiMethodImpl(PostsResource.class, resultType, name, args);
    }

    @Override
    public String getName() { return apiMethod.getName(); }

    @Override
    public Class<?> getResultType() { return apiMethod.getResultType(); }

    @Override
    public List<String> getArgNames() { return apiMethod.getArgNames(); }

    @Override
    public List<Class<?>> getArgTypes() { return apiMethod.getArgTypes(); }

    @Override
    public Method getMethod() { return apiMethod.getMethod(); }
}
