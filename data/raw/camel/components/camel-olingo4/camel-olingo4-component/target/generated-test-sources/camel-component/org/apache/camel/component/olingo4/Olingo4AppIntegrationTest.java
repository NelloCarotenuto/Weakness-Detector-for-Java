/*
 * Camel Api Route test generated by camel-api-component-maven-plugin
 * Generated on: Wed Sep 11 15:23:31 CEST 2019
 */
package org.apache.camel.component.olingo4;

import java.util.HashMap;
import java.util.Map;

import org.apache.camel.builder.RouteBuilder;
import org.junit.Ignore;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.apache.camel.component.olingo4.internal.Olingo4ApiCollection;
import org.apache.camel.component.olingo4.internal.Olingo4AppApiMethod;

/**
 * Test class for {@link org.apache.camel.component.olingo4.api.Olingo4App} APIs.
 * TODO Move the file to src/test/java, populate parameter values, and remove @Ignore annotations.
 * The class source won't be generated again if the generator MOJO finds it under src/test/java.
 */
public class Olingo4AppIntegrationTest extends AbstractOlingo4TestSupport {

    private static final Logger LOG = LoggerFactory.getLogger(Olingo4AppIntegrationTest.class);
    private static final String PATH_PREFIX = Olingo4ApiCollection.getCollection().getApiName(Olingo4AppApiMethod.class).getName();

    // TODO provide parameter values for batch
    @Ignore
    @Test
    public void testBatch() throws Exception {
        final Map<String, Object> headers = new HashMap<String, Object>();
        // parameter type is org.apache.olingo.commons.api.edm.Edm
        headers.put("CamelOlingo4.edm", null);
        // parameter type is java.util.Map
        headers.put("CamelOlingo4.endpointHttpHeaders", null);
        // parameter type is Object
        headers.put("CamelOlingo4.data", null);
        // parameter type is org.apache.camel.component.olingo4.api.Olingo4ResponseHandler
        headers.put("CamelOlingo4.responseHandler", null);

        requestBodyAndHeaders("direct://BATCH", null, headers);
    }

    // TODO provide parameter values for create
    @Ignore
    @Test
    public void testCreate() throws Exception {
        final Map<String, Object> headers = new HashMap<String, Object>();
        // parameter type is org.apache.olingo.commons.api.edm.Edm
        headers.put("CamelOlingo4.edm", null);
        // parameter type is String
        headers.put("CamelOlingo4.resourcePath", null);
        // parameter type is java.util.Map
        headers.put("CamelOlingo4.endpointHttpHeaders", null);
        // parameter type is Object
        headers.put("CamelOlingo4.data", null);
        // parameter type is org.apache.camel.component.olingo4.api.Olingo4ResponseHandler
        headers.put("CamelOlingo4.responseHandler", null);

        requestBodyAndHeaders("direct://CREATE", null, headers);
    }

    // TODO provide parameter values for delete
    @Ignore
    @Test
    public void testDelete() throws Exception {
        final Map<String, Object> headers = new HashMap<String, Object>();
        // parameter type is String
        headers.put("CamelOlingo4.resourcePath", null);
        // parameter type is java.util.Map
        headers.put("CamelOlingo4.endpointHttpHeaders", null);
        // parameter type is org.apache.camel.component.olingo4.api.Olingo4ResponseHandler
        headers.put("CamelOlingo4.responseHandler", null);

        requestBodyAndHeaders("direct://DELETE", null, headers);
    }

    // TODO provide parameter values for merge
    @Ignore
    @Test
    public void testMerge() throws Exception {
        final Map<String, Object> headers = new HashMap<String, Object>();
        // parameter type is org.apache.olingo.commons.api.edm.Edm
        headers.put("CamelOlingo4.edm", null);
        // parameter type is String
        headers.put("CamelOlingo4.resourcePath", null);
        // parameter type is java.util.Map
        headers.put("CamelOlingo4.endpointHttpHeaders", null);
        // parameter type is Object
        headers.put("CamelOlingo4.data", null);
        // parameter type is org.apache.camel.component.olingo4.api.Olingo4ResponseHandler
        headers.put("CamelOlingo4.responseHandler", null);

        requestBodyAndHeaders("direct://MERGE", null, headers);
    }

    // TODO provide parameter values for patch
    @Ignore
    @Test
    public void testPatch() throws Exception {
        final Map<String, Object> headers = new HashMap<String, Object>();
        // parameter type is org.apache.olingo.commons.api.edm.Edm
        headers.put("CamelOlingo4.edm", null);
        // parameter type is String
        headers.put("CamelOlingo4.resourcePath", null);
        // parameter type is java.util.Map
        headers.put("CamelOlingo4.endpointHttpHeaders", null);
        // parameter type is Object
        headers.put("CamelOlingo4.data", null);
        // parameter type is org.apache.camel.component.olingo4.api.Olingo4ResponseHandler
        headers.put("CamelOlingo4.responseHandler", null);

        requestBodyAndHeaders("direct://PATCH", null, headers);
    }

    // TODO provide parameter values for read
    @Ignore
    @Test
    public void testRead() throws Exception {
        final Map<String, Object> headers = new HashMap<String, Object>();
        // parameter type is org.apache.olingo.commons.api.edm.Edm
        headers.put("CamelOlingo4.edm", null);
        // parameter type is String
        headers.put("CamelOlingo4.resourcePath", null);
        // parameter type is java.util.Map
        headers.put("CamelOlingo4.queryParams", null);
        // parameter type is java.util.Map
        headers.put("CamelOlingo4.endpointHttpHeaders", null);
        // parameter type is org.apache.camel.component.olingo4.api.Olingo4ResponseHandler
        headers.put("CamelOlingo4.responseHandler", null);

        requestBodyAndHeaders("direct://READ", null, headers);
    }

    // TODO provide parameter values for update
    @Ignore
    @Test
    public void testUpdate() throws Exception {
        final Map<String, Object> headers = new HashMap<String, Object>();
        // parameter type is org.apache.olingo.commons.api.edm.Edm
        headers.put("CamelOlingo4.edm", null);
        // parameter type is String
        headers.put("CamelOlingo4.resourcePath", null);
        // parameter type is java.util.Map
        headers.put("CamelOlingo4.endpointHttpHeaders", null);
        // parameter type is Object
        headers.put("CamelOlingo4.data", null);
        // parameter type is org.apache.camel.component.olingo4.api.Olingo4ResponseHandler
        headers.put("CamelOlingo4.responseHandler", null);

        requestBodyAndHeaders("direct://UPDATE", null, headers);
    }

    // TODO provide parameter values for uread
    @Ignore
    @Test
    public void testUread() throws Exception {
        final Map<String, Object> headers = new HashMap<String, Object>();
        // parameter type is org.apache.olingo.commons.api.edm.Edm
        headers.put("CamelOlingo4.edm", null);
        // parameter type is String
        headers.put("CamelOlingo4.resourcePath", null);
        // parameter type is java.util.Map
        headers.put("CamelOlingo4.queryParams", null);
        // parameter type is java.util.Map
        headers.put("CamelOlingo4.endpointHttpHeaders", null);
        // parameter type is org.apache.camel.component.olingo4.api.Olingo4ResponseHandler
        headers.put("CamelOlingo4.responseHandler", null);

        requestBodyAndHeaders("direct://UREAD", null, headers);
    }

    @Override
    protected RouteBuilder createRouteBuilder() throws Exception {
        return new RouteBuilder() {
            public void configure() {
                // test route for batch
                from("direct://BATCH")
                    .to("olingo4://" + PATH_PREFIX + "/batch");

                // test route for create
                from("direct://CREATE")
                    .to("olingo4://" + PATH_PREFIX + "/create");

                // test route for delete
                from("direct://DELETE")
                    .to("olingo4://" + PATH_PREFIX + "/delete");

                // test route for merge
                from("direct://MERGE")
                    .to("olingo4://" + PATH_PREFIX + "/merge");

                // test route for patch
                from("direct://PATCH")
                    .to("olingo4://" + PATH_PREFIX + "/patch");

                // test route for read
                from("direct://READ")
                    .to("olingo4://" + PATH_PREFIX + "/read");

                // test route for update
                from("direct://UPDATE")
                    .to("olingo4://" + PATH_PREFIX + "/update");

                // test route for uread
                from("direct://UREAD")
                    .to("olingo4://" + PATH_PREFIX + "/uread");

            }
        };
    }
}
