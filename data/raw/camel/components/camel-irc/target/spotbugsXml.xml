
<BugCollection sequence='0' release='' analysisTimestamp='1568210980638' version='3.1.12' timestamp='1568207771000'><Project projectName='Camel :: IRC'><Jar>./camel/components/camel-irc/target/classes</Jar><AuxClasspathEntry>.m2/repository/org/apache/camel/camel-core/2.20.4/camel-core-2.20.4.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/com/github/ben-manes/caffeine/caffeine/2.5.5/caffeine-2.5.5.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/org/apache/camel/json-simple-ordered/2.20.4/json-simple-ordered-2.20.4.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/org/slf4j/slf4j-api/1.7.22/slf4j-api-1.7.22.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/org/schwering/irclib/1.10/irclib-1.10.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/org/apache/camel/apt/2.20.4/apt-2.20.4.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/org/apache/camel/spi-annotations/2.20.4/spi-annotations-2.20.4.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/com/sun/xml/bind/jaxb-core/2.2.11/jaxb-core-2.2.11.jar</AuxClasspathEntry><AuxClasspathEntry>.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.11/jaxb-impl-2.2.11.jar</AuxClasspathEntry><SrcDir>./camel/components/camel-irc/src/main/java</SrcDir><WrkDir>./camel/components/camel-irc/target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='18e6fb5d1722a8219a032c9c30509a0a' rank='20' abbrev='BC' category='STYLE' priority='3' type='BC_UNCONFIRMED_CAST_OF_RETURN_VALUE' instanceOccurrenceMax='0'><ShortMessage>Unchecked/unconfirmed cast of return value from method</ShortMessage><LongMessage>Unchecked/unconfirmed cast from java.net.Socket to javax.net.ssl.SSLSocket of return value in org.apache.camel.component.irc.CamelSSLIRCConnection.connect()</LongMessage><Class classname='org.apache.camel.component.irc.CamelSSLIRCConnection' primary='true'><SourceLine classname='org.apache.camel.component.irc.CamelSSLIRCConnection' start='45' end='113' sourcepath='org/apache/camel/component/irc/CamelSSLIRCConnection.java' sourcefile='CamelSSLIRCConnection.java'><Message>At CamelSSLIRCConnection.java:[lines 45-113]</Message></SourceLine><Message>In class org.apache.camel.component.irc.CamelSSLIRCConnection</Message></Class><Method isStatic='false' classname='org.apache.camel.component.irc.CamelSSLIRCConnection' signature='()V' name='connect' primary='true'><SourceLine endBytecode='96' classname='org.apache.camel.component.irc.CamelSSLIRCConnection' start='60' end='105' sourcepath='org/apache/camel/component/irc/CamelSSLIRCConnection.java' sourcefile='CamelSSLIRCConnection.java' startBytecode='0'></SourceLine><Message>In method org.apache.camel.component.irc.CamelSSLIRCConnection.connect()</Message></Method><Type role='TYPE_FOUND' descriptor='Ljava/net/Socket;'><SourceLine classname='java.net.Socket' start='58' end='1729' sourcepath='java/net/Socket.java' sourcefile='Socket.java'><Message>At Socket.java:[lines 58-1729]</Message></SourceLine><Message>Actual type java.net.Socket</Message></Type><Type role='TYPE_EXPECTED' descriptor='Ljavax/net/ssl/SSLSocket;'><SourceLine classname='javax.net.ssl.SSLSocket' start='145' end='663' sourcepath='javax/net/ssl/SSLSocket.java' sourcefile='SSLSocket.java'><Message>At SSLSocket.java:[lines 145-663]</Message></SourceLine><Message>Expected javax.net.ssl.SSLSocket</Message></Type><SourceLine endBytecode='126' classname='org.apache.camel.component.irc.CamelSSLIRCConnection' start='82' end='82' sourcepath='org/apache/camel/component/irc/CamelSSLIRCConnection.java' sourcefile='CamelSSLIRCConnection.java' startBytecode='126' primary='true'><Message>At CamelSSLIRCConnection.java:[line 82]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='17982b34f8076bf1eafb16f7ececd4b6' cweid='374' rank='18' abbrev='EI' category='MALICIOUS_CODE' priority='2' type='EI_EXPOSE_REP' instanceOccurrenceMax='0'><ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage><LongMessage>org.apache.camel.component.irc.IrcConfiguration.getPorts() may expose internal representation by returning IrcConfiguration.ports</LongMessage><Class classname='org.apache.camel.component.irc.IrcConfiguration' primary='true'><SourceLine classname='org.apache.camel.component.irc.IrcConfiguration' start='44' end='630' sourcepath='org/apache/camel/component/irc/IrcConfiguration.java' sourcefile='IrcConfiguration.java'><Message>At IrcConfiguration.java:[lines 44-630]</Message></SourceLine><Message>In class org.apache.camel.component.irc.IrcConfiguration</Message></Class><Method isStatic='false' classname='org.apache.camel.component.irc.IrcConfiguration' signature='()[I' name='getPorts' primary='true'><SourceLine endBytecode='46' classname='org.apache.camel.component.irc.IrcConfiguration' start='283' end='283' sourcepath='org/apache/camel/component/irc/IrcConfiguration.java' sourcefile='IrcConfiguration.java' startBytecode='0'></SourceLine><Message>In method org.apache.camel.component.irc.IrcConfiguration.getPorts()</Message></Method><Field isStatic='false' classname='org.apache.camel.component.irc.IrcConfiguration' signature='[I' name='ports' primary='true'><SourceLine classname='org.apache.camel.component.irc.IrcConfiguration' sourcepath='org/apache/camel/component/irc/IrcConfiguration.java' sourcefile='IrcConfiguration.java'><Message>In IrcConfiguration.java</Message></SourceLine><Message>Field org.apache.camel.component.irc.IrcConfiguration.ports</Message></Field><SourceLine endBytecode='4' classname='org.apache.camel.component.irc.IrcConfiguration' start='283' end='283' sourcepath='org/apache/camel/component/irc/IrcConfiguration.java' sourcefile='IrcConfiguration.java' startBytecode='4' primary='true'><Message>At IrcConfiguration.java:[line 283]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='632e0b863737bd4d567bca222cd889b7' cweid='374' rank='18' abbrev='EI2' category='MALICIOUS_CODE' priority='2' type='EI_EXPOSE_REP2' instanceOccurrenceMax='0'><ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage><LongMessage>org.apache.camel.component.irc.IrcConfiguration.setPorts(int[]) may expose internal representation by storing an externally mutable object into IrcConfiguration.ports</LongMessage><Class classname='org.apache.camel.component.irc.IrcConfiguration' primary='true'><SourceLine classname='org.apache.camel.component.irc.IrcConfiguration' start='44' end='630' sourcepath='org/apache/camel/component/irc/IrcConfiguration.java' sourcefile='IrcConfiguration.java'><Message>At IrcConfiguration.java:[lines 44-630]</Message></SourceLine><Message>In class org.apache.camel.component.irc.IrcConfiguration</Message></Class><Method isStatic='false' classname='org.apache.camel.component.irc.IrcConfiguration' signature='([I)V' name='setPorts' primary='true'><SourceLine endBytecode='61' classname='org.apache.camel.component.irc.IrcConfiguration' start='290' end='291' sourcepath='org/apache/camel/component/irc/IrcConfiguration.java' sourcefile='IrcConfiguration.java' startBytecode='0'></SourceLine><Message>In method org.apache.camel.component.irc.IrcConfiguration.setPorts(int[])</Message></Method><Field isStatic='false' classname='org.apache.camel.component.irc.IrcConfiguration' signature='[I' name='ports' primary='true'><SourceLine classname='org.apache.camel.component.irc.IrcConfiguration' sourcepath='org/apache/camel/component/irc/IrcConfiguration.java' sourcefile='IrcConfiguration.java'><Message>In IrcConfiguration.java</Message></SourceLine><Message>Field org.apache.camel.component.irc.IrcConfiguration.ports</Message></Field><LocalVariable role='LOCAL_VARIABLE_NAMED' pc='2' name='ports' register='1'><Message>Local variable named ports</Message></LocalVariable><SourceLine endBytecode='2' classname='org.apache.camel.component.irc.IrcConfiguration' start='290' end='290' sourcepath='org/apache/camel/component/irc/IrcConfiguration.java' sourcefile='IrcConfiguration.java' startBytecode='2' primary='true'><Message>At IrcConfiguration.java:[line 290]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='42dd4db0f15df08661b65ad9a49c8f68' cweid='476' rank='16' abbrev='NP' category='STYLE' priority='2' type='NP_LOAD_OF_KNOWN_NULL_VALUE' instanceOccurrenceMax='0'><ShortMessage>Load of known null value</ShortMessage><LongMessage>Load of known null value in org.apache.camel.component.irc.IrcConfiguration.sanitize(String)</LongMessage><Class classname='org.apache.camel.component.irc.IrcConfiguration' primary='true'><SourceLine classname='org.apache.camel.component.irc.IrcConfiguration' start='44' end='630' sourcepath='org/apache/camel/component/irc/IrcConfiguration.java' sourcefile='IrcConfiguration.java'><Message>At IrcConfiguration.java:[lines 44-630]</Message></SourceLine><Message>In class org.apache.camel.component.irc.IrcConfiguration</Message></Class><Method isStatic='true' classname='org.apache.camel.component.irc.IrcConfiguration' signature='(Ljava/lang/String;)Ljava/lang/String;' name='sanitize' primary='true'><SourceLine endBytecode='395' classname='org.apache.camel.component.irc.IrcConfiguration' start='490' end='599' sourcepath='org/apache/camel/component/irc/IrcConfiguration.java' sourcefile='IrcConfiguration.java' startBytecode='0'></SourceLine><Message>In method org.apache.camel.component.irc.IrcConfiguration.sanitize(String)</Message></Method><LocalVariable role='LOCAL_VARIABLE_VALUE_OF' pc='397' name='keys' register='13'><Message>Value loaded from keys</Message></LocalVariable><SourceLine endBytecode='400' classname='org.apache.camel.component.irc.IrcConfiguration' start='545' end='545' sourcepath='org/apache/camel/component/irc/IrcConfiguration.java' sourcefile='IrcConfiguration.java' startBytecode='400' primary='true'><Message>At IrcConfiguration.java:[line 545]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='138ef2e465c9ae378bc04c1ab161abe9' cweid='396' rank='17' abbrev='REC' category='STYLE' priority='2' type='REC_CATCH_EXCEPTION' instanceOccurrenceMax='0'><ShortMessage>Exception is caught when Exception is not thrown</ShortMessage><LongMessage>Exception is caught when Exception is not thrown in org.apache.camel.component.irc.IrcConfiguration.sanitize(String)</LongMessage><Class classname='org.apache.camel.component.irc.IrcConfiguration' primary='true'><SourceLine classname='org.apache.camel.component.irc.IrcConfiguration' start='44' end='630' sourcepath='org/apache/camel/component/irc/IrcConfiguration.java' sourcefile='IrcConfiguration.java'><Message>At IrcConfiguration.java:[lines 44-630]</Message></SourceLine><Message>In class org.apache.camel.component.irc.IrcConfiguration</Message></Class><Method isStatic='true' classname='org.apache.camel.component.irc.IrcConfiguration' signature='(Ljava/lang/String;)Ljava/lang/String;' name='sanitize' primary='true'><SourceLine endBytecode='1882' classname='org.apache.camel.component.irc.IrcConfiguration' start='490' end='599' sourcepath='org/apache/camel/component/irc/IrcConfiguration.java' sourcefile='IrcConfiguration.java' startBytecode='0'></SourceLine><Message>In method org.apache.camel.component.irc.IrcConfiguration.sanitize(String)</Message></Method><SourceLine endBytecode='888' classname='org.apache.camel.component.irc.IrcConfiguration' start='598' end='598' sourcepath='org/apache/camel/component/irc/IrcConfiguration.java' sourcefile='IrcConfiguration.java' startBytecode='888' primary='true'><Message>At IrcConfiguration.java:[line 598]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='2123205be0c62e86398f22788e2da960' rank='18' abbrev='SBSC' category='PERFORMANCE' priority='2' type='SBSC_USE_STRINGBUFFER_CONCATENATION' instanceOccurrenceMax='0'><ShortMessage>Method concatenates strings using + in a loop</ShortMessage><LongMessage>org.apache.camel.component.irc.IrcConfiguration.getListOfChannels() concatenates strings using + in a loop</LongMessage><Class classname='org.apache.camel.component.irc.IrcConfiguration' primary='true'><SourceLine classname='org.apache.camel.component.irc.IrcConfiguration' start='44' end='630' sourcepath='org/apache/camel/component/irc/IrcConfiguration.java' sourcefile='IrcConfiguration.java'><Message>At IrcConfiguration.java:[lines 44-630]</Message></SourceLine><Message>In class org.apache.camel.component.irc.IrcConfiguration</Message></Class><Method isStatic='false' classname='org.apache.camel.component.irc.IrcConfiguration' signature='()Ljava/lang/String;' name='getListOfChannels' primary='true'><SourceLine endBytecode='220' classname='org.apache.camel.component.irc.IrcConfiguration' start='128' end='132' sourcepath='org/apache/camel/component/irc/IrcConfiguration.java' sourcefile='IrcConfiguration.java' startBytecode='0'></SourceLine><Message>In method org.apache.camel.component.irc.IrcConfiguration.getListOfChannels()</Message></Method><SourceLine endBytecode='32' classname='org.apache.camel.component.irc.IrcConfiguration' start='130' end='130' sourcepath='org/apache/camel/component/irc/IrcConfiguration.java' sourcefile='IrcConfiguration.java' startBytecode='32' primary='true'><Message>At IrcConfiguration.java:[line 130]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='38940d3c37a69a69fbc81ca43ec6024c' cweid='218' rank='18' abbrev='MS' category='MALICIOUS_CODE' priority='2' type='MS_PKGPROTECT' instanceOccurrenceMax='0'><ShortMessage>Field should be package protected</ShortMessage><LongMessage>org.apache.camel.component.irc.IrcProducer.COMMANDS should be package protected</LongMessage><Class classname='org.apache.camel.component.irc.IrcProducer' primary='true'><SourceLine classname='org.apache.camel.component.irc.IrcProducer' start='28' end='107' sourcepath='org/apache/camel/component/irc/IrcProducer.java' sourcefile='IrcProducer.java'><Message>At IrcProducer.java:[lines 28-107]</Message></SourceLine><Message>In class org.apache.camel.component.irc.IrcProducer</Message></Class><Field isStatic='true' classname='org.apache.camel.component.irc.IrcProducer' signature='[Ljava/lang/String;' name='COMMANDS' primary='true'><SourceLine classname='org.apache.camel.component.irc.IrcProducer' sourcepath='org/apache/camel/component/irc/IrcProducer.java' sourcefile='IrcProducer.java'><Message>In IrcProducer.java</Message></SourceLine><Message>Field org.apache.camel.component.irc.IrcProducer.COMMANDS</Message></Field><SourceLine endBytecode='113' classname='org.apache.camel.component.irc.IrcProducer' start='30' end='30' sourcepath='org/apache/camel/component/irc/IrcProducer.java' sourcefile='IrcProducer.java' startBytecode='113' primary='true'><Message>At IrcProducer.java:[line 30]</Message></SourceLine></BugInstance><BugCategory category='MALICIOUS_CODE'><Description>Malicious code vulnerability</Description></BugCategory><BugCategory category='PERFORMANCE'><Description>Performance</Description></BugCategory><BugCategory category='STYLE'><Description>Dodgy code</Description></BugCategory><BugPattern abbrev='BC' category='STYLE' type='BC_UNCONFIRMED_CAST_OF_RETURN_VALUE'><ShortDescription>Unchecked/unconfirmed cast of return value from method</ShortDescription><Details>

&lt;p&gt;
This code performs an unchecked cast of the return value of a method.
The code might be calling the method in such a way that the cast is guaranteed to be
safe, but SpotBugs is unable to verify that the cast is safe.  Check that your program logic ensures that this
cast will not fail.
&lt;/p&gt;

    </Details></BugPattern><BugPattern cweid='374' abbrev='EI2' category='MALICIOUS_CODE' type='EI_EXPOSE_REP2'><ShortDescription>May expose internal representation by incorporating reference to mutable object</ShortDescription><Details>

  &lt;p&gt; This code stores a reference to an externally mutable object into the
  internal representation of the object.&amp;nbsp;
   If instances
   are accessed by untrusted code, and unchecked changes to
   the mutable object would compromise security or other
   important properties, you will need to do something different.
  Storing a copy of the object is better approach in many situations.&lt;/p&gt;

    </Details></BugPattern><BugPattern cweid='374' abbrev='EI' category='MALICIOUS_CODE' type='EI_EXPOSE_REP'><ShortDescription>May expose internal representation by returning reference to mutable object</ShortDescription><Details>

  &lt;p&gt; Returning a reference to a mutable object value stored in one of the object's fields
  exposes the internal representation of the object.&amp;nbsp;
   If instances
   are accessed by untrusted code, and unchecked changes to
   the mutable object would compromise security or other
   important properties, you will need to do something different.
  Returning a new copy of the object is better approach in many situations.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='NP' category='STYLE' type='NP_LOAD_OF_KNOWN_NULL_VALUE'><ShortDescription>Load of known null value</ShortDescription><Details>

  &lt;p&gt; The variable referenced at this point is known to be null due to an earlier
   check against null. Although this is valid, it might be a mistake (perhaps you
intended to refer to a different variable, or perhaps the earlier check to see if the
variable is null should have been a check to see if it was non-null).
&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='SBSC' category='PERFORMANCE' type='SBSC_USE_STRINGBUFFER_CONCATENATION'><ShortDescription>Method concatenates strings using + in a loop</ShortDescription><Details>

&lt;p&gt; The method seems to be building a String using concatenation in a loop.
In each iteration, the String is converted to a StringBuffer/StringBuilder,
   appended to, and converted back to a String.
   This can lead to a cost quadratic in the number of iterations,
   as the growing string is recopied in each iteration. &lt;/p&gt;

&lt;p&gt;Better performance can be obtained by using
a StringBuffer (or StringBuilder in Java 1.5) explicitly.&lt;/p&gt;

&lt;p&gt; For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// This is bad
String s = "";
for (int i = 0; i &amp;lt; field.length; ++i) {
    s = s + field[i];
}

// This is better
StringBuffer buf = new StringBuffer();
for (int i = 0; i &amp;lt; field.length; ++i) {
    buf.append(field[i]);
}
String s = buf.toString();
&lt;/code&gt;&lt;/pre&gt;

    </Details></BugPattern><BugPattern cweid='396' abbrev='REC' category='STYLE' type='REC_CATCH_EXCEPTION'><ShortDescription>Exception is caught when Exception is not thrown</ShortDescription><Details>
  
  &lt;p&gt;
  This method uses a try-catch block that catches Exception objects, but Exception is not
  thrown within the try block, and RuntimeException is not explicitly caught.  It is a common bug pattern to
  say try { ... } catch (Exception e) { something } as a shorthand for catching a number of types of exception
  each of whose catch blocks is identical, but this construct also accidentally catches RuntimeException as well,
  masking potential bugs.
  &lt;/p&gt;
  &lt;p&gt;A better approach is to either explicitly catch the specific exceptions that are thrown,
  or to explicitly catch RuntimeException exception, rethrow it, and then catch all non-Runtime Exceptions, as shown below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;try {
    ...
} catch (RuntimeException e) {
    throw e;
} catch (Exception e) {
    ... deal with all non-runtime exceptions ...
}
&lt;/code&gt;&lt;/pre&gt;
  
     </Details></BugPattern><BugPattern abbrev='MS' category='MALICIOUS_CODE' type='MS_PKGPROTECT'><ShortDescription>Field should be package protected</ShortDescription><Details>

  &lt;p&gt; A mutable static field could be changed by malicious code or
   by accident.
   The field could be made package protected to avoid
   this vulnerability.&lt;/p&gt;

    </Details></BugPattern><BugCode abbrev='BC'><Description>Bad casts of object references</Description></BugCode><BugCode abbrev='REC'><Description>RuntimeException capture</Description></BugCode><BugCode cweid='476' abbrev='NP'><Description>Null pointer dereference</Description></BugCode><BugCode abbrev='EI'><Description>Method returning array may expose internal representation</Description></BugCode><BugCode cweid='218' abbrev='MS'><Description>Mutable static field</Description></BugCode><BugCode abbrev='SBSC'><Description>String concatenation in loop using + operator</Description></BugCode><BugCode abbrev='EI2'><Description>Storing reference to mutable object</Description></BugCode><Errors missingClasses='0' errors='0'></Errors><FindBugsSummary num_packages='1' total_classes='13' priority_2='6' priority_3='1' total_size='1022' clock_seconds='3.18' referenced_classes='196' vm_version='25.222-b10' total_bugs='7' java_version='1.8.0_222' gc_seconds='0.11' alloc_mbytes='455.50' cpu_seconds='13.58' peak_mbytes='226.38' timestamp='Wed, 11 Sep 2019 15:16:11 +0200'><FileStats path='org/apache/camel/component/irc/CamelSSLIRCConnection.java' size='48' bugHash='2be5cdc3bacd5318250a723c7ddac196' bugCount='1'></FileStats><FileStats path='org/apache/camel/component/irc/IrcBinding.java' size='9' bugCount='0'></FileStats><FileStats path='org/apache/camel/component/irc/IrcChannel.java' size='23' bugCount='0'></FileStats><FileStats path='org/apache/camel/component/irc/IrcComponent.java' size='85' bugCount='0'></FileStats><FileStats path='org/apache/camel/component/irc/IrcConfiguration.java' size='342' bugHash='ccb498e4a5894ffc2b750fc1f79449ce' bugCount='5'></FileStats><FileStats path='org/apache/camel/component/irc/IrcConstants.java' size='13' bugCount='0'></FileStats><FileStats path='org/apache/camel/component/irc/IrcConsumer.java' size='139' bugCount='0'></FileStats><FileStats path='org/apache/camel/component/irc/IrcEndpoint.java' size='127' bugCount='0'></FileStats><FileStats path='org/apache/camel/component/irc/IrcLogger.java' size='62' bugCount='0'></FileStats><FileStats path='org/apache/camel/component/irc/IrcMessage.java' size='102' bugCount='0'></FileStats><FileStats path='org/apache/camel/component/irc/IrcProducer.java' size='72' bugHash='0ac21a711e9768cb2bcd2e9b9fe4699f' bugCount='1'></FileStats><PackageStats package='org.apache.camel.component.irc' total_bugs='7' priority_2='6' priority_3='1' total_size='1022' total_types='13'><ClassStats bugs='1' size='48' priority_3='1' interface='false' sourceFile='CamelSSLIRCConnection.java' class='org.apache.camel.component.irc.CamelSSLIRCConnection'></ClassStats><ClassStats bugs='0' size='9' interface='false' sourceFile='IrcBinding.java' class='org.apache.camel.component.irc.IrcBinding'></ClassStats><ClassStats bugs='0' size='23' interface='false' sourceFile='IrcChannel.java' class='org.apache.camel.component.irc.IrcChannel'></ClassStats><ClassStats bugs='0' size='85' interface='false' sourceFile='IrcComponent.java' class='org.apache.camel.component.irc.IrcComponent'></ClassStats><ClassStats bugs='5' size='342' priority_2='5' interface='false' sourceFile='IrcConfiguration.java' class='org.apache.camel.component.irc.IrcConfiguration'></ClassStats><ClassStats bugs='0' size='13' interface='false' sourceFile='IrcConstants.java' class='org.apache.camel.component.irc.IrcConstants'></ClassStats><ClassStats bugs='0' size='59' interface='false' sourceFile='IrcConsumer.java' class='org.apache.camel.component.irc.IrcConsumer'></ClassStats><ClassStats bugs='0' size='80' interface='false' sourceFile='IrcConsumer.java' class='org.apache.camel.component.irc.IrcConsumer$FilteredIRCEventAdapter'></ClassStats><ClassStats bugs='0' size='127' interface='false' sourceFile='IrcEndpoint.java' class='org.apache.camel.component.irc.IrcEndpoint'></ClassStats><ClassStats bugs='0' size='62' interface='false' sourceFile='IrcLogger.java' class='org.apache.camel.component.irc.IrcLogger'></ClassStats><ClassStats bugs='0' size='102' interface='false' sourceFile='IrcMessage.java' class='org.apache.camel.component.irc.IrcMessage'></ClassStats><ClassStats bugs='1' size='61' priority_2='1' interface='false' sourceFile='IrcProducer.java' class='org.apache.camel.component.irc.IrcProducer'></ClassStats><ClassStats bugs='0' size='11' interface='false' sourceFile='IrcProducer.java' class='org.apache.camel.component.irc.IrcProducer$FilteredIRCEventAdapter'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='318' totalMilliseconds='343' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' maxMicrosecondsPerInvocation='1690' standardDeviationMicrosecondsPerInvocation='163' invocations='1080'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='263' totalMilliseconds='283' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' maxMicrosecondsPerInvocation='14007' standardDeviationMicrosecondsPerInvocation='695' invocations='1075'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='915' totalMilliseconds='179' name='edu.umd.cs.findbugs.detect.FindNoSideEffectMethods' maxMicrosecondsPerInvocation='34460' standardDeviationMicrosecondsPerInvocation='3131' invocations='196'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='811' totalMilliseconds='165' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' maxMicrosecondsPerInvocation='147032' standardDeviationMicrosecondsPerInvocation='10263' invocations='204'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='710' totalMilliseconds='139' name='edu.umd.cs.findbugs.detect.FieldItemSummary' maxMicrosecondsPerInvocation='7921' standardDeviationMicrosecondsPerInvocation='1311' invocations='196'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='158' totalMilliseconds='107' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' maxMicrosecondsPerInvocation='3995' standardDeviationMicrosecondsPerInvocation='276' invocations='677'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='399' totalMilliseconds='81' name='edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory' maxMicrosecondsPerInvocation='10821' standardDeviationMicrosecondsPerInvocation='1001' invocations='204'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='391' totalMilliseconds='81' name='edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory' maxMicrosecondsPerInvocation='12902' standardDeviationMicrosecondsPerInvocation='1154' invocations='208'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='347' totalMilliseconds='73' name='edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory' maxMicrosecondsPerInvocation='10288' standardDeviationMicrosecondsPerInvocation='895' invocations='212'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='360' totalMilliseconds='71' name='edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder' maxMicrosecondsPerInvocation='5935' standardDeviationMicrosecondsPerInvocation='687' invocations='198'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='307' totalMilliseconds='61' name='edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory' maxMicrosecondsPerInvocation='7039' standardDeviationMicrosecondsPerInvocation='672' invocations='200'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='277' totalMilliseconds='56' name='edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory' maxMicrosecondsPerInvocation='12758' standardDeviationMicrosecondsPerInvocation='922' invocations='204'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='217' totalMilliseconds='56' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' maxMicrosecondsPerInvocation='15039' standardDeviationMicrosecondsPerInvocation='986' invocations='258'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='49' totalMilliseconds='51' name='edu.umd.cs.findbugs.util.TopologicalSort' maxMicrosecondsPerInvocation='2237' standardDeviationMicrosecondsPerInvocation='121' invocations='1035'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='259' totalMilliseconds='50' name='edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers' maxMicrosecondsPerInvocation='6055' standardDeviationMicrosecondsPerInvocation='610' invocations='196'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='228' totalMilliseconds='44' name='edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase' maxMicrosecondsPerInvocation='4476' standardDeviationMicrosecondsPerInvocation='454' invocations='196'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='3397' totalMilliseconds='44' name='edu.umd.cs.findbugs.detect.SynchronizationOnSharedBuiltinConstant' maxMicrosecondsPerInvocation='41584' standardDeviationMicrosecondsPerInvocation='11025' invocations='13'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='170' totalMilliseconds='33' name='edu.umd.cs.findbugs.detect.BuildStringPassthruGraph' maxMicrosecondsPerInvocation='2438' standardDeviationMicrosecondsPerInvocation='327' invocations='196'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='169' totalMilliseconds='33' name='edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical' maxMicrosecondsPerInvocation='6371' standardDeviationMicrosecondsPerInvocation='529' invocations='196'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2527' totalMilliseconds='32' name='edu.umd.cs.findbugs.detect.CheckRelaxingNullnessAnnotation' maxMicrosecondsPerInvocation='22138' standardDeviationMicrosecondsPerInvocation='5740' invocations='13'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>