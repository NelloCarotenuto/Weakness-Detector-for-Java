
<BugCollection sequence='0' release='' analysisTimestamp='1568210808346' version='3.1.12' timestamp='1568207481000'><Project projectName='Camel :: Freemarker'><Jar>/home/mauro/repo/camel/components/camel-freemarker/target/classes</Jar><AuxClasspathEntry>/home/mauro/.m2/repository/org/apache/camel/camel-core/2.20.4/camel-core-2.20.4.jar</AuxClasspathEntry><AuxClasspathEntry>/home/mauro/.m2/repository/com/github/ben-manes/caffeine/caffeine/2.5.5/caffeine-2.5.5.jar</AuxClasspathEntry><AuxClasspathEntry>/home/mauro/.m2/repository/org/apache/camel/json-simple-ordered/2.20.4/json-simple-ordered-2.20.4.jar</AuxClasspathEntry><AuxClasspathEntry>/home/mauro/.m2/repository/org/slf4j/slf4j-api/1.7.22/slf4j-api-1.7.22.jar</AuxClasspathEntry><AuxClasspathEntry>/home/mauro/.m2/repository/org/freemarker/freemarker/2.3.23/freemarker-2.3.23.jar</AuxClasspathEntry><AuxClasspathEntry>/home/mauro/.m2/repository/org/apache/camel/apt/2.20.4/apt-2.20.4.jar</AuxClasspathEntry><AuxClasspathEntry>/home/mauro/.m2/repository/org/apache/camel/spi-annotations/2.20.4/spi-annotations-2.20.4.jar</AuxClasspathEntry><AuxClasspathEntry>/home/mauro/.m2/repository/com/sun/xml/bind/jaxb-core/2.2.11/jaxb-core-2.2.11.jar</AuxClasspathEntry><AuxClasspathEntry>/home/mauro/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.11/jaxb-impl-2.2.11.jar</AuxClasspathEntry><SrcDir>/home/mauro/repo/camel/components/camel-freemarker/src/main/java</SrcDir><WrkDir>/home/mauro/repo/camel/components/camel-freemarker/target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='2cebaf47f69188f704d926595049a2a0' cweid='366' rank='17' abbrev='IS' category='MT_CORRECTNESS' priority='2' type='IS2_INCONSISTENT_SYNC' instanceOccurrenceMax='0'><ShortMessage>Inconsistent synchronization</ShortMessage><LongMessage>Inconsistent synchronization of org.apache.camel.component.freemarker.FreemarkerComponent.configuration; locked 80% of time</LongMessage><Class classname='org.apache.camel.component.freemarker.FreemarkerComponent' primary='true'><SourceLine classname='org.apache.camel.component.freemarker.FreemarkerComponent' start='41' end='109' sourcepath='org/apache/camel/component/freemarker/FreemarkerComponent.java' sourcefile='FreemarkerComponent.java'><Message>At FreemarkerComponent.java:[lines 41-109]</Message></SourceLine><Message>In class org.apache.camel.component.freemarker.FreemarkerComponent</Message></Class><Field isStatic='false' classname='org.apache.camel.component.freemarker.FreemarkerComponent' signature='Lfreemarker/template/Configuration;' name='configuration' primary='true'><SourceLine classname='org.apache.camel.component.freemarker.FreemarkerComponent' sourcepath='org/apache/camel/component/freemarker/FreemarkerComponent.java' sourcefile='FreemarkerComponent.java'><Message>In FreemarkerComponent.java</Message></SourceLine><Message>Field org.apache.camel.component.freemarker.FreemarkerComponent.configuration</Message></Field><Int role='INT_SYNC_PERCENT' value='80'><Message>Synchronized 80% of the time</Message></Int><SourceLine role='SOURCE_LINE_UNSYNC_ACCESS' endBytecode='2' classname='org.apache.camel.component.freemarker.FreemarkerComponent' start='99' end='99' sourcepath='org/apache/camel/component/freemarker/FreemarkerComponent.java' sourcefile='FreemarkerComponent.java' startBytecode='2' primary='true'><Message>Unsynchronized access at FreemarkerComponent.java:[line 99]</Message></SourceLine><SourceLine role='SOURCE_LINE_SYNC_ACCESS' endBytecode='1' classname='org.apache.camel.component.freemarker.FreemarkerComponent' start='77' end='77' sourcepath='org/apache/camel/component/freemarker/FreemarkerComponent.java' sourcefile='FreemarkerComponent.java' startBytecode='1'><Message>Synchronized access at FreemarkerComponent.java:[line 77]</Message></SourceLine><SourceLine role='SOURCE_LINE_SYNC_ACCESS' endBytecode='34' classname='org.apache.camel.component.freemarker.FreemarkerComponent' start='92' end='92' sourcepath='org/apache/camel/component/freemarker/FreemarkerComponent.java' sourcefile='FreemarkerComponent.java' startBytecode='34'><Message>Synchronized access at FreemarkerComponent.java:[line 92]</Message></SourceLine><SourceLine role='SOURCE_LINE_SYNC_ACCESS' endBytecode='15' classname='org.apache.camel.component.freemarker.FreemarkerComponent' start='78' end='78' sourcepath='org/apache/camel/component/freemarker/FreemarkerComponent.java' sourcefile='FreemarkerComponent.java' startBytecode='15'><Message>Synchronized access at FreemarkerComponent.java:[line 78]</Message></SourceLine><SourceLine role='SOURCE_LINE_SYNC_ACCESS' endBytecode='19' classname='org.apache.camel.component.freemarker.FreemarkerComponent' start='79' end='79' sourcepath='org/apache/camel/component/freemarker/FreemarkerComponent.java' sourcefile='FreemarkerComponent.java' startBytecode='19'><Message>Synchronized access at FreemarkerComponent.java:[line 79]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='a3c05de5547a8052edc28fd2159ad0b7' cweid='396' rank='20' abbrev='REC' category='STYLE' priority='3' type='REC_CATCH_EXCEPTION' instanceOccurrenceMax='0'><ShortMessage>Exception is caught when Exception is not thrown</ShortMessage><LongMessage>Exception is caught when Exception is not thrown in org.apache.camel.component.freemarker.FreemarkerComponent$1.getURL(String)</LongMessage><Class classname='org.apache.camel.component.freemarker.FreemarkerComponent$1' primary='true'><SourceLine classname='org.apache.camel.component.freemarker.FreemarkerComponent$1' start='79' end='87' sourcepath='org/apache/camel/component/freemarker/FreemarkerComponent.java' sourcefile='FreemarkerComponent.java'><Message>At FreemarkerComponent.java:[lines 79-87]</Message></SourceLine><Message>In class org.apache.camel.component.freemarker.FreemarkerComponent$1</Message></Class><Method isStatic='false' classname='org.apache.camel.component.freemarker.FreemarkerComponent$1' signature='(Ljava/lang/String;)Ljava/net/URL;' name='getURL' primary='true'><SourceLine endBytecode='109' classname='org.apache.camel.component.freemarker.FreemarkerComponent$1' start='83' end='87' sourcepath='org/apache/camel/component/freemarker/FreemarkerComponent.java' sourcefile='FreemarkerComponent.java' startBytecode='0'></SourceLine><Message>In method org.apache.camel.component.freemarker.FreemarkerComponent$1.getURL(String)</Message></Method><SourceLine endBytecode='17' classname='org.apache.camel.component.freemarker.FreemarkerComponent$1' start='84' end='84' sourcepath='org/apache/camel/component/freemarker/FreemarkerComponent.java' sourcefile='FreemarkerComponent.java' startBytecode='17' primary='true'><Message>At FreemarkerComponent.java:[line 84]</Message></SourceLine></BugInstance><BugCategory category='STYLE'><Description>Dodgy code</Description></BugCategory><BugCategory category='MT_CORRECTNESS'><Description>Multithreaded correctness</Description></BugCategory><BugPattern abbrev='IS' category='MT_CORRECTNESS' type='IS2_INCONSISTENT_SYNC'><ShortDescription>Inconsistent synchronization</ShortDescription><Details>

  &lt;p&gt; The fields of this class appear to be accessed inconsistently with respect
  to synchronization.&amp;nbsp; This bug report indicates that the bug pattern detector
  judged that
  &lt;/p&gt;
  &lt;ul&gt;
  &lt;li&gt; The class contains a mix of locked and unlocked accesses,&lt;/li&gt;
  &lt;li&gt; The class is &lt;b&gt;not&lt;/b&gt; annotated as javax.annotation.concurrent.NotThreadSafe,&lt;/li&gt;
  &lt;li&gt; At least one locked access was performed by one of the class's own methods, and&lt;/li&gt;
  &lt;li&gt; The number of unsynchronized field accesses (reads and writes) was no more than
       one third of all accesses, with writes being weighed twice as high as reads&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt; A typical bug matching this bug pattern is forgetting to synchronize
  one of the methods in a class that is intended to be thread-safe.&lt;/p&gt;

  &lt;p&gt; You can select the nodes labeled "Unsynchronized access" to show the
  code locations where the detector believed that a field was accessed
  without synchronization.&lt;/p&gt;

  &lt;p&gt; Note that there are various sources of inaccuracy in this detector;
  for example, the detector cannot statically detect all situations in which
  a lock is held.&amp;nbsp; Also, even when the detector is accurate in
  distinguishing locked vs. unlocked accesses, the code in question may still
  be correct.&lt;/p&gt;


    </Details></BugPattern><BugPattern cweid='396' abbrev='REC' category='STYLE' type='REC_CATCH_EXCEPTION'><ShortDescription>Exception is caught when Exception is not thrown</ShortDescription><Details>
  
  &lt;p&gt;
  This method uses a try-catch block that catches Exception objects, but Exception is not
  thrown within the try block, and RuntimeException is not explicitly caught.  It is a common bug pattern to
  say try { ... } catch (Exception e) { something } as a shorthand for catching a number of types of exception
  each of whose catch blocks is identical, but this construct also accidentally catches RuntimeException as well,
  masking potential bugs.
  &lt;/p&gt;
  &lt;p&gt;A better approach is to either explicitly catch the specific exceptions that are thrown,
  or to explicitly catch RuntimeException exception, rethrow it, and then catch all non-Runtime Exceptions, as shown below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;try {
    ...
} catch (RuntimeException e) {
    throw e;
} catch (Exception e) {
    ... deal with all non-runtime exceptions ...
}
&lt;/code&gt;&lt;/pre&gt;
  
     </Details></BugPattern><BugCode abbrev='REC'><Description>RuntimeException capture</Description></BugCode><BugCode cweid='366' abbrev='IS'><Description>Inconsistent synchronization</Description></BugCode><Errors missingClasses='0' errors='0'></Errors><FindBugsSummary num_packages='1' total_classes='4' priority_2='1' priority_3='1' total_size='125' clock_seconds='2.57' referenced_classes='125' vm_version='25.222-b10' total_bugs='2' java_version='1.8.0_222' gc_seconds='0.07' alloc_mbytes='455.50' cpu_seconds='10.72' peak_mbytes='188.78' timestamp='Wed, 11 Sep 2019 15:11:21 +0200'><FileStats path='org/apache/camel/component/freemarker/FreemarkerComponent.java' size='46' bugHash='121fc8ab826d6af4c6ae3362ce9aa285' bugCount='2'></FileStats><FileStats path='org/apache/camel/component/freemarker/FreemarkerConstants.java' size='7' bugCount='0'></FileStats><FileStats path='org/apache/camel/component/freemarker/FreemarkerEndpoint.java' size='72' bugCount='0'></FileStats><PackageStats package='org.apache.camel.component.freemarker' total_bugs='2' priority_2='1' priority_3='1' total_size='125' total_types='4'><ClassStats bugs='1' size='38' priority_2='1' interface='false' sourceFile='FreemarkerComponent.java' class='org.apache.camel.component.freemarker.FreemarkerComponent'></ClassStats><ClassStats bugs='1' size='8' priority_3='1' interface='false' sourceFile='FreemarkerComponent.java' class='org.apache.camel.component.freemarker.FreemarkerComponent$1'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='FreemarkerConstants.java' class='org.apache.camel.component.freemarker.FreemarkerConstants'></ClassStats><ClassStats bugs='0' size='72' interface='false' sourceFile='FreemarkerEndpoint.java' class='org.apache.camel.component.freemarker.FreemarkerEndpoint'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='346' totalMilliseconds='338' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' maxMicrosecondsPerInvocation='1627' standardDeviationMicrosecondsPerInvocation='171' invocations='976'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='318' totalMilliseconds='308' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' maxMicrosecondsPerInvocation='15986' standardDeviationMicrosecondsPerInvocation='866' invocations='969'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1769' totalMilliseconds='221' name='edu.umd.cs.findbugs.detect.FieldItemSummary' maxMicrosecondsPerInvocation='44510' standardDeviationMicrosecondsPerInvocation='4997' invocations='125'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='8639' totalMilliseconds='190' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' maxMicrosecondsPerInvocation='185822' standardDeviationMicrosecondsPerInvocation='38665' invocations='22'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='997' totalMilliseconds='124' name='edu.umd.cs.findbugs.detect.FindNoSideEffectMethods' maxMicrosecondsPerInvocation='7673' standardDeviationMicrosecondsPerInvocation='1543' invocations='125'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='302' totalMilliseconds='96' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' maxMicrosecondsPerInvocation='3016' standardDeviationMicrosecondsPerInvocation='346' invocations='319'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='450' totalMilliseconds='56' name='edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers' maxMicrosecondsPerInvocation='5605' standardDeviationMicrosecondsPerInvocation='887' invocations='125'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='58' totalMilliseconds='54' name='edu.umd.cs.findbugs.util.TopologicalSort' maxMicrosecondsPerInvocation='3449' standardDeviationMicrosecondsPerInvocation='158' invocations='930'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='269' totalMilliseconds='52' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' maxMicrosecondsPerInvocation='16548' standardDeviationMicrosecondsPerInvocation='1237' invocations='193'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='320' totalMilliseconds='40' name='edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase' maxMicrosecondsPerInvocation='3360' standardDeviationMicrosecondsPerInvocation='595' invocations='125'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='306' totalMilliseconds='38' name='edu.umd.cs.findbugs.detect.BuildStringPassthruGraph' maxMicrosecondsPerInvocation='3491' standardDeviationMicrosecondsPerInvocation='553' invocations='125'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='281' totalMilliseconds='35' name='edu.umd.cs.findbugs.detect.CalledMethods' maxMicrosecondsPerInvocation='4488' standardDeviationMicrosecondsPerInvocation='529' invocations='125'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>